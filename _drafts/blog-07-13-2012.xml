  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-2937248757794621509</id>
    <published>2008-06-05T12:39:00.000-07:00</published>
    <updated>2008-06-05T12:50:13.181-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <title type='text'>An Introduction to Erlang</title>
    <content type='html'>As some of you may have guessed, I am a
    fan of Erlang. I think that it's a very interesting language
    with a tremendous amount of promise for the type of server side
    applications that I usually end up working on. I have talked a
    lot about various things here on Erlangish, so I thought it
    would finally be appropriate to spend a bit of time talking
    about the topic of the blog. For the most part I will be
    delving into the, somewhat obscure, history of Erlang. I will
    also spend a bit of time providing some instructions on how to
    get started with the language.&lt;br /&gt;&lt;br /&gt;&lt;span
    style="font-weight: bold;"&gt;So What Is Erlang and OTP?&lt;br
    /&gt;&lt;br /&gt;&lt;/span&gt;Erlang is a distributed,
    concurrent, soft real time functional programming language and
    runtime environment developed by Ericsson, the Telecoms
    Infrastructure supplier. It has built-in support for
    concurrency, distribution and fault tolerance. Since its open
    source release in 1999, Erlang has been adopted by many leading
    telecom and IT related companies. It is now successfully being
    used in other sectors including banking, finance, ecommerce and
    computer telephony.&lt;br /&gt;&lt;br /&gt;OTP is a large
    collection of libraries for Erlang to do everything from
    compiling ASN.1 to providing an application embeddable http
    server. It also consists of implementations of several patterns
    that have proven useful in massively concurrent development
    over the years. Most production Erlang applications are
    actually Erlang/OTP applications. OTP is also open source and
    distributed with Erlang.&lt;br /&gt;&lt;br /&gt;Although Erlang
    is a general purpose language, it has tried to fill a certain
    niche. This niche mostly consists of distributed, reliable,
    soft real-time concurrent systems. These types of applications
    are telecommunication systems, Servers and Database
    applications which require soft real-time behavior. Erlang
    excels at these types of systems because these are the types of
    systems that it was originally designed around. It contains a
    number of features that make it particularly useful in this
    arena. For example; it provides a simple and powerful model for
    error containment and fault tolerance; concurrency and message
    passing are a fundamental to the language, applications written
    in Erlang are often composed of hundreds or thousands of
    lightweight processes; Context switching between Erlang
    processes is typically several orders of magnitude cheaper than
    switching between threads in other languages; it's distribution
    mechanisms are transparent, programs need not be aware that
    they are distributed and The runtime system allows code in a
    running system to be updated without interrupting the
    program.&lt;br /&gt;&lt;br /&gt;Given that there are things
    that Erlang is good at there are bound to be a few things that
    it's not so good at. The most common class of 'less suitable'
    problems is characterized by iterative performance being a
    prime requirement with constant-factors having a large effect
    on performance. Typical examples are image processing, signal
    processing and sorting large volumes of data.&lt;br /&gt;&lt;br
    /&gt;&lt;span style="font-weight: bold;"&gt;Origins of
    Erlang&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;I am firmly
    convinced that Erlang's history is a key ingredient to its
    success. I am not aware of any other language whose early
    development was so straightforward and pragmatic. For most of
    its life Erlang was developed inside Ericsson, originally for
    internal use only. Later on it was made available to the
    external world and eventually open sourced. The timeline of its
    development goes something like this.&lt;br /&gt;&lt;br /&gt;
    1982&#226;&#8364;&#8220;1985 Ericsson identified some issues
    that existed with telecom languages at the time. To address
    these difficulties they started experiments with the
    programming of telecom applications using more then twenty
    different languages. These early experimenters came up with a
    few features that a useful system needed to supply. They
    realized that the target language must be a very high level
    symbolic language in order to achieve productivity gains. This
    new requirement vastly subseted the language space and resulted
    in a very short list of languages. The languages included Lisp,
    Prolog, Parlog, etc.&lt;br /&gt;&lt;br /&gt;
    1985&#226;&#8364;&#8220;1986 Further experiments within this
    subseted list where performed. New results were generated from
    this round of experiments as well. They found that the
    theoretically ideal language also needed to contain primitives
    for concurrency and error recovery, and the execution model
    needed to exclude back-tracking. This ruled out two more of the
    contending languages, Lisp and Prolog. This ideal language also
    needed to have a granularity of concurrency such that there
    would be a one to one relationship between one asynchronous
    telephony process and one process in the language. This ruled
    out Parlog. At the end of this round of experiments they where
    left with out any languages in the list they had started with.
    Being the pragmatic folks that they were, they decided to
    develop their own language with the desirable features of Lisp,
    Prolog and Parlog, but with superior concurrency and error
    recovery built into the language.&lt;br /&gt;&lt;br
    /&gt;&lt;ul&gt;&lt;li&gt; 1987 The first experiments began with
    this nascent language which became
    Erlang.&lt;/li&gt;&lt;li&gt;1988 The ACS/Dunder project was
    started at Ericsson. This was a prototype implementation of
    PABX by developers external to the core Erlang
    developers.&lt;/li&gt;&lt;li&gt;1989 The ACS/Dunder project
    became a full fledged project with the reconstruction of about
    a tenth of the complete, production PABX called the MD-110
    system. The preliminary results where very promising. In this
    early phase developer productivity was already ten times
    greater then during the development of the original system in
    the PLEX language. This reimplementation also pushed forward
    experiments directed at increasing the speed of
    Erlang.&lt;/li&gt;&lt;li&gt; 1991 At this point the experiments
    directed at speeding up Erlang bore fruit. A fast
    implementation of Erlang was released to growing user
    community. Erlang was also presented at an international
    telecom conference that year.&lt;/li&gt;&lt;li&gt; 1992 During
    this year the user base started growing significantly. Erlang
    was ported to VxWorks, PC, Macintosh and other platforms. Three
    new, complete applications were written in Erlang where
    presented at another conference. The first two production
    projects using Erlang are started.&lt;/li&gt;&lt;li&gt; 1993
    Distribution primitives where added to the language, which made
    it possible to run a homogeneous Erlang system on heterogeneous
    hardware. A corporate decision was made within Ericsson to
    begin selling and supporting Erlang externally. A new
    organizational structure was built up to maintain and support
    Erlang implementations and Erlang Tools. This resulted in the
    creation of Erlang Systems AB.&lt;/li&gt;&lt;li&gt; 1996 OTP
    was formed into a separate product group within Erlang Systems
    AB. This represented the maturing of the OTP platform within
    Erlang. After nearly ten years of development the (non-Erlang)
    AXE/N project was closed down and pronounced a failure. This
    left a large whole in Eriksson's product line and development
    of a new replacement product was started to fill it, it was
    decided that this replacement product would be written in
    Erlang.&lt;/li&gt;&lt;li&gt; 1998 After two years the AXE/N
    replacement project, now called the AXD301 was delivered.
    Around this same time the CEO of Ericsson Radio became the CEO
    of Ericsson as a whole. This person had banned Erlang at
    Ericsson Radio and though he never banned Erlang at Ericsson
    proper it became career suicide to propose Erlang new Erlang
    projects. This problem effectively killed opportunities for
    Erlang Systems AB to sell the language and support. The primary
    question potential customers asked was 'Who wants to use a
    language developed by Ericsson when Ericsson won't use the
    language itself?'. This just goes to show that corporate
    bureaucracy will be corporate bureaucracy autocracy no matter
    where you are. In any case, this turned into a bit of a
    blessing in disguise for the rest of
    us.&lt;/li&gt;&lt;li&gt;1998-99 In order to drive further
    development a decision was made within Erlang Systems AB to
    release Erlang as an Open Source project. This didn't imply an
    abandonment of Erlang by Ericsson or Erlang Systems AB. Erlang
    continued and continues to be supported by these two
    organizations. This decision was made wholly with the idea of
    spreading Erlang and removing the, somewhat negative, idea that
    it was a proprietary language. It has remained open source and
    supported to this day. &lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;As you
    can see the Erlang didn't start out as Erlang at all. It
    started out as just a series of requirements backed up by
    experiments. A large number of experiments where done to find
    the language that matched those requirements. When no existing
    language was found Ericsson decided to create their own.
    Considering Ericsson's resources and the costs associated with
    development of their products&lt;br /&gt;&lt;br /&gt;I think
    this was a very pragmatic decision. However, that conclusion is
    open to interpretation. In any case, after the initial
    development there was a constant back and forth dialog between
    the users and developers of the language as the language moved
    through its formative process. I think this fact alone is one
    of the reasons that Erlang is as good as it is today. Later on
    in its development as Ericsson grew less resourceful Erlang
    started to have political problems within the company. Even
    though Ericsson had several successful and profitable products
    in Erlang and other languages the de-facto ban occurred.
    Fortunately by this time Erlang could and did stand on its own.
    The ban actually turned out to be fortunate for the rest of us
    because it led, pretty directly, to Erlang's eventual Open
    Sourcing.&lt;br /&gt;&lt;br /&gt;Joe Armstrong, one of the
    original Erlang Developers and a productive member of the
    community put together a number of tutorials that are very
    useful. Its worth going through these and playing with the
    code.&lt;br /&gt;&lt;br /&gt; &lt;ul&gt;&lt;li&gt;&lt;a
    href="http://www.sics.se/%7Ejoe/tutorials/robust_server/robust_server.html"&gt;Robust
    Server&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a
    href="http://www.sics.se/%7Ejoe/tutorials/web_server/web_server.html"&gt;Web
    Server&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a
    href="http://www.sics.se/%7Ejoe/tutorials/client_server/client_server.html"&gt;Client
    Server&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a
    href="http://www.sics.se/%7Ejoe/tutorials/wiki/wiki.html"&gt;Wiki
    &lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; &lt;br /&gt;There are a couple
    of good editors to use with Erlang. The gold standard is the
    Erlang Emacs mode distributed as part of the Erlang distro. A
    very updated version is now available from the Erlware folks.
    You can get it &lt;a
    href="http://www.erlware.org/tools/erlware-mode/index.html"&gt;here&lt;/a&gt;
    If you go this route I suggest you also get &lt;a
    href="http://code.google.com/p/distel/"&gt;Distel&lt;/a&gt;, an
    add-on written by Luke Gorrie. It's available from the the good
    folks at &lt;a
    href="http://code.google.com/p/distel/"&gt;google
    code&lt;/a&gt;. There are instructions included with both of
    these to get you up and going. For those of you more inclined
    to the IDE world you may want to take a look at &lt;a
    href="http://erlide.sourceforge.net/"&gt;Erlide&lt;/a&gt;. This
    is a set of Eclipse plugins that add support for Erlang to
    Eclipse. Its still pretty beta, but it's very usable.&lt;br
    /&gt;&lt;br /&gt;&lt;span style="font-weight: bold;"&gt;So How
    Do I Get Started?&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;Learning
    Erlang is a fairly quick process. For an experienced developer
    it shouldn't take more then a few days before they can write
    nontrivial programs, about a week or two to feel really
    comfortable and a month or so before feeling ready to take on
    something big by themselves. It helps a lot to have someone who
    knows how to use Erlang around for some hand-holding.&lt;br
    /&gt;&lt;br /&gt;Start off by going through the quick start
    part of the &lt;a
    href="http://www.erlang.org/faq/quick_start.html"&gt;FAQ&lt;/a&gt;.
    Then go through the &lt;a
    href="http://www.erlang.org/course/course.html"&gt;Erlang
    Course&lt;/a&gt;. You can skip the history part if you would
    like. I have gone over it in more detail here. Once you have
    done the course play around with some of the &lt;a
    href="http://erlang.se/doc/doc-5.4.8/doc/programming_examples/part_frame.html"&gt;examples&lt;/a&gt;.
    Then go read the long version of the &lt;a
    href="http://www.erlang.org/doc/getting_started/part_frame.html"&gt;getting
    started docs&lt;/a&gt;. This should put you on the road to
    being able to write some Erlang code. If you are one to worry
    about coding conventions then you may want to take a look at
    &lt;a
    href="http://www.erlang.se/doc/programming_rules.shtml"&gt;http://www.erlang.se/doc/programming_rules.shtml&lt;/a&gt;.
    This has quite a number of useful and well thought out
    programming rules. One of the things that makes Erlang really
    interesting is the OTP System. If you really want to get to
    know something about Erlang then it make sense to spend a bit
    of time learning OTP and &lt;a
    href="http://www.erlang.org/doc/design_principles/part_frame.html"&gt;http://www.erlang.org/doc/design_principles/part_frame.html&lt;/a&gt;
    is a very good place to start.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/2937248757794621509' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/2937248757794621509' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2008/05/introduction-to-erlang.html'
    title='An Introduction to Erlang' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-41253636972880484</id>
    <published>2008-05-21T12:40:00.002-07:00</published>
    <updated>2008-05-22T10:10:43.470-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <title type='text'>An Overview of Concurrency</title>
    <content type='html'>&lt;span style="font-weight:
    bold;"&gt;Introduction&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Over
    the last few weeks I have had several conversations with people
    about concurrency, more specifically the ways in which shared
    information is handled in concurrent languages. I have gotten
    the impression that there isn't really a good understanding of
    whats out there in the world of concurrency. That being the
    case it would be a good idea to just give a quick overview of
    some of the mechanisms that are gaining mind share in the world
    of concurrency.&lt;br /&gt;&lt;br /&gt;Aside from some
    engineers that are currently so deep in their rut that they
    can't see sunlight its been accepted that the current
    mainstream approach to concurrency just wont work. The idea of
    using mutexes and locks to try to take advantage of the up and
    coming massively multi-core chips is really just laughable. We
    can't ignore this topic. As software engineers we don't really
    have a choice about supporting large numbers of CPUs, thats the
    direction that hardware is going its up to us to figure out how
    to make it work in software. Fortunately a bunch of really
    smart folks have been thinking about this problem for a really
    long time. A few of the things they have been working on are
    slowly making their way into the gestalt of the software
    world.&lt;br /&gt;&lt;br /&gt;We are going to talk about three
    things. They are Software Transactional Memory (STM), Dataflow
    Programing specifically Futures and Promises and Message
    Passing Concurrency. There are others, but these currently have
    the most mind share and the best implementations. I have
    limited space and limited time so I am going to stick to these
    three topics. You may have noticed that up to this point I have
    only talked about concurrency. More specifically the
    communication between processes in concurrent languages. Thats
    intentional, I am not going to talk about parallelism at all.
    Thats a different subject and only faintly related to
    concurrency, but often conflated with it. So if your looking
    for that you are looking in the wrong place. On another note, I
    am going to use processes and threads pretty much
    interchangeably. I know that in certain languages the two terms
    have very different meanings, however, in many other languages
    they mean the same or one of the terms doesn't apply. What I am
    getting at is that if you open the scope of the discussion to
    the languages at large the meanings become ambiguous. When I
    use the term process or thread I am talking about a single
    concurrent activity that may or may not communicate with other
    concurrent activities in same way. Thats about the best I can
    do for you.&lt;br /&gt;&lt;span style="font-weight:
    bold;"&gt;&lt;br /&gt;Traditional Shared Memory
    Communication&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Shared Memory
    Communication is the GOTO of our time. Like GOTO of years past
    its the current mainstream concurrent communication technique
    and has been for a long, long time. Just like GOTO, there are
    so many gotchas and ways to shoot yourself in the head that its
    scary. It so bad that this approach to concurrency has tainted
    an entire generation of engineers with an deeply abiding fear
    of concurrency in general. This great fear has crippled the
    ability of our industry to adapt to the new reality of
    multi-core systems. The sooner shared memory dies the horrible
    death it deserves then the better for us all. Having said that,
    I must now admit that, just like GOTOs, shared memory has a
    small niche where it probably can't be replaced. If you work in
    that niche then you already know you need shared memory and if
    you don't you don't. Just a hint, implementing business logic
    in services is not that niche. OK, I am all done with my rant
    and I feel much better, now on to the show.&lt;br /&gt;&lt;br
    /&gt;Shared memory typically refers to a large block of random
    access memory that can be accessed by several different
    concurrently running processes. This block of memory is
    protected by some type of guard that makes sure that the block
    of memory isn't being accessed by more then one process at any
    particular time. These guards usually take the form of Locks,
    Mutexes, Semaphores, etc. There are a bunch of problems with
    this shared memory approach. There is complexity in managing
    the serial access to the block of memory. There is complexity
    managing lock contention for a heavily used resources. There is
    a very real possibility of creating deadlocks in your code in a
    way that isn't easily visible to you as a developer. There is
    just all kinds of nastiness here. This type of concurrency is
    found in all the current mainstream programming and scripting
    languages, C, C++, Java, Perl, Python, etc. For whatever reason
    its ubiquitous and we have all been exposed to it that doesn't
    mean we have to accept it as the status quo.&lt;br /&gt;&lt;br
    /&gt;&lt;span style="font-weight: bold;"&gt;Software
    Transactional Memory (STM)&lt;/span&gt;&lt;br /&gt;&lt;br
    /&gt;The first non-traditional concurrency mechanism we are
    going to look at is Software Transactional Memory, or STM for
    short. The most popular embodiment of STM is currently
    available in the GHC implementation of Haskell. As for the
    description I will let &lt;a
    href="http://en.wikipedia.org/wiki/Software_transactional_memory"&gt;wikipedia&lt;/a&gt;
    handle it.&lt;br /&gt;&lt;blockquote&gt;&lt;br /&gt;Software
    transactional memory (STM) is a concurrency control mechanism
    analogous to database transactions for controlling access to
    shared memory in concurrent computing. It functions as an
    alternative to lock-based synchronization, and is typically
    implemented in a lock-free way. A transaction in this context
    is a piece of code that executes a series of reads and writes
    to shared memory. These reads and writes logically occur at a
    single instant in time; intermediate states are not visible to
    other (successful) transactions.&lt;/blockquote&gt;&lt;br
    /&gt;&lt;br /&gt;STM has a few benefits that aren't immediately
    obvious. First and foremost STM is optimistic. Every thread
    does what it needs to do without knowing or caring if another
    thread is working with the same data. At the end of a
    manipulation if everything is good and nothing has changed then
    the changes are committed. If problems or conflicts occur the
    change can be rolled back and retried. The cool part of this is
    that there isn't any waiting for resources. Threads can write
    to different parts of a structure without sharing any lock. The
    bad part about this is that you have to retry failed commits.
    There is also some, not insignificant, overhead involved with
    the transaction subsystem itself that causes a performance hit.
    Additionally in certain situations there may be a memory hit,
    ie if n processes are modifying the same amount of memory you
    would need O(n) of memory to support the transaction. This is a
    million times better then the mainstream shared memory approach
    and if its the only alternative available to you you should
    definitely use it. I still consider it shared memory at its
    core. Thats an argument that I have had many, many times.&lt;br
    /&gt;&lt;br /&gt;&lt;span style="font-weight:
    bold;"&gt;Dataflow - Futures and Promises&lt;/span&gt;&lt;br
    /&gt;&lt;br /&gt;Another approach to concurrency is the use of
    Futures and Promises. Its most visible implementation is in
    Mozart-Oz. Once again I will let &lt;a
    href="http://en.wikipedia.org/wiki/Futures_and_promises"&gt;wikipedia&lt;/a&gt;
    the description for me.&lt;br /&gt;&lt;br
    /&gt;&lt;blockquote&gt;In computer science, futures and
    promises are closely related constructs used for
    synchronization in some concurrent programming languages. They
    both refer to an object that acts as a proxy for a result that
    is initially not known, usually because the computation of its
    value has not yet completed.&lt;br /&gt;&lt;/blockquote&gt;Lets
    lay down the difference between Futures and Promises before we
    get started. A future is a contract that a &lt;span
    style="font-weight: bold;"&gt;specific&lt;/span&gt; thread
    will, at some point in the future, provide a value to fill that
    contract. A promise is, well a promise, that at some point
    &lt;span style="font-weight: bold;"&gt;some&lt;/span&gt; thread
    will provide the promised value. This is very much a dataflow
    style of programming and is mostly found in those languages
    that support that style, like Mozart-Oz and Alice ML.&lt;br
    /&gt;&lt;br /&gt;Futures and Promises are conceptually pretty
    simple. They make passing around data in concurrent systems
    pretty intuitive. They also serve as a good foundation on which
    to build up more complex structures like channels. Those
    languages that support Futures and Promises usually support
    advanced ideas like unification and in that context Futures and
    Promises work really well. However, although Futures and
    Promises remove the most egregious possibilities for
    dead-locking it is still possible in some cases.&lt;br
    /&gt;&lt;br /&gt;In the end both of these approaches involve
    shared memory. They both do a reasonably good job at mitigating
    the insidious problems of using shared memory, but they just
    mitigate those problems, they don't eliminate them. The next
    mechanism takes a completely different approach to the problem.
    For that reason it does manage to eliminate most of the
    problems involved with shared memory concurrency. Of course,
    there is always a trade off and in this case the trade off is
    in additional memory usage and copying costs. I am getting
    ahead of myself let me begin at the beginning and then proceed
    to the end in a linear fashion.&lt;br /&gt;&lt;span
    style="font-weight: bold;"&gt;&lt;br /&gt;Message Passing
    Concurrency&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;The third form
    of concurrency is built around message passing. Once again I
    will let &lt;a
    href="http://en.wikipedia.org/wiki/Message_Passing"&gt;wikipedia&lt;/a&gt;
    describe the system as it tends to be better at it then I
    am.&lt;br /&gt; &lt;blockquote&gt; Concurrent components
    communicate by exchanging messages (exemplified by Erlang and
    Occam). The exchange of messages may be carried out
    asynchronously (sometimes referred to as "send and pray",
    although it is standard practice to resend messages that are
    not acknowledged as received), or may use a rendezvous style in
    which the sender blocks until the message is received.
    Message-passing concurrency tends to be far easier to reason
    about than shared-memory concurrency, and is typically
    considered a more robust, although slower, form of concurrent
    programming. A wide variety of mathematical theories for
    understanding and analyzing message-passing systems are
    available, including the Actor model, and various process
    calculi.&lt;/blockquote&gt;Message passing concurrency is about
    processes communicating by sending messages to one another.
    Semantically these messages are completely separate entities
    unrelated to whatever data they where built from. This means
    that when you are writing code that uses this form of
    concurrency you don't need to worry about shared state at all,
    you just need to worry about how the messages will flow through
    your system. Of course, you don't get this for free. In many
    cases, message passing concurrency is built by doing a deep
    copy of the message before sending and then sending the copy
    instead of the actual message. The problem here is that that
    copy can be quite expensive for sufficiently large structures.
    This additional memory usage may have negative implications for
    you system if you are in any way memory constrained or are
    sending a lot of large messages. In practice, this means that
    you must be aware of and manage the size and complexity of the
    messages that you are sending and receiving. Much like Futures
    and Promises the most egregious 'shoot yourself in the head'
    possibilities of deadlocking are removed its still possible to
    do. You must be aware of that in your design and
    implementation.&lt;br /&gt;&lt;br /&gt;&lt;span
    style="font-weight: bold;"&gt;Conclusion&lt;/span&gt;&lt;br
    /&gt;&lt;br /&gt;In the end any one of these approaches is so
    much better then the shared memory approach that it almost
    doesn't matter which one you choose for your next project.
    However, they each have very different philosophical approaches
    to concurrency that greatly affect how you go about designing
    systems. You should explore each one so that you are able to
    make a logical decision about which one to use for your next
    project. That said, opinions are like umm, I can't really
    complete that, but you get my drift. My opinion on the subject
    is the message passing concurrency is by far the best of the
    three, where best is defined by most conceptually simple and
    scalable. In the end the industry will decide which direction
    is right for that and head in that direction. We are still to
    early in the multi-core age to get any good impression of which
    will win out.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/41253636972880484' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/41253636972880484' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2008/05/overview-of-concurrency.html'
    title='An Overview of Concurrency' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-2696282067342390117</id>
    <published>2008-03-21T23:39:00.000-07:00</published>
    <updated>2008-03-21T23:52:10.376-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='misc' />
    <title type='text'>Event Based Stream Parsing for JavaScript
    Object Notation (JSON)</title>
    <content type='html'>&lt;span
    style="font-weight:bold;"&gt;Overview&lt;/span&gt;&lt;br
    /&gt;&lt;br /&gt;I have been playing around with the idea of a
    stream based, sax like, parsing API for JSON. In my mind it has
    a few very direct benefits. I suspect that it would simplify
    implementing a parser for an already simple syntax. It would
    also allow for parsing arbitrarily large documents. In my case
    I need to return information to the user as quickly as
    possible, I absolutely cannot wait for the entire document to
    be parsed. This would solve that problem. All that said I
    seriously doubt that I am the first one to think of this,
    though I can't find any references to anything similar out
    there. If any of you have any pointers let me know in the
    comments and I will reference them. I plan to implement this in
    erlang and at least one other language. I will post links as
    soon as that is done. Without further ado.&lt;br /&gt;&lt;br
    /&gt;&lt;span
    style="font-weight:bold;"&gt;Abstract&lt;/span&gt;&lt;br
    /&gt;&lt;br /&gt;The JavaScript Object Notation (JSON) is
    defined in RFC 4627. This document describes method of parsing
    JSON using an event driven api. It is expect that details of
    implementation will change from language to language. However,
    this document should present a uniform approach to stream
    parsing of JSON&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;span
    style="font-weight:bold;"&gt;Introduction&lt;/span&gt;&lt;br
    /&gt;&lt;br /&gt;JavaScript Object Notation (JSON) is describe
    as a text format for serialization of structured data. More
    commonly it is used as a transport protocol for various network
    based applications. This document describes an event based
    parsing mechanism for JSON data that can be implemented in a
    simple and strait forward manner. Reading and understanding
    &lt;a href="http://www.ietf.org/rfc/rfc4627.txt"&gt;RFC
    4627&lt;/a&gt; is a prerequisite to reading and understanding
    this document.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;span
    style="font-weight:bold;"&gt;Description&lt;/span&gt;&lt;br
    /&gt;&lt;br /&gt;The stream oriented parser produces a series
    of events that describe the structure currently being parsed.
    These events are then consumed by the calling application in
    some manner. The actual mechanism of consumption will vary from
    language type to language type though a few different types of
    APIs are discussed in the appendix of this document.&lt;br
    /&gt;&lt;br /&gt;JSON is composed of two types of data
    structures primitive and complex types. The events for the two
    types of structures remain the same, changing only in the
    description of the structure being described.&lt;br /&gt;&lt;br
    /&gt;The events around primitive types are relatively simple
    and should be implemented as simply as possible. Individual API
    definers will choose how they want to implement it using the
    examples in the appendix as a guide.&lt;br /&gt;&lt;br
    /&gt;&lt;br /&gt;Primitive types in JSON are strings, numbers,
    booleans and null. These are described within the event
    itself&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;&lt;br /&gt; string =
    STRING_DATA(value)&lt;br /&gt; number =
    NUMBER_DATA(value)&lt;br /&gt; boolean =
    BOOLEAN_DATA(value)&lt;br /&gt; null = NULL_DATA(value)&lt;br
    /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;br /&gt;Complex types in JSON
    are objects and arrays. These are represented by a series of
    events that describe the object. Because they are complex types
    their representation is much more complex then that of
    primitive types. However, it allows the object to be consumed
    as it occurred in the stream.&lt;br /&gt;&lt;br
    /&gt;&lt;pre&gt;&lt;br /&gt; object = OBJECT_BEGIN&lt;br /&gt;
    KEY(string_value)&lt;br /&gt; VALUE_BEGIN&lt;br /&gt; ... #
    recursive type description&lt;br /&gt; VALUE_END&lt;br /&gt;
    ... # arbitrary number of additional key/value pairs&lt;br
    /&gt; OBJECT_END&lt;br /&gt;&lt;br /&gt; array =
    ARRAY_BEGIN&lt;br /&gt; VALUE_BEGIN&lt;br /&gt; ... # recursive
    type description&lt;br /&gt; VALUE_END&lt;br /&gt;
    ARRAY_END&lt;br /&gt;&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;br
    /&gt;&lt;span style="font-weight:bold;"&gt;Callback API
    Description for Erlang&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;This
    would be implemented as a behavior that defines these
    callbacks. Client code that wishes to receive these callbacks
    would implement these methods. This should allow a high degree
    of flexibility for the client. &lt;br /&gt;&lt;pre&gt;&lt;br
    /&gt; %% should guard data will be one of the primitive
    types&lt;br /&gt; %% null will be represented by the atom
    null&lt;br /&gt; data(Value, State) -&gt; State2&lt;br
    /&gt;&lt;br /&gt; object_begin(State) -&gt; State2&lt;br
    /&gt;&lt;br /&gt; object_end(State) -&gt; State2&lt;br
    /&gt;&lt;br /&gt; key(Value, State) -&gt; State2&lt;br
    /&gt;&lt;br /&gt; value_begin(State) -&gt; State2&lt;br
    /&gt;&lt;br /&gt; value_end(State) -&gt; State2&lt;br
    /&gt;&lt;br /&gt; array_begin(State) -&gt; State2&lt;br
    /&gt;&lt;br /&gt; array_end(State) -&gt; State2&lt;br
    /&gt;&lt;/pre&gt;</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/2696282067342390117' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/2696282067342390117' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2008/03/event-based-stream-parsing-for.html'
    title='Event Based Stream Parsing for JavaScript Object Notation (JSON)' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-506291679922614046</id>
    <published>2007-12-19T16:09:00.001-08:00</published>
    <updated>2007-12-19T16:10:25.086-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <title type='text'>Erlware Progress Update</title>
    <content type='html'>I have had very little time to post of
    late. The&lt;br /&gt; other maintainers and I have been coding
    feverishly to get&lt;br /&gt; the erlware system to version 1.0
    by the end of January. This has&lt;br /&gt; taken up a huge
    amount of my time, leaving me very little to&lt;br /&gt; time
    to blog. It been so long now that I feel bad. So&lt;br /&gt; I
    decided that I needed to spend a bit of time talking how&lt;br
    /&gt; development in our new model is going.&lt;br /&gt;&lt;br
    /&gt; All I can say is &lt;b&gt;wow&lt;/b&gt;! This Open
    Development Model has&lt;br /&gt; proven to be a huge boon to
    the project. Not only has it&lt;br /&gt; encouraged user
    participation by a large margin, it has also&lt;br /&gt;
    encouraged quite a bit more design process. Rather&lt;br /&gt;
    spontaneously the maintainers have started to submit
    design&lt;br /&gt; specs when they are preparing to do major
    changes. These design&lt;br /&gt; specs are usually one pagers
    that give a high level overview of&lt;br /&gt; the problem and
    describe the nature of the fix the developer is&lt;br /&gt;
    implementing. It lets the community and the other
    maintainers&lt;br /&gt; know and comment on whats upcoming. It
    also makes the developer&lt;br /&gt; think more closely about
    the changes he is planning to make to&lt;br /&gt; the system.
    All in all it doesn't take a large amount of time&lt;br /&gt;
    and its helps increase the quality of our offering. Since
    each&lt;br /&gt; design spec goes to the mailing list it fits
    right in with the&lt;br /&gt; low level patch model. I like
    it.&lt;br /&gt;&lt;br /&gt; Another major development is that
    we have moved our website to&lt;br /&gt; the Open Development
    Model. Originally, we used &lt;a
    href="http://wiki.splitbrain.org/wiki:dokuwiki"&gt;dokuwiki&lt;/a&gt;
    for&lt;br /&gt; our website. Dokuwiki is an great product, but
    its a wiki with&lt;br /&gt; the attendant problems that a wiki
    has. In our case, we had kept&lt;br /&gt; wiki access pretty
    limited. Only the core maintainers actually&lt;br /&gt; had
    access to it. This made it hard for the community to fix&lt;br
    /&gt; issues and expand docs. What we really wanted was to
    combine the&lt;br /&gt; easy editing of the wiki with our,
    somewhat more careful, patch&lt;br /&gt; based approach to
    changes. We spent some time thinking about the&lt;br /&gt;
    problem and decided that it would be best if our site was&lt;br
    /&gt; updatable, via git, just like the rest of our projects.
    However,&lt;br /&gt; we really didn't want to hand edit html
    and do all the manual&lt;br /&gt; work involved. We liked the
    readable usable wiki syntax. We&lt;br /&gt; needed some mix of
    wiki with static source files. We went to&lt;br /&gt; google
    with low expectations. We where pleasently surprised by&lt;br
    /&gt; the number of good offerings in various languages.
    Eventually we&lt;br /&gt; settled on &lt;a
    href="http://webgen.rubyforge.org/"&gt;webgen&lt;/a&gt;. This
    is a nice&lt;br /&gt; little ruby framework for static site
    generation. It supports&lt;br /&gt; various markups, including
    our choice &lt;a
    href="http://daringfireball.net/projects/markdown/"&gt;Markdown&lt;/a&gt;.
    What&lt;br /&gt; we ended up with is an open site with very
    nice wikish syntax&lt;br /&gt; that is easy to extend and
    change via a model that our&lt;br /&gt; contributors are
    familiar with.&lt;br /&gt;&lt;br /&gt; Once a change is in our
    canonical git repo getting the changes&lt;br /&gt; onto the
    sight is completly automated. A cronjob on our server&lt;br
    /&gt; pulls the site from the repository and runs the
    generator. Then&lt;br /&gt; runs rsync to push the changes into
    the area that they are&lt;br /&gt; served from. This is a very
    recent change so we don't actually&lt;br /&gt; know if it will
    accomplish our purpose of more contributions to&lt;br /&gt; the
    site. One unexpected side benefit is that our site is now&lt;br
    /&gt; really fast. All the work is happening at generation time
    so&lt;br /&gt; the server just needs to serve static html
    files.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/506291679922614046' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/506291679922614046' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/12/erlware-progress-update.html'
    title='Erlware Progress Update' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-4164534942599055218</id>
    <published>2007-11-02T19:29:00.000-07:00</published>
    <updated>2007-11-02T19:30:48.439-07:00</updated>
    <app:control xmlns:app='http://purl.org/atom/app#'>
      <app:draft>yes</app:draft>
    </app:control>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <title type='text'>Individual Git Development</title>
    <content type='html'>Last time I talked about organising a
    project around developing with git. This time I am going to
    talk about how to be an individual contributor on a git based
    project.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/4164534942599055218' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/4164534942599055218' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-311098628575913304</id>
    <published>2007-10-25T23:43:00.000-07:00</published>
    <updated>2007-11-22T16:31:23.813-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='erlware' />
    <title type='text'>Erlware and the Git Development
    Model</title>
    <content type='html'>&lt;span
    style="font-size:130%;"&gt;&lt;span style="font-weight:
    bold;"&gt;Introduction&lt;/span&gt;&lt;/span&gt;&lt;br
    /&gt;&lt;br /&gt;Recently the core commiters for Erlware,
    mostly Martin and I, have decided to migrate Erlware's source
    control system from the previous Google hosted subversion
    repository to self-hosted git. &lt;a
    href="http://www.youtube.com/watch?v=4XpnKHJAok8"&gt;Linus'
    Tech Talk on Git&lt;/a&gt; convinced us that this was a good
    idea. This isn't just a source control change, but a
    methodology change. It changes the way code gets from it's
    source (the Erlware community) into Erlware itself. The main
    things we really want to get out of this migration is&lt;br
    /&gt;&lt;br /&gt;&lt;ol&gt;&lt;li&gt;Greater visibility into
    the code base for participants&lt;/li&gt;&lt;li&gt;Increased
    code quality&lt;/li&gt;&lt;li&gt;Faster, cleaner incremental
    development&lt;br /&gt;&lt;/li&gt;&lt;/ol&gt;&lt;br /&gt;It's
    yet to be seen whether we will achieve our third goal, but we
    have already achieved the first two, which is
    encouraging.&lt;br /&gt;&lt;br /&gt;We have had a few false
    starts. That is just to be expected. When we first started, we
    took the easy default and just replaced the central subversion
    repository with a git repository. We then treated that git
    repository as if it were just another subversion repo. That
    makes for a nasty commit history and it doesn't leverage git's
    new development model very well at all. So I started searching
    for information about how to do a large project in git in a
    truly distributed fashion. Let me tell you, there just isn't
    that much information out there about organising a project
    around git. Its just not there! Some people are working on
    that, I hear. In any case, I finally pulled aside a friend (hey
    &lt;a href="http://srparish.net/"&gt;Scott&lt;/a&gt;!), who was
    familiar with git, and asked them how this whole distributed
    development thing is supposed to work. Much to my amazement he
    actually knew! He could even explain it to a dim bulb like
    me!&lt;br /&gt;&lt;br /&gt;What follows describes how we are
    implementing git in Erlware. It is based on what Scott told me,
    lurking on the git mailing list and widely varied sources out
    there on the interweb.&lt;br /&gt;&lt;br /&gt;&lt;span
    style="font-weight: bold;font-size:130%;" &gt;The Development
    Model&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;The model we are
    using is actually dirt-simple. Each person has one or more
    personal git repositories. This is where they do their hacking
    and keep track of their commit history. There is one canonical
    repository. However, this canonical repository never has
    commits pushed to it directly. To get some change into the
    canonical repository (and into the project) you have to send a
    patch representing your change to the &lt;a
    href="http://groups.google.com/group/erlware-dev"&gt;erlware-dev@googlegroups.com&lt;/a&gt;
    mailing list. This means that every single change is pushed out
    and viewed by everyone on the mailing list. If we foster the
    community well, people will give good feedback and code
    reviews. Hopefully, we can build a community that is as engaged
    as the community that surrounds git itself.&lt;br /&gt;&lt;br
    /&gt;In any case, once the patch arrives on the list, gets
    commented upon, changed as required, etc, it will be applied to
    the canonical repository and become part of Erlware. Think
    about this for a second, every change to Erlware goes through
    the Erlware dev list as a patch. Every member of the community
    has a chance to comment, critique and discuss it. The direction
    of the project is obvious to anyone who has access to the
    mailing list, which is anyone that wants access. It makes it
    extraordinarily easy for anyone to contribute to the project
    without ever having to code. They can just subscribe to the
    list and provide their knowledge and insight on the code
    passing through to the implementers of the patch. Of course,
    the commiters have the final say into what actually makes it
    into the canonical repository. However, the community has a
    huge amount of leeway in making sure that the code is correct
    and of the highest quality.&lt;br /&gt;&lt;br /&gt;&lt;br
    /&gt;You may think that having to submit a patch would surely
    slow down development on the project. However, you would be
    wrong. Each developer has his own personal repository with
    which he can do anything he wants. We encourage developers, and
    require commiters, to make their repository publicly available.
    So that developers and anyone working with that developer can
    have easy access to each other's code. Their development
    velocity can be anything they are comfortable with. When they
    finally have something that they think is ready for commit to
    the canonical repository, they can create patches and submit
    them. Of course, they will need to spend some time actually
    refactoring their changes into a nice set of small interrelated
    patches. This, though, is time well spent and will give them
    one final chance to refactor their code.&lt;br /&gt;&lt;br
    /&gt;Overall, this should be a huge boost to our productivity
    as a project and our transparency as project leaders.&lt;br
    /&gt;&lt;span style="font-size:130%;"&gt;&lt;br
    /&gt;&lt;/span&gt;&lt;span style="font-weight:
    bold;font-size:130%;" &gt;The Nuts and Bolts&lt;/span&gt;&lt;br
    /&gt;&lt;br /&gt;Actually getting this entire thing set up
    isn't a trivial project. You need to have some public place to
    put your git repo, http://git.erlware.org/git or
    git://git.erlware.org/git in our case). You need to set up that
    repo with, at the very least, an http server fronting it. You
    should probably also set up the git-daemon. It makes cloning a
    git repository very, very fast. Much faster then cloning a
    repository over http. git-daemon doesn't really have any idea
    of permissions or users though. So you should set this up for
    read access only. You do that by making sure that the user
    git-daemon is running as doesn't have authority to write to any
    of the files in the repo.&lt;br /&gt;&lt;span
    style="font-weight: bold;font-size:130%;" &gt;&lt;br
    /&gt;&lt;span style="font-size:100%;"&gt;Setting Up a Git
    Repo&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;These
    instructions work whether you are setting up your own
    repository or the canonical repository.&lt;br /&gt;&lt;br
    /&gt;1) Create a directory for your repos. You can just use
    mkdir for this, though if you are going to have multiple
    submitters you probably want to set the sticky group bit on the
    directory.&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;&lt;br /&gt;$&gt;
    mkdir repo_dir&lt;br /&gt;$&gt; chown
    me:group_that_every_commiter_is_in repo_dir&lt;br /&gt;$&gt;
    chmod g+s repo_dir&lt;br /&gt;$&gt; cd repo_dir&lt;br
    /&gt;$&gt; mkdir project_git_dir&lt;br /&gt;$&gt; cd
    project_git_dir&lt;br /&gt;$&gt; git --bare init&lt;br
    /&gt;&lt;/pre&gt;&lt;br /&gt;This is going to act as a public
    server, so we want to enable a bit of index generation. To do
    that we simply make the post_update hook executable. Git will
    do the right thing with that.&lt;br /&gt;&lt;pre&gt;&lt;br
    /&gt;$&gt; chmod a+x hooks/post_update&lt;br
    /&gt;&lt;/pre&gt;&lt;br /&gt;If you look in post update you
    will see the command 'git-update-server-info'. This command
    allows git to update the indices that it needs when cloning
    over a 'dumb' protocol like http.&lt;br /&gt;&lt;br /&gt;Point
    your http server at the repo and you are done! If you want to
    do some fancy stuff like send an email on every commit then you
    need to get then copy the post_receive_email script from the
    contrib/hooks directory of the git source tar ball to
    hooks/post_receive in your git repo. Then make that file
    executable. You need to fiddle with the config a bit, but the
    instructions for how to do that are in the file itself so there
    isn't any need to repeat it here.&lt;br /&gt;&lt;pre&gt;&lt;br
    /&gt;$&gt; cp
    &lt;git_source&gt;/contrib/hooks/post_receive_email
    ./hooks/post-receive&lt;br /&gt;$&gt; chmod a+x
    ./hooks/post-receive&lt;br
    /&gt;&lt;/git_source&gt;&lt;/pre&gt;&lt;br /&gt;&lt;span
    style="font-weight: bold;font-size:100%;" &gt;Working as a
    Member of The Project&lt;/span&gt;&lt;br /&gt;&lt;br
    /&gt;Working with a git project means that there are three
    commands that you are going to be using quite a lot. These are
    &lt;a
    href="http://www.kernel.org/pub/software/scm/git/docs/git-format-patch.html"&gt;git-format-patch&lt;/a&gt;,&lt;a
    href="http://www.kernel.org/pub/software/scm/git/docs/git-send-email.html"&gt;
    git-send-email&lt;/a&gt;, and &lt;a
    href="http://www.kernel.org/pub/software/scm/git/docs/git-am.html"&gt;git-am&lt;/a&gt;.
    Getting good with these commands will let you interact well
    with Erlware and any other git based project.&lt;br /&gt;&lt;br
    /&gt;&lt;a
    href="http://www.kernel.org/pub/software/scm/git/docs/git-format-patch.html"&gt;git-format-patch&lt;/a&gt;
    takes some command line options to detail which commits you
    want to turn into patches and then writes the appropriate
    patches out a set of files, one patch per commit. Its dirt
    simple, though you will need to learn how to structure your
    commits in a reasonable way. This isn't hard, but it is a bit
    involved so I will save that process for another blog. In any
    case, you will learn how to do it pretty quick once you start
    supplying patches.&lt;br /&gt;&lt;br /&gt;&lt;a
    href="http://www.kernel.org/pub/software/scm/git/docs/git-send-email.html"&gt;git-send-email&lt;/a&gt;
    lets you take the patches created by git-format-patch and send
    them to a specified email address. The process is very well
    documented in the man page linked above so there really isn't
    any need to go into much detail. One note though, if you are a
    gmail user and don't already have sendmail or procmail setup to
    use gmail, I suggest you use &lt;a
    href="http://msmtp.sourceforge.net/"&gt;msmtp&lt;/a&gt;. There
    are detail instructions on how to do it on the &lt;a
    href="http://www.blogger.com/%5Bhttp://git.or.cz/gitwiki/GitTips#head-a015948617d9becbdc9836776f96ad244ba87cb8"&gt;GitTips&lt;/a&gt;
    page of the GitWiki. If you are as blunt as I am, following the
    instructions there will save you a huge amount of time.&lt;br
    /&gt;&lt;br /&gt;Finally, &lt;a
    href="http://www.kernel.org/pub/software/scm/git/docs/git-am.html"&gt;git-am&lt;/a&gt;
    allows you to take patches from the mailing list and apply them
    to your local git repository. It understands both mbox format
    and raw patches generated by git-format-patch. This makes it
    pretty damn useful. You can set up a pull from your mail server
    to a local mbox and then just run git-am on it. You can also
    just pull the patches manually and run git-am on those. The
    whole process is really well thought out and very, very
    simple.&lt;br /&gt;&lt;br /&gt;The only real problem that I
    have had so far is that git-send-email doesn't let you prepend
    any information to the subject line of the sent email. They all
    end up with [PATCH] &lt;git commit="" message=""&gt;. This
    would be fine for most projects but we run several projects
    under Erlware and it would be really nice if we could do
    something so that the subject looked something like
    [PROJECT][PATCH] &lt;git commit="" message=""&gt;. Anything
    that would let us indicate the project would be great. When and
    if I get some time I intend to remedy this and send a patch
    back to the git community.&lt;br /&gt;&lt;br /&gt;&lt;span
    style="font-weight: bold;font-size:130%;" &gt;&lt;br
    /&gt;Conclusion&lt;/span&gt;&lt;span
    style="font-size:130%;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;br
    /&gt;That's it. No doubt I have missed a huge number of things.
    Hopefully, the commenters will be nitpicky and point them out
    so I can fix the problems. I am really excited about this new
    model and expect it to do some really awesome things for our
    project. If it doesn't do anything but spread knowledge about
    the codebase to all our commiters I will be overjoyed.&lt;br
    /&gt;&lt;/git&gt;&lt;/git&gt;</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/311098628575913304' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/311098628575913304' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/10/erlware-and-git-development-model.html'
    title='Erlware and the Git Development Model' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-8753068185453494098</id>
    <published>2007-10-06T18:37:00.000-07:00</published>
    <updated>2007-10-06T18:56:43.537-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='erlware' />
    <title type='text'>New faxien</title>
    <content type='html'>So its been a little bit since I posted.
    We have been working hard and heavy on several changes to the
    erlware repo formats. One of the big time sinks in this project
    has been writing a bootstrapper/otp release launcher for
    faxien. Well let me break out the two before I go into
    details.&lt;br /&gt;&lt;br /&gt;&lt;span style="font-weight:
    bold;"&gt;The Repository&lt;/span&gt;&lt;br /&gt;A few months
    ago we made some changes to the repository to reduce the
    complexity and reduce the total number of release versions we
    had to keep around. Originally we organized the OTP apps in our
    repository around the erts version number, major, minor and
    patch. This worked but it meant we had a lot of copies of the
    same apps laying around. We had hoped that we would be able to
    organize it around the erts major, minor version instead. This
    would have saved a huge amount of space. so we made some
    changes in support of that. Well after we made those changes we
    found out that the patch version number wasn't as unimportant
    as we thought. In fact, among other things it seems that the
    OTP guys feel free to modify the wire protocol in patch
    versions. They also change the magic version numbers in the c
    lib so that they wont communicate with with an erts with a
    patch version different then what they where compiled for. What
    this means for us is that we had to go back to supporting
    major, minor and patch versions. We also changed the way
    release packages are stored in the repo. Not much, but enough
    to require some code changes. All this took more time then we
    would have liked.&lt;br /&gt;&lt;br /&gt;&lt;span
    style="font-weight: bold;"&gt;The Faxien
    Bootstrapper&lt;/span&gt;&lt;br /&gt;The other problem we had
    is around matching erts versions with releases that faxien
    pulls down. In the past we used whatever version or erts/erlang
    was available on the local box. This caused problems if faxien
    was built for a version of erts that was greater then the one
    present on the box. Of course, this would be a problem for any
    and every bit of erlang code that faxien pulls down as well. So
    we had to come up with a way to pull down an erts to run on as
    well as the code to run. This meant that we had to come up with
    some way to bootstrap the system. After much thought and quite
    a few experiments we decided to write a minimal bootstrapper in
    ocaml. What this means is that folks can download a small
    binary that will pull down the required erts version, faxien
    and all its dependencies. The bootstrapper will then launch
    faxien to complete the install process. &lt;br /&gt;&lt;br
    /&gt;With this approach the user doesn't need to have erlang on
    their system at all. They just pull down 'faxien' and it pulls
    down everything thats required. Thats pretty cool. It also only
    pulls whats needed so instead of going out and getting 20 megs
    of erlang distribution they will get what they need and just
    what they need. &lt;br /&gt;&lt;br /&gt;We put in a few other
    nifty features to make command line OTP releases easier and to
    make cross platform OTP launch scripts easer to write. However,
    I will talk about those in a different post.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/8753068185453494098' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/8753068185453494098' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/10/new-faxien.html'
    title='New faxien' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-6216069213302856215</id>
    <published>2007-07-10T15:41:00.000-07:00</published>
    <updated>2007-07-10T15:46:16.173-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='sinan' />
    <title type='text'>Sinan 0.8.4 Alpha is Out</title>
    <content type='html'>The &lt;a
    href="http://code.google.com/p/sinan/downloads/list"&gt;latest
    version&lt;/a&gt; of Sinan is out. This version adds support
    for spawning a new Erlang node with shell for the current
    project. This makes debugging and exploratory programming much,
    much easier. It also spawns the node with an sname
    'sinan_shell' so that the new shell will interact well with
    distel. This is a change that a lot of people have asked for
    and I am pleased to be able to integrate it.&lt;br /&gt;&lt;br
    /&gt;I am still having issues with the analyze task that I am
    working through. However, I hope to have it fixed and working
    shortly.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/6216069213302856215' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/6216069213302856215' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/07/sinan-084-alpha-is-out.html'
    title='Sinan 0.8.4 Alpha is Out' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-1342130227258194021</id>
    <published>2007-06-25T14:26:00.000-07:00</published>
    <updated>2007-06-26T15:23:24.610-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='misc' />
    <title type='text'>Distributed Bug Tracking - Again</title>
    <content type='html'>This is a bit of a clarification and
    expansion on a &lt;a
    href="http://erlangish.blogspot.com/2007/05/distributed-bug-tracking.html"&gt;previous
    topic&lt;/a&gt; of this blog. To recap what I was talking about
    was a distributed issue tracking system making use of an
    underlying distributed version control system for its
    versioning, but augmented by command line tools that support
    necessary issue tracking features; like searching, merging,
    etc. Distributed issue tracking is a very new thing and has a
    few hurtles to overcome. I am going to talk about what these
    hurtles are and offer some ideas on how to overcome them.&lt;br
    /&gt;&lt;br /&gt;In the &lt;a
    href="https://www.blogger.com/comment.g?blogID=7012030999962875668&amp;postID=5049029583926631782"&gt;comments&lt;/a&gt;
    of the last blog post on this topic &lt;a
    href="http://www.geekfire.com/~alex/blog/"&gt;Alex&lt;/a&gt;
    and I had a reasonably long conversation around merging. He
    ended up posting his thoughts &lt;a
    href="http://www.geekfire.com/~alex/blog/entries/Ideas-for-a-distributed-bug-tracking-system/Ideas-for-a-distributed-bug-tracking-system.html"&gt;here&lt;/a&gt;.
    Alex has some interesting and useful ideas, though we differ in
    some specifics.&lt;br /&gt;&lt;br /&gt;&lt;span
    style="font-weight:bold;"&gt;Merging and
    Discovery&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;In the last
    article I used the term 'merging' in a ambiguous way. I used it
    to refer to both merging two issues into one another and
    finding the duplicate issues. For the rest of this article I am
    going to refer to merging as merging two issues and discovery
    as finding issue duplications. This should reduce the ambiguity
    a bit.&lt;br /&gt;&lt;br /&gt;&lt;span
    style="font-weight:bold;"&gt;Merging Multiple Changes To The
    Same Issue&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Merging is
    actually a pretty strait forward concept. I think you can treat
    issues the same way you treat a source file when a merge
    conflict occurs. By automatically merging what you can and
    allowing the user to resolve conflicts manually you get
    reasonable merge behavior with a high probability of a correct
    result. There is some overhead for the user but, as with source
    changes, it shouldn't be onerous.&lt;br /&gt;&lt;br
    /&gt;&lt;span style="font-weight:bold;"&gt;Merging Two Issues
    Into A Single Issue&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;This
    problem is slightly more complex but its really just an
    extension of the last topic we talked about. In this case we
    just apply that merge algorithm to two disparate issues instead
    of two versions of a single issue. There may be some ambiguity
    around which issue becomes the canonical issue and how to merge
    history for these two files, however, these issues are mostly
    solved in distributed version control systems and those
    solutions would work just fine in this instance as well.&lt;br
    /&gt;&lt;br /&gt;&lt;span
    style="font-weight:bold;"&gt;Discovery&lt;/span&gt;&lt;br
    /&gt;&lt;br /&gt;Discovery is by far the most complex issue
    here and its a problem that occurs in any issue tracking
    system. Unfortunately, in a distributed issue tracking system
    the problem has the potential to be much much worse then in an
    issue tracking system with a central repository. This is due to
    the fact that each and every user has his own canonical version
    of the issue repository. For example: User Y sees a bug in the
    system and enters Issue X to describe it and User Z sees the
    exact same bug at a similar time and enters Issue W to describe
    it. Because User X and Z both have canonical versions of the
    issue repository and they have yet to sync their repositories
    there is no way for either user to detect that a issue has
    already been created for that bug. So when they replicate
    suddenly there are multiple issues in both repositories. &lt;br
    /&gt;&lt;br /&gt;In more normal issue tracking systems this can
    be mitigated to some extent by encouraging your users to search
    for existing bugs first and having people familiar with the
    issue repository reviewing new issues as they are entered.
    However, this approach wont work with a distributed issue
    tracking system because each user has a private canonical set
    until he syncs with some other user. I believe that this
    problem will be one of the fundamental problems that will
    plague new distributed issue tracking system for some
    time.&lt;br /&gt;&lt;br /&gt;There are ways to mitigate this.
    There are very good document similarity algorithms out there
    and applying them to this problem wouldn't be too difficult.
    Unfortunately, the text associated with issues tends to be very
    short and this doesn't give these similarity algorithms much
    room to work. There are ways we can mitigate these problems
    though.&lt;br /&gt;&lt;br /&gt;First we can reduce the total
    document corpus by using attributes of the issue to subset the
    issues for similarity searching. For example, we might only
    search for similarities within issues that have a specific
    component tag. Actually, generalizing this statement we can
    just use emantic properties of the issue to subset the issues
    that we need to process for the similarity search.&lt;br
    /&gt;&lt;br /&gt;Second we need to give the user a fast and
    easy way to run through the output of a similarity search and
    approve/disapprove the merge. This should be something that
    allows the user to view the issues side by side and hit a
    single button or key combination to approve or disprove the
    merge, then the next set pops up. This cycle would allow the
    user to quickly move through all possible matches. If this
    worked well we may be able to loosen the similarity constraints
    a bit to allow for more matches.&lt;br /&gt;&lt;br
    /&gt;Hopefully, a combination of approaches will make the
    discovery issue more tractable.&lt;br /&gt;&lt;br /&gt;&lt;span
    style="font-weight:bold;"&gt;Referencing &lt;/span&gt;&lt;br
    /&gt;&lt;br /&gt;The third and last major problem (there are
    undoubtedly others that I can't think of right now) is simple
    referencing. There needs to be a way to reference an issue
    regardless of the repository its on or where it was created.
    The easiest way to do that would be to make use of simple &lt;a
    href="http://en.wikipedia.org/wiki/UUID"&gt;UUIDs&lt;/a&gt; for
    issue identifiers. They are a bit unwieldy but their inherent
    uniqueness makes them usable for our purposes. We can reduce
    the level of pain in using UUIDs manually by allowing the user
    to specify the unique part of a UUID in the tools that support
    this distributed issue tracking system. I think monotone and,
    maybe git, allow something similar for change set
    identifiers.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/1342130227258194021' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/1342130227258194021' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/06/distributed-bug-tracking-again.html'
    title='Distributed Bug Tracking - Again' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-8357633642576677337</id>
    <published>2007-05-29T17:52:00.000-07:00</published>
    <updated>2007-06-01T20:36:08.404-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='misc' />
    <title type='text'>The Shape Of Your Mind</title>
    <content type='html'>In several cultures through out history,
    like the &lt;a
    href="http://www.chiangmai-chiangrai.com/longneck_karen.html"&gt;Karen
    Paduang of Southeast Asia&lt;/a&gt;, the ancient &lt;a
    href="http://www.bbc.co.uk/dna/h2g2/A1155872"&gt;Han of
    China&lt;/a&gt; and the &lt;a
    href="http://www.travelblog.org/South-America/Peru/Paracas/blog-97346.html"&gt;ancient
    native tribes of the Paracas region of Peru&lt;/a&gt;, various
    body modification practices where quite common. In fact, among
    the members of these cultures unusual body shapes were (and in
    some cases still are) considered very beautiful. Parents went
    to great lengths to achieve these shapes using mechanical
    devices to mold an infant's growth into a particular shape. For
    example, among the Karen Paduang this procedure resulted in
    women with very, very long necks. In the case of the Han it was
    women with very tiny, actually unusable feet. For the natives
    of the Paracas region of Peru it was large cone shaped skulls.
    Although grotesque by Western standards, the individual
    subjected to these procedures was considered significantly more
    beautiful then a person shaped along more natural lines.
    However, if you removed these people from their culture and
    time to cast them into many modern societies they would be
    considered very, very strange at the least and grotesque at
    worst.&lt;br /&gt;&lt;br /&gt;Fascinating, you say, but what
    does this have to do with computer science and more
    specifically languages? In many cases, the communities that
    form around languages are very similar to the insular
    communities that created these practices. To take this analogy
    one step further, in many ways programming languages act quite
    a lot like the devices used to shape the skulls of infants in
    Paracas, the feet of Han women or the necks of Karen Paduang
    women. In the case of these languages, instead of shaping the
    skull they tend to shape the way we think about problems, the
    way we form ideas and the way those ideas are applied to a
    particular problem. For example, if you have only every written
    code in early versions of Fortran (Fortran 77 and before) then
    you probably don't even know recursion exists. Also, if you
    have only ever coded in Haskell you probably would know very
    little about imperative style loops.&lt;br /&gt;&lt;br /&gt;If
    I might take a bit my own history as an example, very early in
    my forays into coding I came across a problem requiring a
    search through a directory structure. I quickly came up with an
    imperative-loop-based solution that did the job. Unfortunately,
    the code was ugly and (if I may borrow a term from the
    refactoring community) it didn't quite smell right. I didn't
    know what the right solution was but I knew I didn't have it.
    At that time, the public internet was a new fangled thing but I
    had already found it to be useful for gathering information. So
    I searched for solutions that others had found to similar
    problems. Eventually, I came across a piece of code that used
    recursion to walk the tree instead of imperative looping. It
    took me a little while to get my mind around this new concept,
    having never been exposed to non-imperative code. However, once
    I did, I realized that the recursive solution was a much
    cleaner and more natural solution for this problem. Recursion
    isn't always a more natural solution then imperative iteration,
    but in this case it was. That made me think about this type of
    problem in a completely different light. It added another tool
    to my toolbox. If I had been exposed to functional languages
    before this point, it would have saved me a great deal of time
    and trouble.&lt;br /&gt;&lt;br /&gt;This is a minor example,
    but it does help prove a point: what a language allows and does
    not allow affects how you think about problems. This is an
    extremely important realization because it means that, with
    certain caveats, the more programming languages you know the
    more insight you may have into the solution to a particular
    coding problem. So, if you accept the fact that languages tend
    to mold your way of thinking about problems then you can easily
    see how languages can be compared to these body modification
    devices we spoke of earlier. If Programing Languages can be
    compared to these devices then we, the users of programming
    languages, can be compared to the subjects that undergo
    modification.&lt;br /&gt;&lt;br /&gt;Granted, the comparison is
    not exact. As engineers, we don't start out with a nice round
    head. We have to work to achieve it using the same tools that
    provided the initial distortion. To elaborate, we all start out
    learning a single language and that language affects the shapes
    our 'mind' so to speak. This initial language pushes our mind
    out in one direction, perhaps upward. So after we learn a
    single language most of us are walking around with a big cone
    shaped mind. &lt;br /&gt;&lt;br /&gt;Unfortunately, many of us
    never go on to learn any other languages. We keep our big cone
    shaped mind for the entirety of our career. That may not be a
    bad thing. If you are solidly embedded in a particular
    'language culture' then cone-shaped minds are probably
    considered quite beautiful. In fact, you may be considered some
    type of elder because of the cone-iness of your mind. We tend
    to call these people Gurus and they are deserving of some
    respect. &lt;br /&gt;&lt;br /&gt;These cone-shaped minds are
    probably not considered all that beautiful out side of their
    specific 'language culture'. C gurus aren't going to be very
    useful in Scheme community and Scheme gurus aren't going to be
    very useful to the C community. That's bad because both
    languages have ideas and features that are generally useful to
    understand. Those Cone minds that keep to a single language
    throughout their entire career are never realize their full
    potential. That's unfortunate because a programmer with a
    well-shaped mind is generally more efficient and better able to
    find the most elegant solution to a problem. In fact, he ceases
    to be a programmer and becomes an Engineer. If he is diligent
    and studies hard he may even become a Good Engineer.&lt;br
    /&gt;&lt;br /&gt;Now, about this time you are probably thinking
    to yourself, 'I don't really like the idea of walking around
    with a big cone-shaped mind.' If thats the case, great!
    Fortunately, unlike the natives of Paracas, you can do
    something about they way your algorithmic 'mind' is shaped. How
    do you go about reshaping your mind? Well, it's not a simple
    process, you basically need to force your mind into a new shape
    using the devices that warped your mind in the first place. You
    must learn more and distinctly different languages. Each
    language forces your mind to grow in a different direction.
    Learn enough languages and your mind will have a nice round
    shape.&lt;br /&gt;&lt;br /&gt;So how many languages do you have
    to learn and what languages are the best? There is no fixed
    number. I usually suggest five as a minimum number and
    recommend ten or fifteen. That may sound like a lot but after
    the first couple languages picking up new ones starts becoming
    much easier. In that regard its a little like picking up a new
    spoken language. For example, if you know Spanish then
    Portuguese isn't all that hard. If you know Spanish and
    Portuguese, then Italian is pretty simple. If you know Spanish,
    Portuguese and Italian, then picking up French is a snap. This
    goes on and on. In the case of programing languages there are a
    small number of additional rules you need to apply to get the
    most out of this process, but the overall process is the same.
    The additional rules are listed below. &lt;br /&gt;&lt;br /&gt;
    1. Each language must come from a different family oflanguages.
    See &lt;a href="http://www.levenez.com/lang/"&gt;this history
    of languages&lt;/a&gt; information.&lt;br /&gt;&lt;br /&gt; 2.
    All three major paradigms (Procedural, Object Oriented, and
    Functional) must be covered.&lt;br /&gt;&lt;br /&gt; 3. At
    least two minor paradigms (Concurrent and Logic/Declarative)
    must be covered.&lt;br /&gt;&lt;br /&gt; 4. Both static typing
    and dynamic typing need to be represented.&lt;br /&gt;&lt;br
    /&gt;If you have never heard of functional programing and don't
    have a clue what procedural means don't worry. I will help you
    out a bit by providing a list of languages broken down by
    family and paradigm at the end of this little missive. As you
    learn new languages you will soon have a good idea of the
    different families of languages and the paradigms they
    represent. Before you know it, you will know quite a few
    different languages and you'll be able to think about problems
    from many different angles and your mind will have a nice round
    shape. You will be able think clearly about a programing
    problem in any number of ways instead of the small number of
    ways your previous cone-shaped mind allowed.&lt;br /&gt;&lt;br
    /&gt;Dave Thomas of Pragmatic Programmers (not Wendy's) fame
    came up with the idea of learning a language each year. They
    started a group to accomplish this back in 2002. Unfortunately
    it seems to have started and stopped all in that same year.
    &lt;br /&gt;&lt;br /&gt;&lt;span
    style="font-weight:bold;"&gt;&lt;br /&gt;The
    Languages&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;A language
    breakdown by family is available on the &lt;a
    href="http://www.levenez.com/lang/"&gt;'History of Programming
    Languages' information&lt;/a&gt;. &lt;br /&gt;&lt;br /&gt;As
    for the breakdown by type, I am not going to try to do this for
    every language available. So I am just going to give you a list
    of ten of fifteen programming languages broken down according
    to the rules I provided previously. This should give you enough
    of a group to pick five that interest you.&lt;br /&gt;&lt;br
    /&gt;Descriptions are arranged as follows ([paradigms], Typing,
    Family). If family doesn't exist assume the language is in its
    own family.&lt;br /&gt;&lt;br /&gt;&lt;a
    href="http://www.erlang.org/"&gt;Erlang&lt;/a&gt; ([Functional,
    Concurrent, Distributed], Dynamic Typing)&lt;br /&gt;&lt;a
    href="http://www.forth.org/"&gt;Forth&lt;/a&gt; or &lt;a
    href="http://www.cs.indiana.edu/docproject/programming/postscript/postscript.html"&gt;Postscript&lt;/a&gt;
    (Dynamic Typing)&lt;br /&gt;&lt;a
    href="http://www.cs.mu.oz.au/research/mercury/"&gt;Mercury&lt;/a&gt;
    ([Logic, Declarative], Dynamic Typing)&lt;br /&gt;&lt;a
    href="http://pauillac.inria.fr/~diaz/gnu-prolog/"&gt;Prolog&lt;/a&gt;
    ([Logic, Declarative], Dynamic Typing)&lt;br /&gt;&lt;a
    href="http://www.mozart-oz.org/"&gt;Mozart-Oz&lt;/a&gt;
    ([Functional, Procedural, Object Oriented, Logic, Distributed,
    Concurrent], Dynamic Typing)&lt;br /&gt;&lt;a
    href="http://www.lisp.org/"&gt;Lisp&lt;/a&gt; ([Functional,
    Procedural, Object Oriented, Logic], Dynamic&lt;br /&gt;Typing,
    Lisp)&lt;br /&gt;&lt;a
    href="http://www.schemers.org/"&gt;Scheme&lt;/a&gt;
    ([Functional, Object Oriented, Logic], Dynamic Typing,
    Lisp)&lt;br /&gt;&lt;a
    href="http://www.engin.umd.umich.edu/CIS/course.des/cis400/ada/ada.html"&gt;Ada&lt;/a&gt;
    ([Procedural, Object Oriented, Concurrent], Static Typing,
    Pascal) (Another resource)&lt;br /&gt;&lt;a
    href="http://www.python.org/"&gt;Python&lt;/a&gt; ([Procedural,
    Object Oriented, Functional], Dynamic Typing)&lt;br /&gt;&lt;a
    href="http://www.haskell.org/"&gt;Haskell&lt;/a&gt;
    ([Functional, Lazy], Static Typing)&lt;br /&gt;&lt;a
    href="http://www.lua.org/"&gt;Lua&lt;/a&gt; ([Procedural,
    Object Oriented], Dynamic Typing)&lt;br /&gt;&lt;a
    href="http://www.ruby-lang.org/"&gt;Ruby&lt;/a&gt; ([Object
    Oriented], Dynamic Typing, Smalltalk)&lt;br /&gt;&lt;a
    href="http://www.squeak.org/"&gt;Smalltalk&lt;/a&gt; ([Object
    Oriented], Dynamic Typing, Smalltalk)&lt;br /&gt;&lt;a
    href="http://www.smlnj.org/"&gt;SML&lt;/a&gt; ([Functional],
    Static Typing, SML)&lt;br /&gt;&lt;a
    href="http://www.ocaml.org/"&gt;Ocaml&lt;/a&gt; ([Functional],
    Static Typing, SML)&lt;br /&gt;&lt;a
    href="http://www.cs.ru.nl/~clean/"&gt;Clean&lt;/a&gt;
    ([Functional], Static Typing)&lt;br /&gt;&lt;a
    href="http://www.digitalmars.com/d/"&gt;D&lt;/a&gt;
    ([Procedural, Object Oriented], Static Typing, Algol)&lt;br
    /&gt;&lt;br /&gt;I didn't include the languages that are common
    (C,C++,Perl,Java) because there is a good chance you already
    know them. They also don't count for the purposes of this
    exercise (C,C++, and Java are all part of the Algol family and
    would only count once anyway). Feel free to choose other
    languages that you may be aware of and find interesting. This
    list is only a 'Getting Started' list.&lt;br /&gt;&lt;br /&gt;I
    strongly suggest that you learn a Lisp dialect and a Forth.
    These two languages are very good at shaping your mind and the
    two languages specifically tend to force the shape of your mind
    in opposite directions. Its a somewhat painful process but well
    worth the quick results. At the very least make sure that one
    of these languages is included on your list.&lt;br /&gt;&lt;br
    /&gt;&lt;span
    style="font-weight:bold;"&gt;Footnotes&lt;/span&gt;&lt;br
    /&gt;&lt;br /&gt;Thanks to a comment by Vince I have found that
    I am not the only one thinking along these lines, not that I
    actually thought I was. In the linguistics community there
    seems to be a hypothesis call the &lt;a
    href="http://en.wikipedia.org/wiki/The_Sapir-Whorf_Hypothesis"&gt;Sapir&#226;&#8364;&#8220;Whorf
    hypothesis&lt;br /&gt;&lt;/a&gt; that describes something
    similar. Also Kenneth Iverson gave his Turing Award lecture
    around the same topic. It was called "Notation as a tool of
    thought". Unfortunately, I can't seem to find a good link for
    it right now.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/8357633642576677337' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/8357633642576677337' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/05/shape-of-your-mind.html'
    title='The Shape Of Your Mind' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-1967658992640681192</id>
    <published>2007-05-18T10:55:00.000-07:00</published>
    <updated>2007-05-18T11:01:57.659-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='sinan' />
    <title type='text'>Off Line Development</title>
    <content type='html'>After numerous requests I have finally
    implemented off-line development. You no longer have to be
    connected to build your projects. In the past the dependency
    analysis task ran every build and if it thought that there was
    a chance that the dependencies had changed it connected to the
    repository to check the dependencies. This no longer happens.
    There is now a check_depends task that checks to make sure that
    dependencies have been run at some time in the past. It then
    checks if the dependencies need to be updated. If the
    dependencies do need to be updated it asks the user if he wants
    to update the dependencies (by connecting to the server). If
    the answer is affirmative then the update occurs if not then it
    continues with the existing dependencies. The user may run
    dependencies at any time by running the depends task directly.
    This approach gives users much, much more control over when and
    how dependencies are resolved. It also allows the user to
    control when and how the build system connects to the
    repository. I hope I have done this in such a way as to not add
    any additional burden to the user.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/1967658992640681192' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/1967658992640681192' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/05/off-line-development.html'
    title='Off Line Development' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-5049029583926631782</id>
    <published>2007-05-02T21:24:00.000-07:00</published>
    <updated>2007-05-18T11:02:11.630-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='misc' />
    <title type='text'>Distributed Bug Tracking</title>
    <content type='html'>I came across a project called &lt;a
    href="http://www.distract.wellquite.org/"&gt;DisTract&lt;/a&gt;
    last week. DisTract is basically a distributed bug tracking
    system. Specifically, its a file based bug tracking system
    who's directory structure sits inside of a repository managed
    by a distributed version control system. It uses this
    distributed version control system to manage distribution. This
    system was preceded by another, somewhat bit rotted, system
    called &lt;a
    href="http://www.panoramicfeedback.com/opensource/"&gt;Bugs
    Everywhere&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;I really like the
    idea of distributed bug tracking. It fits in really well with
    distributed version control and over all distributed
    development. Being able to create new branches for your bug
    system along with it source. Merge those branches back into
    mainline all the while keeping history etc. Thats a very, very
    powerful thing. However, this approach has a fundamental, maybe
    intractable, problem when it comes to merging. In a version
    control system merging is relatively simple. Files identifiers
    (basically the path in the workspace) are fixed there is no
    ambiguity if the same file is changed on two different boxes.
    Its just a matter of merging the contents of that file.
    Distributed bug tracking still has the problem of merging
    changed bugs. However, it has an additional problem. That is
    the fact that there is now why to relate on bug created by one
    person to a different bug created by another person. This is a
    problem that every bug tracking system has to some extent. In a
    distributed bug tracking system its even worse because the bugs
    created by another person wont be visible until they get a push
    or do a pull from that other persons repository. There may be a
    way to solve the problem using some of the modern document
    similarity algorithms. However, considering the small amount of
    text usually supplied with a bug report this is probably
    unworkable. I don't have a solution to this yet but I may play
    around with some ideas and use some information form some of
    the larger public repositories to run some tests.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/5049029583926631782' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/5049029583926631782' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/05/distributed-bug-tracking.html'
    title='Distributed Bug Tracking' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-970665623589855073</id>
    <published>2007-04-23T17:27:00.000-07:00</published>
    <updated>2007-04-23T21:34:21.689-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='tercio' />
    <title type='text'>Erlang and the Web</title>
    <content type='html'>I have been spending a lot of time
    thinking about leveraging Erlang's concurrency features and OTP
    in web applications. Right now I don't believe that any of the
    available frameworks do that very well. &lt;a
    href="http://erlyweb.org/"&gt;Erlyweb&lt;/a&gt; tries to be
    'rails' for Erlang without really leveraging the features that
    make Erlang great. &lt;a href="http://yaws.hyber.org/"&gt;Yaws
    &lt;/a&gt; is more a web server then a web app server. It tries
    to make some amends here by providing things like &lt;a
    href="http://yaws.hyber.org/appmods.yaws"&gt;appmods&lt;/a&gt;
    and &lt;a
    href="http://yaws.hyber.org/yapp_intro.yaws"&gt;yapps&lt;/a&gt;
    but they feel bolted on and they don't really leverage OTP at
    all.&lt;br /&gt;&lt;br /&gt;This has been an open issue in my
    mind for some time. I created the &lt;a
    href="http://code.google.com/p/tercio/"&gt;tercio&lt;/a&gt;
    project as a starting point to solve this problem back in
    November or December of last year. It languished for awhile,
    partly because I had yet to figure out a elegant solution.
    Well, I think that I finally have. Its the logical conclusion
    of current web development trends. I am surprised that no one
    has thought of it yet. The idea is two fold.&lt;br /&gt;&lt;br
    /&gt; 1) Let client side handle the client side&lt;br /&gt; 2)
    Let the server side handle the server side&lt;br /&gt;&lt;br
    /&gt;The general idea is that you will let the client side
    handle all client side rendering. The only server side
    participation in this is serving up files. In turn, the server
    will handle all server side (business) logic. The two should
    really have very little knowledge of one another. Hmm, seems a
    bit too simplistic doesn't it? I thought so, before I realized
    that the client side in this continuum already has a perfectly
    good language on which to base things. That languages is&lt;br
    /&gt;javascript. I can hear the groans of dismay already. I
    emitted those very same groans back in the late '90s through
    the mid '00s and I wouldn't have even considered this two years
    ago. However, the landscape has changed alot in two short
    years. Ajax has gained prominence, libraries like prototype
    have been created. Its just a whole different world. We are
    already in good shape for the server side with OTP.&lt;br
    /&gt;&lt;br /&gt;So what are the mechanics of making this
    happen. First we need to get away from generating html on the
    server side. To do that we need to make it easy to generate it
    on the client side. Manually creating dom objects really isn't
    the right way to go. I think we can do this with a library
    called &lt;a
    href="http://trimpath.com/project/wiki/JavaScriptTemplates"&gt;JavascriptTemplates&lt;/a&gt;.
    This provides a reasonable templating language on top of
    javascript. Since each snippet of template will be small this
    should provide a reasonable efficient way to go. The second
    problem is how do we remove the client side knowledge from the
    server? I think tercio already does a good job here. It
    provides a javascript&lt;-&gt;erlang bridge. With this
    javascript can send and receive messages to processes that have
    registered interest in client side message no the backend. Its
    webserver agnostic, so by providing a small shim you can make
    it work with any webserver you want. I am building a small
    startup on top of this framework. I am quite sure there will be
    a lot of issues to work out. However, I think the fundamental
    principles are solid and should provide for the right web
    development experience in Erlang.&lt;br /&gt;&lt;br /&gt;Tercio
    isn't yet ready for prime time or even late night yet. It
    should be soon though so keep your eyes posted here.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/970665623589855073' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/970665623589855073' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html'
    title='Erlang and the Web' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-4803268042202468410</id>
    <published>2007-04-08T12:14:00.000-07:00</published>
    <updated>2007-04-08T12:48:54.588-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='sinan' />
    <title type='text'>Build Flavors</title>
    <content type='html'>I had quite a few requests to support
    different types of builds within the same project. Usually the
    request centered around being able to do 'development' and
    'release' builds. In these two cases, development would enable
    debugging information and unit tests while release would strip
    them out. Providing static development and release build
    flavors wouldn't really solve the underlaying problem, which is
    the need to parameterize the build process. I ended up solving
    this by adding a 'flavors' option to the build config and
    having the tasks take arguments. Together these two features
    should allow a pretty wide range of build customizations.
    &lt;br /&gt;&lt;br /&gt;Following is the flavors entry in the
    default build config. Its pretty self explanatory,
    'default_flavor' indicates which flavor should be used when the
    user doesn't specify a flavor. 'flavors' is assigned to the
    build flavor definition. Within each flavor you assign an
    argument to each build task.&lt;br /&gt;&lt;br
    /&gt;&lt;pre&gt;&lt;br /&gt;default_flavor: development,&lt;br
    /&gt;&lt;br /&gt;flavors : {&lt;br /&gt;&lt;br /&gt;
    development : {&lt;br /&gt; build : "+debug_info -W1"&lt;br
    /&gt; },&lt;br /&gt;&lt;br /&gt; release : {&lt;br /&gt; build
    : "-DNOTEST=1 -W1"&lt;br /&gt; }&lt;br /&gt;&lt;br /&gt;&lt;br
    /&gt;},&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;br /&gt;Right
    now only the build and test tasks take arguments. However, over
    time the other tasks that need arguments will take them as
    well. On a side note, I have created a module that trys to
    parse out erlc arguments.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/4803268042202468410' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/4803268042202468410' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/04/build-flavors.html'
    title='Build Flavors' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-2377115810388972825</id>
    <published>2007-03-31T16:58:00.000-07:00</published>
    <updated>2007-03-31T17:10:55.670-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='sinan' />
    <title type='text'>Busy Times</title>
    <content type='html'>I have had a bit of a perfect storm this
    week. I decided to upgrade my Ubuntu to feisty. Although the
    upgrade went very nicely it took a couple of days to get the
    configuration the way I like it. It always does. I tend to
    tweak my setup to no end. Well after all that the OTP folks
    went and released the new version of Erlang so it took a few
    days to get the repository updated. At last, though, things
    have settled down and I am able to get back into sinan
    development. So I should be releasing a couple of new versions
    of the alpha over the next few days. &lt;br /&gt;&lt;br /&gt;On
    a side note, Ubuntu feisty just rocks. It has, by far, the best
    wireless support that I have seen any any distribution. That
    alone makes it worth the upgrade. If you haven't already done
    it I suggest that you do the upgrade.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/2377115810388972825' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/2377115810388972825' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/03/busy-times.html'
    title='Busy Times' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-3497794748027864484</id>
    <published>2007-03-18T23:29:00.000-07:00</published>
    <updated>2007-03-18T23:40:55.256-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='sinan' />
    <title type='text'>Full OTP Migration</title>
    <content type='html'>I just finished migrating the sinan to a
    full OTP application. It already followed all of the OTP
    principles it just wasn't setup to run as an application. I ran
    into a few issues that encouraged me to do the conversion. It
    wasn't actually difficult, as I said , I already followed OTP
    for the most part. It was mostly a matter of turning the tasks
    into gen_servers and figuring out a way for them to work
    together in a meaningful way. For now there isn't much
    difference for the user, but it sets things up so that I can
    rapidly iterate on the current outstanding issues.&lt;br
    /&gt;&lt;br /&gt;The hardest part of all of this was getting
    the error_logger logging set up right. A lot more loggers then
    I suspected are involved from the get go. Kernel sets up a very
    primitive error_logger to start. It also sets up a slightly
    better tty logger. Then sasl sets up its own set of loggers.
    Figuring out where this was coming from, getting rid of the
    loggers and adding the custom logger was more difficult then I
    actually expected. In the end I got it done via a combination
    of configs for kernel and sasl and actually removing the
    primitive logger via the gen_event api. &lt;br /&gt;&lt;br
    /&gt;In any case, I should be able to start knocking my open
    issues. Thanks to the beta testers for providing the
    feedback.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/3497794748027864484' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/3497794748027864484' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/03/full-otp-migration.html'
    title='Full OTP Migration' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-153392237876584202</id>
    <published>2007-03-15T01:06:00.000-07:00</published>
    <updated>2007-03-15T01:10:07.078-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='sinan' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='fconf' />
    <title type='text'>More on Configuration</title>
    <content type='html'>The first, lightly tested, version of
    &lt;a href="http://code.google.com/p/fconf/"&gt;fconf&lt;/a&gt;
    is out. At the moment its undocumented, but that should change
    pretty quickly. Its a otp app that supports multiple
    simultaneous configurations and merging configs together. It
    supports everything that I talked about in my last &lt;a
    href="http://erlangish.blogspot.com/2007/03/configurations.html"&gt;post&lt;/a&gt;.
    Sinan has already been ported over to fconf from its built in
    configuration system.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/153392237876584202' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/153392237876584202' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/03/more-on-configuration.html'
    title='More on Configuration' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-3926462673124129037</id>
    <published>2007-03-12T01:39:00.000-07:00</published>
    <updated>2007-03-12T01:59:00.920-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='sinan' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='tercio' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='fconf' />
    <title type='text'>Configurations</title>
    <content type='html'>OTP applications have their own
    configuration mechanism in the &lt;a
    href="http://www.erlang.org/doc/doc-5.5.3/doc/design_principles/applications.html#7.8"&gt;app
    config&lt;/a&gt; structure. However, this doesn't always suit
    every applications needs. Currently, I have two distinct config
    mechanisms right now, one for &lt;a
    href="http://code.google.com/p/sinan/"&gt;sinan&lt;/a&gt; and
    one for &lt;a
    href="http://code.google.com/p/tercio/"&gt;tercio&lt;/a&gt;.
    They share a lot of similarities and I suspect other
    applications share similar needs. To that end I have split the
    config system out into its own project, &lt;a
    href="http://code.google.com/p/fconf/"&gt;fconf&lt;/a&gt; with
    the intention of using it in both projects. There isn't much
    out there yet but I should have the config subsystem pulled out
    of sinan and refactored in the next day or so. There are a few
    features that I want to support. &lt;br /&gt;&lt;br
    /&gt;&lt;ul&gt;&lt;br /&gt; &lt;li&gt;Reloadable config files
    (maybe auto reloaded)&lt;/li&gt;&lt;br /&gt; &lt;li&gt;Config
    file syntax agnostic; use the syntax that is right for your
    user community&lt;/li&gt;&lt;br /&gt; &lt;li&gt;Good, well
    defined override semantics&lt;/li&gt;&lt;br /&gt;&lt;/ul&gt;
    &lt;br /&gt;&lt;br /&gt;Of course, it all needs to be robust
    and scalable as well. The existing sinan config subsystem
    supplies most of this. It needs to be converted over to
    gen_server, create a supervision tree, and convert it to an OTP
    application.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/3926462673124129037' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/3926462673124129037' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/03/configurations.html'
    title='Configurations' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-165626717632423180</id>
    <published>2007-03-08T21:25:00.000-08:00</published>
    <updated>2007-03-08T21:27:57.113-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='sinan' />
    <title type='text'>First Version Out to Beta Testers!</title>
    <content type='html'>I just sent the first really usable
    version of sinan out to the beta testers who registered their
    interest. I expect there to plenty of issues. However, the fact
    that the product is out and being used is great. I can't wait
    to see the feedback, both positive and negative, that should
    come in. I will try to relay some of the relevant bits here on
    this blog.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/165626717632423180' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/165626717632423180' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/03/first-version-out-to-beta-testers.html'
    title='First Version Out to Beta Testers!' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-2108170621247986607</id>
    <published>2007-03-03T15:03:00.000-08:00</published>
    <updated>2007-03-03T15:31:23.088-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='sinan' />
    <title type='text'>Dependencies Again</title>
    <content type='html'>Just when you think you are finished
    something pops up and bites you. As I was getting ready to do
    the release to my beta customers I noticed that some of my unit
    tests in the dependency code no longer passed. I had made some
    changes the week before to alter conflict reporting and I guess
    I for got to run the tests. Well I jumped in and started
    debugging. An hour or so latter whop-a-mole with bugs I
    realized that the core algorithm was wrong. Leaky edge cases
    are almost always a symptom of an underlying fault in the
    logic. In almost all of these cases about the only thing you
    can do is through out the existing implementation and start
    fresh. &lt;br /&gt;&lt;br /&gt; Well, in this case, I wrestled
    with a creating a new solution with little or no luck.
    Eventually, I went to lunch with some friends to talk out the
    problem. We, or more specifically Scott Parish, realized that
    at its core this is a backtracing problem very similar to that
    Prolog was designed to handle. Fortunately, he had just spent
    the last month living and breathing a similar backtracing
    problem and volunteered to code up a solution. He took the core
    of his solution from chapters 11 and 12 of &lt;a
    href="http://norvig.com/paip.html"&gt;PAIP&lt;/a&gt;. It seems
    that Erlang, due to its immutability, makes for a very good
    platform for these types of issues. In any case, Later on that
    night he sent me the solution that turned out to be a special
    cut down, special purpose prolog interpreter. Even then it was
    a complete, fast solution that occupied no more then a hundred
    lines of code. I am working on getting it integrated back into
    the build system as I write this. Its amazing how simple and
    concise an elegant solution can be.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/2108170621247986607' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/2108170621247986607' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/03/dependencies-again.html'
    title='Dependencies Again' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-2898669431726679414</id>
    <published>2007-02-28T13:50:00.000-08:00</published>
    <updated>2007-02-28T17:04:06.792-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='sinan' />
    <title type='text'>Open Beta for Sinan</title>
    <content type='html'>So we have moved right along and we are
    very close to release. Before we do a general release we
    decided to do something of a small beta. We are trying to get
    together a group of solid people who know Erlang that are
    interested in using the system. They shouldn't mind going to a
    bit of extra trouble to provide us with useful information.
    They also need to be able to put up with potential issues that
    might arise from using the new build system. If you want to
    participate either post a comment to this blog letting me know
    or send an email to me or Martin Logan. You can find both of
    our email addresses in the &lt;a
    href="http://www.erlang.org/faq.html"&gt;erlang-questions
    archives&lt;/a&gt;. Once you do that we will provide you with
    some nice tarballs and pointers to the documentation.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/2898669431726679414' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/2898669431726679414' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/02/open-beta.html'
    title='Open Beta for Sinan' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-4365252994535574806</id>
    <published>2007-02-20T18:35:00.000-08:00</published>
    <updated>2007-02-21T17:19:52.503-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='sinan' />
    <title type='text'>Windows Support</title>
    <content type='html'>So far support for Windows has been, at
    most, an after thought for me. I own only one rather old
    windows box that I use for the occasional gaming. For that
    reason, windows just isn't a big priority. However, after a
    discussion with Martin Logan we came to the conclusion that
    sinan will need to support windows from the initial release.
    Fortunately, I have used the &lt;a
    href="http://www.erlang.org/doc/doc-5.5.3/lib/stdlib-1.14.3/doc/html/filename.html"&gt;filename&lt;/a&gt;
    and &lt;a
    href="http://www.erlang.org/doc/doc-5.5.3/lib/stdlib-1.14.3/doc/html/filelib.html"&gt;filelib&lt;/a&gt;
    modules through out the implementation. That should remove any
    path name issues between the two systems. Unfortunately, I use
    symlinks pretty heavily through out the build. I have also used
    two very unix specific os commands as part of development,
    uname and tar. At first I thought that replacing these commands
    would pose a big problem. That proves not to be the case as the
    stdlib and kernel applications provide for my needs, though
    that functionality is pretty well hidden. &lt;br /&gt;&lt;br
    /&gt;To figure out what platform and architecture I am on I use
    uname. I need this to pull down the correct version of binary
    dependencies from the repository. I didn't see any real
    solution to replace this command. I finally ran across a
    reference to &lt;span
    style="font-style:italic;"&gt;erlang:system_info(system_architecture)&lt;/span&gt;.
    This should solve my needs pretty well. Unfortunately, it only
    works in R9 and above. So, as you would expect, its a trade
    off. If I use this I can make the system work in windows but
    not in pre R9 systems. I think the right choice is to make it
    work in windows. Hopefully a pre R9 solution will present
    itself.&lt;br /&gt;&lt;br /&gt;I also thought tar would present
    more of a problem as tar isn't a windows command. There is an
    &lt;a
    href="http://www.erlang.org/doc/doc-5.5.3/lib/stdlib-1.14.3/doc/html/erl_tar.html"&gt;erl_tar&lt;/a&gt;
    module in stdlib but it claims to support only Sun's version of
    tar. However, on examination of the docs for both erl_tar and
    gnutar this seems not to be the case. The format followed by
    erl_tar is IEEE Std 1003.1. This is an extended version of tar
    called ustar and its a POSIX standard. It seems that modern
    versions of gnutar support IEEE Std 1003.1 as well, as you can
    see &lt;a
    href="http://www.gnu.org/software/tar/manual/html_node/tar_134.html"&gt;here&lt;/a&gt;
    (check the references at the bottom of the page). So the erlang
    docs seem either in accurate or out of date, fortunately for
    me. &lt;br /&gt;&lt;br /&gt;Symlinks are a bit of a harder
    problem. The need for symlinks is greatly reduced now that I
    don't have to build up tar-able structures. However, I still
    use them to build up a deployable version of the OTP apps with
    sources in the _build directory. I think that the only solution
    to this problem is to copy the sources and related files into
    the binary structures instead of symlinking them in. It will
    add a bit of overhead but I think thats worth it. &lt;br
    /&gt;&lt;br /&gt;I do have one final problem, this one just
    occurred to me. I have written a nice little shell script to
    kick off a build. This shell script uses a bit of magic
    (borrowed from firefox) to follow any symlinks back to its
    deployed area where it gathers the paths for sinan. It then
    kicks off erl with all the proper paths to the sinan code. Not
    being a windows person I have no idea how to handle this on
    windows boxes. Hopefully, some erlang oriented windows guy will
    step forward and help me out with this.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/4365252994535574806' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/4365252994535574806' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/02/windows-support.html'
    title='Windows Support' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-900778081419402185</id>
    <published>2007-02-14T23:51:00.000-08:00</published>
    <updated>2007-02-14T23:56:45.382-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='sinan' />
    <title type='text'>Sinan Documentation</title>
    <content type='html'>The documentation for Sinan goes apace. I
    have finished all of the user level documentation and have
    started the developer documentation. &lt;br /&gt;&lt;br
    /&gt;Why worry about developer documentation? Sinan is a very
    pluggable system. Most of the current functionality that ships
    with the system is composed of tasks that are plugged into the
    engine. Third party tasks will use the exact same mechanism and
    be first class parts of the system right along with them. I
    think this is pretty darn important and I want to support it
    right out of the box. Thats why I am spending a bit of extra
    time and getting the developer documentation out with the user
    docs.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/900778081419402185' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/900778081419402185' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/02/sinan-documentation.html'
    title='Sinan Documentation' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-6721096919513740339</id>
    <published>2007-02-05T16:07:00.000-08:00</published>
    <updated>2007-03-31T17:11:18.859-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='sinan' />
    <title type='text'>Code Complete!</title>
    <content type='html'>I finished up the last few tasks over the
    weekend. This means that all the coding is pretty complete at
    this point. I still need to document the internals a bit more,
    so third party tasks can be written. I also need to spend some
    time writing high level user documentation so getting up to
    speed on the system is strait forward. All this will all
    probably take me a week or so. Hopefully, I can then do a true
    release. &lt;br /&gt;&lt;br /&gt;On a side note, one of the
    things that I ended up doing was adding code coverage metrics
    to the unit test running. The &lt;a
    href="http://www.erlang.org/doc/doc-5.5.3/lib/tools-2.5.3/doc/html/cover.html"&gt;cover&lt;/a&gt;
    module made this possible. Unfortunately, it only provides the
    number of runs for each line of executable code without any
    information about global coverage percentages. When I get some
    time I am going to poke around in system and see if I can come
    up with a way to get the executable line count from a module.
    If I can get that information then providing high level project
    statistics wont be so bad.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/6721096919513740339' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/6721096919513740339' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/02/code-complete.html'
    title='Code Complete!' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-7741028536427431873</id>
    <published>2007-01-31T19:40:00.000-08:00</published>
    <updated>2007-01-31T20:14:53.859-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='sinan' />
    <title type='text'>More Progress!</title>
    <content type='html'>I resurrected the test, edoc, clean, and
    release tasks tonight. Everything works as it should with the
    exception of edoc. There seems to be a conflict between edoc
    and xmerl in the newest version of erlang (R11B-3). I hope to
    figure out what the problem is and resolve it soon. &lt;br
    /&gt;&lt;br /&gt;On a side note. I came across the &lt;a
    href="http://www.erlang.org/doc/doc-5.5.3/lib/tools-2.5.3/doc/html/cover.html"&gt;cover&lt;/a&gt;
    module in the tools application of Erlang. Since I was working
    on the unit tests task at the time it seemed like a good idea
    to add this functionality to the build system either via a code
    coverage task or integration into the existing unit tests task.
    The only real issue is that all the dependent modules need to
    be recompiled with special coverage information to make cover
    work. This adds quite a bit of complexity to the feature. In
    any case, its on my list of new tasks to add. &lt;br
    /&gt;&lt;br /&gt;I added one task additional, an analyze tasks.
    It seems the dialyzer folks finally made it controllable from
    erlang code. This allowed me to integrate dialyzer into sinan.
    Now running dialyzer will be as simple as running a build task.
    Hopefully, if dialyzer is easier to use it will get used more
    often.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/7741028536427431873' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/7741028536427431873' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/01/more-progress.html'
    title='More Progress!' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-845605515266939130</id>
    <published>2007-01-31T00:58:00.000-08:00</published>
    <updated>2007-01-31T01:02:53.248-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='sinan' />
    <title type='text'>Building Again!</title>
    <content type='html'>I finally finished refactoring the build
    task tonight. For the first time the latest version of the
    build system is actually building source. It took a huge amount
    of effort to get the dependent tasks to this point. The engine,
    discover, depends, the repo puller, all of it was just
    preparation for the builder. In any case, I am very pleased.
    &lt;br /&gt;&lt;br /&gt; For the moment it just builds *.erl
    and *.yrl but eventually I want to support all of the erlang
    compilables. I suspect that refactoring the rest of the tasks
    (test, release, tar, clean, etc) wont take much longer.
    Hopefully, I will be able to do an alpha release at the end of
    this week. I certainly hope so in any case.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/845605515266939130' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/845605515266939130' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/01/building-again.html'
    title='Building Again!' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-2934427146437309940</id>
    <published>2007-01-26T19:55:00.000-08:00</published>
    <updated>2007-01-26T20:05:45.995-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='sinan' />
    <title type='text'>Topological Sort Joy</title>
    <content type='html'>I finally modified &lt;a
    href="http://code.google.com/p/sinan/"&gt;sinan&lt;/a&gt; to
    make use of all the dependency analysis code I wrote for
    ewrepo. One thing that I needed to do was produce a list, in
    the dependent order, of the graph of dependencies in the
    internal project applications. This is essential for compile
    time things like parse transforms are going to work correctly.
    I wrestled with how to do this correctly for quite a bit before
    I realized that its a simple &lt;a
    href="http://en.wikipedia.org/wiki/Topological_sorting"&gt;topological
    sort&lt;/a&gt;. I should really have realized this immediately,
    but I didn't. Fortunately, this isn't a difficult algorithm,
    especially since I didn't even need to implement it. Joe
    Armstrong wrote a topo sort for his ermake project and made it
    available in the &lt;a
    href="http://www.erlang.org/user.html"&gt;contribs section of
    erlang.org&lt;/a&gt;. Once I found that it didn't take to long
    to integrate it into sinan. &lt;br /&gt;&lt;br /&gt;Once I got
    to thinking about this dependency problem I realized that there
    was at least one more area that a topological sort was needed.
    Thats in the run order of the task list. Each task may have any
    number of tasks that it depends on. Right now my code would
    just run each dependent task multiple times. Thats a bug,
    fortunately it wont take more then a few minutes to integrate
    the topo sort into this area as well.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/2934427146437309940' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/2934427146437309940' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/01/topological-sort-joy.html'
    title='Topological Sort Joy' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-6135671269518551675</id>
    <published>2007-01-23T19:00:00.000-08:00</published>
    <updated>2007-01-24T01:22:58.356-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='sinan' />
    <title type='text'>Dependency Checking Complete!!</title>
    <content type='html'>I finally finished up both the shallow and
    the deep dependency resolution for sinan. This took a bit of
    time and effort to conceptualize, abstract and implement.
    &lt;br /&gt;&lt;br /&gt;Now given a list of apps and the
    dependencies (along with the url(s) of the repo); like
    this&lt;br /&gt;&lt;pre&gt;&lt;br /&gt; [{app1, "0.1", [{edoc,
    'LATEST'}, &lt;br /&gt; {syntax_tools, "1.5.0"}]}&lt;br
    /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;br /&gt;It correctly returns a
    list of all the dependencies required for the project; like
    this&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;&lt;br /&gt; [{stdlib,
    "1.14.2",&lt;br /&gt; [compiler,edoc,syntax_tools]},&lt;br
    /&gt; {syntax_tools,"1.5.0",&lt;br /&gt; [app1,edoc]},&lt;br
    /&gt; {compiler,"4.4.2",&lt;br /&gt; [edoc]},&lt;br /&gt;
    {kernel,"2.11.2",&lt;br /&gt; [compiler,stdlib,edoc]},&lt;br
    /&gt; {edoc,"0.6.9",&lt;br /&gt; [app1]},&lt;br /&gt;
    {app1,"0.1",[]}] &lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;br
    /&gt;If it runs into a version conflict it reports what the
    conflict is and what applications are causing it.&lt;br
    /&gt;&lt;br /&gt;In the output above. Each entry is a
    dependency, its version and a list of apps the depend on that
    app.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/6135671269518551675' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/6135671269518551675' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/01/dependency-checking-complete.html'
    title='Dependency Checking Complete!!' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-1268258407687683097</id>
    <published>2007-01-19T14:25:00.000-08:00</published>
    <updated>2007-01-19T14:37:44.450-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='ktuo' />
    <title type='text'>Released: Ktuo 0.1.1</title>
    <content type='html'>I just released the first alpha version of
    my JSON Parser/Encoder Ktuo. I use it in several projects with
    no problems at all. However, this is still an alpha release, so
    be aware that you may run into issues. The download area for
    Ktuo is &lt;a
    href="http://code.google.com/p/ktuo/downloads/list"&gt;here&lt;/a&gt;.
    A bit of documentation for the project is &lt;a
    href="http://code.google.com/p/ktuo/wiki/Usage"&gt;here&lt;/a&gt;.&lt;br
    /&gt;&lt;br /&gt;I know the question of why another JSON parser
    is going to come up, so I am just going to go ahead and address
    it now. The &lt;a
    href="http://www.erlang-projects.org/Public/news/ejson/view"&gt;existing
    JSON parser&lt;/a&gt; is still available and still useful. It
    makes elegant use of continuations to handle cases where it may
    not have a full JSON expression available. This makes it very
    flexible and pretty darn interesting. However, these extra
    features also add significant complexity and no small amount of
    additional resource usage. While working on my &lt;a
    href="http://code.google.com/p/tercio/"&gt;Tercio&lt;/a&gt;
    project I realized that I didn't need these features and I
    didn't want to pay the cost of the complexity and resource
    usage overhead. So I wrote my own. Eventually, I realized it
    was useful in and of itself and created a project space for
    it.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/1268258407687683097' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/1268258407687683097' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/01/released-ktuo-011.html'
    title='Released: Ktuo 0.1.1' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-4334459226697191983</id>
    <published>2007-01-17T18:55:00.000-08:00</published>
    <updated>2007-01-18T14:43:50.610-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='sinan' />
    <title type='text'>Finished Up Dependency Checking</title>
    <content type='html'>I finished up the shallow dependency
    checking. Now I just need to integrate with the repository and
    repository metadata to do deep dependency analysis and package
    pulling.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/4334459226697191983' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/4334459226697191983' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/01/finished-up-dependency-checking.html'
    title='Finished Up Dependency Checking' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-4887533236802792471</id>
    <published>2007-01-17T16:02:00.000-08:00</published>
    <updated>2007-01-17T16:04:03.654-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='sinan' />
    <title type='text'>More Dependencies</title>
    <content type='html'>Most people think that Erlang has just
    runtime dependencies. For&lt;br /&gt;the most part this is
    true. However, Erlang also has two types of&lt;br /&gt;compile
    time dependencies. The first is the ".hrl" files that are&lt;br
    /&gt;included into a module. The second type is ".erl" files
    that&lt;br /&gt;implement a parse transform. Both of these
    types of files&lt;br /&gt;represent compile time dependencies.
    For the most part its simple&lt;br /&gt;enough to make sure the
    include and code path information is&lt;br /&gt;set. However,
    its much more difficult to make sure that if one of&lt;br
    /&gt;these types of files change all of its dependencies are
    changed&lt;br /&gt;as well. I think that the easiest way to
    handle this would be to&lt;br /&gt;simply look at the ast of a
    compiled file during the compilation&lt;br /&gt;process and
    extract the includes and the parse transform&lt;br
    /&gt;information from that ast. Unfortunately, it means knowing
    much&lt;br /&gt;more about a dependent OTP application then the
    build system&lt;br /&gt;currently knows. It would definitely
    need to happen after the high&lt;br /&gt;level runtime
    dependency mapping takes place. I think, for now, I&lt;br
    /&gt;will stick with just handling the runtime dependencies and
    making&lt;br /&gt;sure that the build time dependencies have
    the right path&lt;br /&gt;information available. Once the
    system gets out in the wild and I&lt;br /&gt;start getting
    feedback I may modify it to be a little smarter&lt;br
    /&gt;about the compile time dependencies.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/4887533236802792471' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/4887533236802792471' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/01/more-dependencies.html'
    title='More Dependencies' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-6099116682192244501</id>
    <published>2007-01-16T23:10:00.000-08:00</published>
    <updated>2007-01-16T23:12:17.755-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <title type='text'>Dependency Detection</title>
    <content type='html'>I am working on dependency detection for
    erlware (sinan and the erlware build system) today. Its going
    fairly well but I think I can significantly reduce the
    complexity. Any any case, I will put this new code in ewrepo as
    soon as we get that code out somewhere.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/6099116682192244501' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/6099116682192244501' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/01/dependency-detection.html'
    title='Dependency Detection' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-5673156257395877623</id>
    <published>2007-01-15T19:58:00.000-08:00</published>
    <updated>2007-01-15T20:00:37.283-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='sinan' />
    <title type='text'>Per App Build Config</title>
    <content type='html'>I have added the ability to configure the
    build directives for an application on a per app basis. This
    should make it much easier to do custom builds. Of course, for
    those of apps that don't need per app info it can be left off.
    This is a big deal and one of the bigger requests I have
    gotten.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/5673156257395877623' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/5673156257395877623' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/01/per-app-build-config.html'
    title='Per App Build Config' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-3471073743071504996</id>
    <published>2007-01-15T18:23:00.000-08:00</published>
    <updated>2007-01-15T18:35:10.595-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='sinan' />
    <title type='text'>Config Refactoring Complete!</title>
    <content type='html'>I just finished refactoring the config
    support in sinan using the new ktuo package. It works really
    well and makes the config much more readable.&lt;br /&gt;&lt;br
    /&gt;Original config with erlang terms&lt;br
    /&gt;&lt;pre&gt;&lt;br /&gt;[{repositories,
    ["http://repo.metadrift.net/repo"]},&lt;br /&gt;{build_dir,
    "_build"},&lt;br /&gt;{ignore_dirs, ["_", "."]},&lt;br
    /&gt;{ignore_apps, []},&lt;br /&gt;{default_task, build},&lt;br
    /&gt;{tasks, [{discover,&lt;br /&gt; [{handler,
    sin_discover}]},&lt;br /&gt; {verify, [{depends,
    [discover]},&lt;br /&gt; {handler, sin_verify}]},&lt;br /&gt;
    {build, [{depends, [verify]},&lt;br /&gt; {handler,
    sin_erl_builder}]},&lt;br /&gt; {doc, [{depends,
    [build]},&lt;br /&gt; {handler, sin_edoc}]},&lt;br /&gt; {tar,
    [{depends, [build]},&lt;br /&gt; {handler, sin_tar}]}]}].&lt;br
    /&gt;&lt;/pre&gt;&lt;br /&gt;new, more readable, config&lt;br
    /&gt;&lt;pre&gt;&lt;br /&gt;repositories :
    ["http://repo.metadrift.net/repo"],&lt;br /&gt;&lt;br
    /&gt;build_dir : _build,&lt;br /&gt;&lt;br /&gt;ignore_dirs :
    ["_",&lt;br /&gt; "."],&lt;br /&gt;&lt;br /&gt;ignore_apps :
    [],&lt;br /&gt;&lt;br /&gt;default_task : build,&lt;br
    /&gt;&lt;br /&gt;tasks : {&lt;br /&gt;&lt;br /&gt;discover :
    {&lt;br /&gt; handler : sin_discover&lt;br /&gt;},&lt;br
    /&gt;&lt;br /&gt;verify : {&lt;br /&gt; depends :
    [discover],&lt;br /&gt; handler : sin_verify&lt;br
    /&gt;},&lt;br /&gt;&lt;br /&gt;build : {&lt;br /&gt; depends :
    [verify],&lt;br /&gt; handler : sin_erl_builder&lt;br
    /&gt;},&lt;br /&gt;&lt;br /&gt;doc : {&lt;br /&gt; depends :
    [build],&lt;br /&gt; handler : sin_edoc&lt;br /&gt;},&lt;br
    /&gt;&lt;br /&gt;tar : {&lt;br /&gt; depends : [build],&lt;br
    /&gt; handler : sin_tar&lt;br /&gt;}&lt;br /&gt;&lt;br
    /&gt;}&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;br /&gt;Well, I
    think its more readable and more maintainable with the nested
    namespaces.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/3471073743071504996' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/3471073743071504996' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/01/config-refactoring-complete.html'
    title='Config Refactoring Complete!' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-3117351181819986550</id>
    <published>2007-01-11T18:30:00.000-08:00</published>
    <updated>2007-01-11T18:32:11.670-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='ktuo' />
    <title type='text'>Ktuo Error Reporting</title>
    <content type='html'>I have vastly increased the usefulness of
    error reporting in ktuo. Before it just failed with badmatch if
    an error occurred. Now it gives a useful error message along
    with the line and column number of the problem. Now that I am
    using the library as a config parsing lib in a couple of places
    it made sense that it report error usefully.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/3117351181819986550' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/3117351181819986550' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/01/ktuo-error-reporting.html'
    title='Ktuo Error Reporting' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-6653876516815291977</id>
    <published>2007-01-10T23:15:00.000-08:00</published>
    <updated>2007-01-10T23:21:03.262-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='ktuo' />
    <title type='text'>JSON Parser</title>
    <content type='html'>In the course of developing &lt;a
    href="http://code.google.com/p/tercio"&gt;tercio&lt;/a&gt; I
    built a fast little json parser/encoder. Well I decided to use
    it in &lt;a
    href="http://code.google.com/p/sinan"&gt;sinan&lt;/a&gt; as
    well so I moved it to its own project. The project, &lt;a
    href="http://code.google.com/p/ktuo"&gt;ktuo&lt;/a&gt;, is
    hosted in the usual place. It outputs strict json, but it
    parses a small superset of json. It allows single words as
    atoms in the json string as an alternative to a single word
    enclosed in quotes. This allows the lib to be used as a config
    parser. It makes the config much more readable. In any case,
    the library is usable and available now.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/6653876516815291977' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/6653876516815291977' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/01/json-parser.html'
    title='JSON Parser' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-8606561558344231813</id>
    <published>2007-01-10T20:43:00.000-08:00</published>
    <updated>2007-01-10T23:21:21.690-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='sinan' />
    <title type='text'>Sinan Build System</title>
    <content type='html'>I have been working on a build system for
    erlang for some time. I have a working version that I have
    used. However, it has a couple of shortcomings that rendered it
    difficult to use. I done some significant work towards version
    two. I decided to make the source available via google code
    hosting anyway. There is a large amount of proprietary software
    and systems going on in the community right now and I wanted to
    be in the open from the start.&lt;br /&gt;&lt;br /&gt;the
    source is &lt;a
    href="http://code.google.com/p/sinan"&gt;here&lt;/a&gt;.&lt;br
    /&gt;&lt;br /&gt;Its named after &lt;a
    href="http://en.wikipedia.org/wiki/Sinan"&gt;&#225;&#184;&#178;oca
    Mi&#226;&#8364;&#732;m&#196;r Sin&#196;n
    &#196;&#8364;&#196;&#161;&#196;&lt;/a&gt; one of the great
    architects and builders of the Ottoman Empire. I thought it
    appropriate to name a build system after him.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/8606561558344231813' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/8606561558344231813' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/01/sinan-build-system.html'
    title='Sinan Build System' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-4535893957183909975</id>
    <published>2007-01-05T17:03:00.000-08:00</published>
    <updated>2007-01-10T23:21:45.801-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='tercio' />
    <title type='text'>JsPkg Discarded, Package Support in
    Place</title>
    <content type='html'>I decided to not use jspkg. The code there
    needs a massive refactoring and it approaches the problem from
    a viewpoint that is very different from my own. In stead, I
    wrote a simple packager that doesn't do loading. So for now I
    have good namespacing support and stubs for package loading.
    Once I get a better understanding of the semantics of the
    applications built on this platform I will start filling out
    the loading stubs.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/4535893957183909975' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/4535893957183909975' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/01/jspkg-discarded-package-support-in.html'
    title='JsPkg Discarded, Package Support in Place' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-8840852515996925544</id>
    <published>2007-01-01T14:58:00.000-08:00</published>
    <updated>2007-01-10T23:22:00.726-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='tercio' />
    <title type='text'>Into the Client</title>
    <content type='html'>Well I have moved into client side code.
    To save a little time I am building the client side code on top
    of &lt;a
    href="http://jspkg.sourceforge.net/"&gt;jspkg&lt;/a&gt;. It
    needs quite a bit of refactoring as well as some conversion to
    work on top of prototype. However, it should fill my needs
    nicely. Once the package stuff is in place I can build up a
    nice messaging layer.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/8840852515996925544' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/8840852515996925544' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/01/into-client.html'
    title='Into the Client' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-4574823048355535259</id>
    <published>2006-12-27T17:44:00.000-08:00</published>
    <updated>2007-01-10T23:22:13.330-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='tercio' />
    <title type='text'>Tercio Serving Requests</title>
    <content type='html'>Tercio is now providing bridge services
    and handling requests. This is great. I still have to write the
    narrativejs converter and the client libraries, but the fact
    that bridging is happening is just awesome.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/4574823048355535259' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/4574823048355535259' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2006/12/tercio-serving-requests.html'
    title='Tercio Serving Requests' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-3596433910643097039</id>
    <published>2006-12-27T14:27:00.000-08:00</published>
    <updated>2007-01-10T23:22:27.842-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#post' />
    <category scheme='http://www.blogger.com/atom/ns#'
    term='tercio' />
    <title type='text'>Tercio</title>
    <content type='html'>For the last couple of weeks I have been
    working on a little side project called &lt;a
    href="http://code.google.com/p/tercio/"&gt;Tercio&lt;/a&gt;.
    Its meant to be a webapp server for Erlang. Erlang, however,
    presents a few twists that a web app system should take into
    account. The two major aspects that need to be integrated are
    concurrency and OTP. With a bit of thought you can create a
    system that makes use of concurrency and allows for the use of
    OTP. However, I didn't want to do that. I want to create a
    system that is intrinsically entwined with concurrency and
    requires OTP for its best use. This takes a bit more thought.
    In the end though I came up with what I think is a good
    approach. That is to create a 'safe' bridge into an OTP system
    from javascript. This would allow to send messages from the
    client into the server and receive messages back. This isn't a
    new idea. Guillaume Germain created something similar in &lt;a
    href="http://toute.ca/"&gt;Termite&lt;/a&gt;. However, I don't
    think anyone has made it simple, performant and scalable. Which
    is what I am trying to do. Fortunately I am pretty far
    along.&lt;br /&gt;&lt;br /&gt;I have written a very usable
    &lt;a
    href="http://code.google.com/p/tercio/wiki/TConfig"&gt;configuration
    system called tconfig&lt;/a&gt;. For configuring tercio. I have
    also built in a pretty basic but working http server for use
    during development. This system is based off of the trap exit
    howto &lt;a
    href="http://wiki.trapexit.org/index.php/A_fast_web_server_demonstrating_some_undocumented_Erlang_features"&gt;"A
    fast web server demonstrating some undocumented Erlang
    features"&lt;/a&gt;. It's called 'carre' and built into the
    tercio system. Its not the only way to serve tercio apps but
    its by far the easiest. The configuration and briding systems
    are built of a custom, fast implementation of a json parser
    thats just a bit more lenient on input then the currently
    available one. It also can't parse chunked data, but there is
    always a trade off.&lt;br /&gt;&lt;br /&gt;To make message
    passing between the client and server just a bit more
    interesting I am integrating the really ingenious &lt;a
    href="http://neilmix.com/narrativejs/doc/index.html"&gt;narrativejs&lt;/a&gt;
    into the system. Its written in javascript, but through the
    power of gcj and rhino I have a native executable that erlang
    can make use of just fine.&lt;br /&gt;&lt;br /&gt;I am just
    finishing up the erlang/javascript bridge parts of tercio. Once
    thats complete I will be able to start building up some really
    interesting stuff.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/3596433910643097039' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/posts/default/3596433910643097039' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2006/12/tercio.html'
    title='Tercio' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>cyberlync@gmail.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-4032422180704046182</id>
    <published>2007-01-04T10:53:00.000-08:00</published>
    <updated>2007-01-04T10:53:49.234-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Hi. I always like hearing about new erlang
    project...</title>
    <content type='html'>Hi. I always like hearing about new erlang
    projects.&lt;br /&gt;&lt;br /&gt;One question: why not yaws?
    Since it's all erlang, connecting into OTP is
    natural.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/3596433910643097039/comments/default/4032422180704046182' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/3596433910643097039/comments/default/4032422180704046182' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2006/12/tercio.html?showComment=1167936780000#c4032422180704046182'
    title='' />
    <author>
      <name>AgnesS</name>
      <uri>
      http://www.blogger.com/profile/04596375831105723558</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2006/12/tercio.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-3596433910643097039'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/3596433910643097039'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-161982670' />
    <gd:extendedProperty name='blogger.displayTime'
    value='January 4, 2007 10:53 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-128308047196400509</id>
    <published>2007-01-04T13:52:00.000-08:00</published>
    <updated>2007-01-04T13:52:16.587-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Its a bridge. So the http front end doesn't
    really...</title>
    <content type='html'>Its a bridge. So the http front end
    doesn't really matter. Right now I have a simple embedded http
    server, but I plan to provide connectors for both yaws and my
    efcgi project. Thats actually pretty easy to do.&lt;br
    /&gt;&lt;br /&gt;As to why I don't build it into yaws, well
    thats because I don't need to. Most of the functionality I plan
    to provide doesn't have a peer in yaws and vice versa. That
    being said there shouldn't be any problem with them existing
    side by side. It wouldn't even be an issue for them to serve
    different parts of the same application.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/3596433910643097039/comments/default/128308047196400509' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/3596433910643097039/comments/default/128308047196400509' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2006/12/tercio.html?showComment=1167947520000#c128308047196400509'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2006/12/tercio.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-3596433910643097039'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/3596433910643097039'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='January 4, 2007 1:52 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-3080116534457438451</id>
    <published>2007-01-17T03:49:00.000-08:00</published>
    <updated>2007-01-17T03:49:08.120-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Nice to find yet another Erlang blog. It
    would be ...</title>
    <content type='html'>Nice to find yet another Erlang
    blog.&lt;br /&gt;It would be even nicer if you would like&lt;br
    /&gt;to also publish it via http://www.planeterlang.org/ &lt;br
    /&gt;&lt;br /&gt;Then I only need to have one feed for
    all.&lt;br /&gt;&lt;br /&gt;Cheers, Tobbe</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/6099116682192244501/comments/default/3080116534457438451' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/6099116682192244501/comments/default/3080116534457438451' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/01/dependency-detection.html?showComment=1169034540000#c3080116534457438451'
    title='' />
    <author>
      <name>etnt</name>
      <uri>
      http://www.blogger.com/profile/14926365218231243609</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/01/dependency-detection.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-6099116682192244501'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/6099116682192244501'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1996490231' />
    <gd:extendedProperty name='blogger.displayTime'
    value='January 17, 2007 3:49 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-2562967298263407632</id>
    <published>2007-01-17T12:29:00.000-08:00</published>
    <updated>2007-01-17T12:29:17.730-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Tobbe, I don't mind at all. I will send a
    mail t...</title>
    <content type='html'>Tobbe,&lt;br /&gt;&lt;br /&gt; I don't
    mind at all. I will send a mail to the planeterlang folks and
    see what they think.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/6099116682192244501/comments/default/2562967298263407632' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/6099116682192244501/comments/default/2562967298263407632' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/01/dependency-detection.html?showComment=1169065740000#c2562967298263407632'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='32' height='24'
      src='http://www.metadrift.net/eric.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/01/dependency-detection.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-6099116682192244501'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/6099116682192244501'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='January 17, 2007 12:29 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-3811056712953800491</id>
    <published>2007-01-17T14:18:00.000-08:00</published>
    <updated>2007-01-17T14:18:55.138-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Thanks! Meanwhile, you could have a look at
    an ex...</title>
    <content type='html'>Thanks!&lt;br /&gt;&lt;br /&gt;Meanwhile,
    you could have a look at an experimental site of mine if you'd
    like.&lt;br /&gt;&lt;br
    /&gt;http://twt.tornkvist.org:8181/&lt;br /&gt;&lt;br
    /&gt;Cheers, Tobbe</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/6099116682192244501/comments/default/3811056712953800491' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/6099116682192244501/comments/default/3811056712953800491' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/01/dependency-detection.html?showComment=1169072280000#c3811056712953800491'
    title='' />
    <author>
      <name>etnt</name>
      <uri>
      http://www.blogger.com/profile/14926365218231243609</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/01/dependency-detection.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-6099116682192244501'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/6099116682192244501'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1996490231' />
    <gd:extendedProperty name='blogger.displayTime'
    value='January 17, 2007 2:18 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-2691835435708134203</id>
    <published>2007-01-17T14:32:00.000-08:00</published>
    <updated>2007-01-17T14:32:55.645-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>I will check it out as soon as I get home.
    Work bl...</title>
    <content type='html'>I will check it out as soon as I get home.
    Work blocks non-standard ports unfortunately.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/6099116682192244501/comments/default/2691835435708134203' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/6099116682192244501/comments/default/2691835435708134203' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/01/dependency-detection.html?showComment=1169073120000#c2691835435708134203'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='32' height='24'
      src='http://www.metadrift.net/eric.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/01/dependency-detection.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-6099116682192244501'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/6099116682192244501'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='January 17, 2007 2:32 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-5439881726621570882</id>
    <published>2007-01-23T00:46:00.000-08:00</published>
    <updated>2007-01-23T00:46:42.294-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>I'm very interested in sinan, especially the
    "it's...</title>
    <content type='html'>I'm very interested in sinan, especially
    the "it's all erlang" part of the build system. This provides
    the ability to stay within one world in the project code and
    build system. So I'm somewhat mystified why you would introduce
    another syntax into this?</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/3471073743071504996/comments/default/5439881726621570882' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/3471073743071504996/comments/default/5439881726621570882' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/01/config-refactoring-complete.html?showComment=1169541960000#c5439881726621570882'
    title='' />
    <author>
      <name>Michael Arnoldus</name>
      <uri>
      http://www.blogger.com/profile/12927865413993995652</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/01/config-refactoring-complete.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-3471073743071504996'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/3471073743071504996'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-473229548' />
    <gd:extendedProperty name='blogger.displayTime'
    value='January 23, 2007 12:46 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-2006091516688791845</id>
    <published>2007-01-23T00:59:00.000-08:00</published>
    <updated>2007-01-23T00:59:32.914-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>The options are some custom syntax or
    Erlangs tupl...</title>
    <content type='html'>The options are some custom syntax or
    Erlangs tuple syntax. Large data structures tend not to be very
    readable in tuple syntax. The config file is nothing more then
    a large data structure. This is especially true now that I have
    added optional per application configuration options. Nested
    namespaces in the new config syntax works pretty well and is
    pretty readable. Of course, the syntax is a matter of personal
    preference. Though the example shown is not the best example to
    highlight this feature.&lt;br /&gt;&lt;br /&gt; In the end it
    comes down to personal preference, I guess.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/3471073743071504996/comments/default/2006091516688791845' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/3471073743071504996/comments/default/2006091516688791845' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/01/config-refactoring-complete.html?showComment=1169542740000#c2006091516688791845'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='32' height='24'
      src='http://www.metadrift.net/eric.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/01/config-refactoring-complete.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-3471073743071504996'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/3471073743071504996'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='January 23, 2007 12:59 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-784474759805706410</id>
    <published>2007-01-23T03:49:00.000-08:00</published>
    <updated>2007-01-23T03:49:53.417-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>There is a third type of compile time
    dependency i...</title>
    <content type='html'>There is a third type of compile time
    dependency in using custom behaviours.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/4887533236802792471/comments/default/784474759805706410' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/4887533236802792471/comments/default/784474759805706410' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/01/more-dependencies.html?showComment=1169552940000#c784474759805706410'
    title='' />
    <author>
      <name>Michael Arnoldus</name>
      <uri>
      http://www.blogger.com/profile/12927865413993995652</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/01/more-dependencies.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-4887533236802792471'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/4887533236802792471'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-473229548' />
    <gd:extendedProperty name='blogger.displayTime'
    value='January 23, 2007 3:49 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-5442757433490898690</id>
    <published>2007-01-27T06:39:00.000-08:00</published>
    <updated>2007-01-27T06:39:14.634-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>And then of course there is
    digraph_utils:topsort/...</title>
    <content type='html'>And then of course there is
    digraph_utils:topsort/1 in stdlib.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/2934427146437309940/comments/default/5442757433490898690' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/2934427146437309940/comments/default/5442757433490898690' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/01/topological-sort-joy.html?showComment=1169908740000#c5442757433490898690'
    title='' />
    <author>
      <name>Michael Arnoldus</name>
      <uri>
      http://www.blogger.com/profile/12927865413993995652</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/01/topological-sort-joy.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-2934427146437309940'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/2934427146437309940'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-473229548' />
    <gd:extendedProperty name='blogger.displayTime'
    value='January 27, 2007 6:39 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-6798935680603275446</id>
    <published>2007-01-27T12:49:00.000-08:00</published>
    <updated>2007-01-27T12:49:47.905-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Yes I know. I may change over if my needs
    become m...</title>
    <content type='html'>Yes I know. I may change over if my needs
    become more then they are. The digraph and digraph_utils add a
    bit of complexity. Of course, its library complexity which
    lessons the impact.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/2934427146437309940/comments/default/6798935680603275446' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/2934427146437309940/comments/default/6798935680603275446' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/01/topological-sort-joy.html?showComment=1169930940000#c6798935680603275446'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='32' height='24'
      src='http://www.metadrift.net/eric.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/01/topological-sort-joy.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-2934427146437309940'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/2934427146437309940'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='January 27, 2007 12:49 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-1151389161615655385</id>
    <published>2007-02-05T18:59:00.000-08:00</published>
    <updated>2007-02-05T18:59:40.613-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Great! As soon as you write a user
    documentation, ...</title>
    <content type='html'>Great!&lt;br /&gt;As soon as you write a
    user documentation, I'll try sinan!&lt;br /&gt;&lt;br
    /&gt;Release handling and code organisation is really not the
    easy part of otp...&lt;br /&gt;One question: when sinan build a
    release, does it become a standalone release that we can
    install on any host with erlang but without sinan? I guess so,
    but want to be sure ;)&lt;br /&gt;&lt;br /&gt;Thanks for this
    work!</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/6721096919513740339/comments/default/1151389161615655385' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/6721096919513740339/comments/default/1151389161615655385' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/02/code-complete.html?showComment=1170730740000#c1151389161615655385'
    title='' />
    <author>
      <name>khigia</name>
      <uri>
      http://www.blogger.com/profile/14024505104622024876</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/02/code-complete.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-6721096919513740339'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/6721096919513740339'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1252818409' />
    <gd:extendedProperty name='blogger.displayTime'
    value='February 5, 2007 6:59 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-4006977795279493881</id>
    <published>2007-02-05T20:32:00.000-08:00</published>
    <updated>2007-02-05T20:32:55.075-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Sinan builds a normal otp release. There
    isn't any...</title>
    <content type='html'>Sinan builds a normal otp release. There
    isn't anything specific to sinan in it. So sinan is a build
    time dependency (its a build system after all) but not a run
    time dependency.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/6721096919513740339/comments/default/4006977795279493881' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/6721096919513740339/comments/default/4006977795279493881' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/02/code-complete.html?showComment=1170736320000#c4006977795279493881'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='32' height='24'
      src='http://www.metadrift.net/eric.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/02/code-complete.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-6721096919513740339'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/6721096919513740339'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='February 5, 2007 8:32 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-3844679560614264968</id>
    <published>2007-02-15T01:55:00.000-08:00</published>
    <updated>2007-02-15T01:55:51.562-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Thanks! Now I have to try sinan as soon as
    possibl...</title>
    <content type='html'>Thanks! Now I have to try sinan as soon as
    possible :)</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/900778081419402185/comments/default/3844679560614264968' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/900778081419402185/comments/default/3844679560614264968' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/02/sinan-documentation.html?showComment=1171533300000#c3844679560614264968'
    title='' />
    <author>
      <name>khigia</name>
      <uri>
      http://www.blogger.com/profile/14024505104622024876</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/02/sinan-documentation.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-900778081419402185'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/900778081419402185'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1252818409' />
    <gd:extendedProperty name='blogger.displayTime'
    value='February 15, 2007 1:55 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-5332949393244172487</id>
    <published>2007-02-20T23:08:00.000-08:00</published>
    <updated>2007-02-20T23:08:10.889-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Right. This should handle that issue
    though.</title>
    <content type='html'>Right. This should handle that issue
    though.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/4887533236802792471/comments/default/5332949393244172487' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/4887533236802792471/comments/default/5332949393244172487' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/01/more-dependencies.html?showComment=1172041680000#c5332949393244172487'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='32' height='24'
      src='http://www.metadrift.net/eric.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/01/more-dependencies.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-4887533236802792471'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/4887533236802792471'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='February 20, 2007 11:08 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-1467769533173703008</id>
    <published>2007-02-21T15:13:00.000-08:00</published>
    <updated>2007-02-21T15:13:04.890-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>For symlinks you can use junctions instead,
    it wor...</title>
    <content type='html'>For symlinks you can use junctions
    instead, it works just fine for directories. All you have to do
    is take some care with tools that might delete some, as they
    are usualy not smart to just delete the
    link.&lt;BR/&gt;&lt;BR/&gt;Take a look
    at:&lt;BR/&gt;http://www.microsoft.com/technet/sysinternals/FileAndDisk/Junction.mspx</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/4365252994535574806/comments/default/1467769533173703008' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/4365252994535574806/comments/default/1467769533173703008' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/02/windows-support.html?showComment=1172099580000#c1467769533173703008'
    title='' />
    <author>
      <name>Rodrigo</name>
      <uri>
      http://www.blogger.com/profile/07856199840612069281</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/02/windows-support.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-4365252994535574806'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/4365252994535574806'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1485485044' />
    <gd:extendedProperty name='blogger.displayTime'
    value='February 21, 2007 3:13 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-1327413083830539231</id>
    <published>2007-02-21T16:08:00.000-08:00</published>
    <updated>2007-02-21T16:08:11.060-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Thanks for the info. That would probably
    work but ...</title>
    <content type='html'>Thanks for the info. That would probably
    work but it means special code for windows and I would like to
    avoid that if at all possible.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/4365252994535574806/comments/default/1327413083830539231' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/4365252994535574806/comments/default/1327413083830539231' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/02/windows-support.html?showComment=1172102880000#c1327413083830539231'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='32' height='24'
      src='http://www.metadrift.net/eric.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/02/windows-support.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-4365252994535574806'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/4365252994535574806'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='February 21, 2007 4:08 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-8873016632702717595</id>
    <published>2007-04-24T04:01:00.000-07:00</published>
    <updated>2007-04-24T04:01:52.458-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>How are you going to deal with accessibility
    issue...</title>
    <content type='html'>How are you going to deal with
    accessibility issues if you don't generate any HTML on the
    server side? Are all applications on this framework necessarily
    going to require javascript?</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/8873016632702717595' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/8873016632702717595' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html?showComment=1177412460000#c8873016632702717595'
    title='' />
    <author>
      <name>robertc</name>
      <uri>
      http://www.blogger.com/profile/04536310092574943046</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-970665623589855073'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/970665623589855073'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-795125882' />
    <gd:extendedProperty name='blogger.displayTime'
    value='April 24, 2007 4:01 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-7699416482911109646</id>
    <published>2007-04-24T04:55:00.000-07:00</published>
    <updated>2007-04-24T04:55:18.196-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>I've developed an application using a
    similar appr...</title>
    <content type='html'>I've developed an application using a
    similar approach using mod_python on the server and MochiKit
    with some YUI widgets on the client. &lt;BR/&gt;&lt;BR/&gt;It
    really makes the server side programming simple and gives more
    power to the UI development. Of course it has all the AJAX
    woes: browser compatibility, back button, session timeouts,
    ...&lt;BR/&gt;&lt;BR/&gt;In an intranet this is a viable
    option. For a public web app, I don't know.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/7699416482911109646' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/7699416482911109646' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html?showComment=1177415700000#c7699416482911109646'
    title='' />
    <author>
      <name>Juhani</name>
      <uri>
      http://www.blogger.com/profile/12653369614350390446</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-970665623589855073'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/970665623589855073'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-706388407' />
    <gd:extendedProperty name='blogger.displayTime'
    value='April 24, 2007 4:55 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-8760111384693256905</id>
    <published>2007-04-24T05:35:00.000-07:00</published>
    <updated>2007-04-24T05:35:43.589-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Repeated head bashing has started leading me
    in th...</title>
    <content type='html'>Repeated head bashing has started leading
    me in this direction.&lt;BR/&gt;&lt;BR/&gt;I'm using OpenLaszlo
    for the client side and JSON for message sending. Erlang runs
    on the server. The system is really simple, but the messages
    are not meant to be complex.&lt;BR/&gt;&lt;BR/&gt;In my case, a
    persistent connection is made, since I'm developing a web
    app.&lt;BR/&gt;&lt;BR/&gt;**&lt;BR/&gt;&lt;BR/&gt;As for
    ErlyWeb, I have much respect for Yariv and his &lt;A
    HREF="http://yarivsblog.com" REL="nofollow"&gt;efforts to
    evangelize Erlang&lt;/A&gt;. &lt;BR/&gt;&lt;BR/&gt;Though I
    haven't played with ROR, I have used Django. These systems are
    beautifully designed, but they just don't sit well with how I
    like to solve problems. &lt;BR/&gt;&lt;BR/&gt;So I've been
    loathe to try out ErlyWeb exactly for this
    reason.&lt;BR/&gt;&lt;BR/&gt;I instantly liked OpenLaszlo
    because, for all its faults, it almost forced me to make
    exactly the separation you're advocating. Once I went down this
    path, the road forward just seemed much simpler.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/8760111384693256905' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/8760111384693256905' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html?showComment=1177418100000#c8760111384693256905'
    title='' />
    <author>
      <name>Wynand</name>
      <uri>
      http://www.blogger.com/profile/04982097826539673880</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-970665623589855073'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/970665623589855073'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-63880418' />
    <gd:extendedProperty name='blogger.displayTime'
    value='April 24, 2007 5:35 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-7289569754802865439</id>
    <published>2007-04-24T06:29:00.000-07:00</published>
    <updated>2007-04-24T06:29:26.927-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>I've had some good luck experimenting with
    an appr...</title>
    <content type='html'>I've had some good luck experimenting with
    an approach like this. I have all interaction in both
    directions encoded as JSON. In other words, the posting of a
    form is transformed into a JSON bundle sent via XMLHttpRequest,
    and responses are similarly pure JSON. Client-side libraries
    support things like dropping values into "Edit" forms,
    populating tables, and so on.&lt;BR/&gt;&lt;BR/&gt;It's not
    hard (and has been done a few times) to encode basic data
    validation rules to be applied over a JSON data structure
    (generalizable of course to any similar representation). What I
    haven't done is experiment with how that can traverse the
    server/client boundary into on-page form validation (backed by
    server side validation). Error reporting is an issue, as is
    i18n (message catalogs as separate libraries leveraged by
    client-side template systems don't seem that hard
    though).&lt;BR/&gt;&lt;BR/&gt;It's a really interesting topic
    and one that I haven't seen discussed much. I don't think it's
    perfect but it's inspiring in some ways.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/7289569754802865439' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/7289569754802865439' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html?showComment=1177421340000#c7289569754802865439'
    title='' />
    <author>
      <name>Mike McNally</name>
      <uri>
      http://www.blogger.com/profile/15500789708992704945</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-970665623589855073'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/970665623589855073'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-131261881' />
    <gd:extendedProperty name='blogger.displayTime'
    value='April 24, 2007 6:29 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-2219409428734029707</id>
    <published>2007-04-24T08:55:00.000-07:00</published>
    <updated>2007-04-24T08:55:07.917-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>We just built a series of web pages where
    the serv...</title>
    <content type='html'>We just built a series of web pages where
    the server emits JSON data and some static javascript functions
    that build the page.&lt;BR/&gt;&lt;BR/&gt;I really like this
    paradigm of pushing the presentation work out to the client,
    but I think javascript is the wrong
    tool.&lt;BR/&gt;&lt;BR/&gt;What about XML and XSLT?</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/2219409428734029707' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/2219409428734029707' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html?showComment=1177430100000#c2219409428734029707'
    title='' />
    <author>
      <name>Matt Wilson</name>
      <uri>
      http://www.blogger.com/profile/06291653149012728746</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-970665623589855073'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/970665623589855073'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-438455636' />
    <gd:extendedProperty name='blogger.displayTime'
    value='April 24, 2007 8:55 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-5758920050222810561</id>
    <published>2007-04-24T09:46:00.000-07:00</published>
    <updated>2007-04-24T09:46:30.881-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>@robertc&lt;br&gt;&lt;br&gt; Initially I am
    not going to worry...</title>
    <content type='html'>@robertc&lt;BR/&gt;&lt;BR/&gt; Initially I
    am not going to worry about it. It something I am going to have
    to tackle, but not at this point.&lt;BR/&gt;&lt;BR/&gt;As for
    platforms that don't have javascript, well they wont be
    supported. The browser has become a bit of a platform, almost
    an OS for web applications. So I liken a browser that doesn't
    support javascript to an OS that has no facility to run
    programs both are pretty useless. This is a bit of blasphemy to
    many people, but I just treat it as a recognition of how the
    web has evolved in the last few years.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/5758920050222810561' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/5758920050222810561' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html?showComment=1177433160000#c5758920050222810561'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='32' height='24'
      src='http://www.metadrift.net/eric.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-970665623589855073'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/970665623589855073'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='April 24, 2007 9:46 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-5472984432356177247</id>
    <published>2007-04-24T09:47:00.000-07:00</published>
    <updated>2007-04-24T09:47:56.718-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>@juhani&lt;br&gt;&lt;br&gt; You may be
    right, there are quite ...</title>
    <content type='html'>@juhani&lt;BR/&gt;&lt;BR/&gt; You may be
    right, there are quite a few barriers. However, I think the
    time is probably right to test those barriers. I also have the
    good fortune that a lot of those barriers have already fallen
    to the various library developers out there.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/5472984432356177247' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/5472984432356177247' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html?showComment=1177433220000#c5472984432356177247'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='32' height='24'
      src='http://www.metadrift.net/eric.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-970665623589855073'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/970665623589855073'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='April 24, 2007 9:47 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-2267420619705571305</id>
    <published>2007-04-24T09:50:00.000-07:00</published>
    <updated>2007-04-24T09:50:27.793-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>@matt_wilson&lt;br&gt;&lt;br&gt;Xml and
    Xslt? I respect them b...</title>
    <content type='html'>@matt_wilson&lt;BR/&gt;&lt;BR/&gt;Xml and
    Xslt? I respect them both. I like the fact that Xslt is a
    functional language, though the syntax is the worst I have ever
    seen. That said I don't think they present a viable model for
    this type of approach.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/2267420619705571305' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/2267420619705571305' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html?showComment=1177433400000#c2267420619705571305'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='32' height='24'
      src='http://www.metadrift.net/eric.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-970665623589855073'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/970665623589855073'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='April 24, 2007 9:50 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-8086497023776715109</id>
    <published>2007-04-24T09:52:00.000-07:00</published>
    <updated>2007-04-24T09:52:04.441-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Back button.</title>
    <content type='html'>Back button.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/8086497023776715109' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/8086497023776715109' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html?showComment=1177433520000#c8086497023776715109'
    title='' />
    <author>
      <name>Neil</name>
      <uri>
      http://www.blogger.com/profile/16984299700156346552</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-970665623589855073'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/970665623589855073'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-2061271431' />
    <gd:extendedProperty name='blogger.displayTime'
    value='April 24, 2007 9:52 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-1634589295343646359</id>
    <published>2007-04-24T10:06:00.000-07:00</published>
    <updated>2007-04-24T10:06:05.281-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>&amp;gt; As for platforms that don&amp;#39;t
    have &lt;br&gt;&amp;gt;...</title>
    <content type='html'>&gt; As for platforms that don't have
    &lt;BR/&gt;&gt; javascript, well they wont be &lt;BR/&gt;&gt;
    supported. [...] This is a bit of &lt;BR/&gt;&gt; blasphemy to
    many people&lt;BR/&gt;&lt;BR/&gt;It's not so much that it's
    blasphemous, it's more that you're not going to meet WCAG 1.0
    Checkpoint 6.5, which is going to make it illegal to use your
    framework in certain situations (eg. UK Government websites
    require level 2 compliance). Also, perhaps more practically for
    your potential users, Googlebot (among others) does not have
    javascript.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/1634589295343646359' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/1634589295343646359' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html?showComment=1177434360000#c1634589295343646359'
    title='' />
    <author>
      <name>robertc</name>
      <uri>
      http://www.blogger.com/profile/04536310092574943046</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-970665623589855073'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/970665623589855073'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-795125882' />
    <gd:extendedProperty name='blogger.displayTime'
    value='April 24, 2007 10:06 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-2357515354284514907</id>
    <published>2007-04-24T10:11:00.000-07:00</published>
    <updated>2007-04-24T10:11:51.623-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>@robertc&lt;br&gt;&lt;br&gt;I am not too
    worried about the ina...</title>
    <content type='html'>@robertc&lt;BR/&gt;&lt;BR/&gt;I am not too
    worried about the inability to use the framework in certain
    government situations. In that case, its not the right tool for
    that job. Googlebot access is problem that will have to be
    solved. However, I don't think its intractable be any means.
    Its just going to take some creative thinking.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/2357515354284514907' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/2357515354284514907' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html?showComment=1177434660000#c2357515354284514907'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='32' height='24'
      src='http://www.metadrift.net/eric.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-970665623589855073'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/970665623589855073'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='April 24, 2007 10:11 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-3592294036452438544</id>
    <published>2007-04-24T10:34:00.000-07:00</published>
    <updated>2007-04-24T10:34:54.615-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>If your framework relies on Content
    Negotiation ou...</title>
    <content type='html'>If your framework relies on Content
    Negotiation out of the box to decide what to sent to the
    client, then the client can request the data in the format it
    requires. When GoogleBot or a screen reader comes knocking it
    could be made to serve up plain HTML to those
    clients.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/3592294036452438544' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/3592294036452438544' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html?showComment=1177436040000#c3592294036452438544'
    title='' />
    <author>
      <name>dkubb</name>
      <uri>
      http://www.blogger.com/profile/11017835890854426894</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-970665623589855073'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/970665623589855073'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-451824085' />
    <gd:extendedProperty name='blogger.displayTime'
    value='April 24, 2007 10:34 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-50550354796289703</id>
    <published>2007-04-24T12:30:00.000-07:00</published>
    <updated>2007-04-24T12:30:32.958-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>I am very interested to try this framework
    out! I...</title>
    <content type='html'>I am very interested to try this framework
    out! It sounds like a good architectural choice, esp. since
    &lt;A
    HREF="http://slideaware.typepad.com/slideaware/2007/04/from_python_to_.html"
    REL="nofollow"&gt;Slideaware was able to make a fairly painless
    transition to Erlang from RoR&lt;/A&gt; due to this same
    decoupling, according to the post.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/50550354796289703' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/50550354796289703' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html?showComment=1177443000000#c50550354796289703'
    title='' />
    <author>
      <name>casey</name>
      <uri>
      http://www.blogger.com/profile/01968757213843191873</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='32' height='32'
      src='http://casey.marshall.googlepages.com/orbitalthumb.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-970665623589855073'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/970665623589855073'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-492908512' />
    <gd:extendedProperty name='blogger.displayTime'
    value='April 24, 2007 12:30 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-277075720645581144</id>
    <published>2007-04-24T15:07:00.000-07:00</published>
    <updated>2007-04-24T15:07:48.378-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>I've been looking at finding something
    better than...</title>
    <content type='html'>I've been looking at finding something
    better than Yaws for app serving. carre looks pretty nice, but
    it assumes too many things. What it should do is get the method
    and headers, and then pass it off to something configurable. It
    shouldn't serve files or assume only GET and POST, etc. That
    stuff can be tacked on as handlers.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/277075720645581144' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/277075720645581144' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html?showComment=1177452420000#c277075720645581144'
    title='' />
    <author>
      <name>Bob Ippolito</name>
      <uri>
      http://www.blogger.com/profile/07207353943202074101</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-970665623589855073'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/970665623589855073'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-209444917' />
    <gd:extendedProperty name='blogger.displayTime'
    value='April 24, 2007 3:07 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-3793051887145266890</id>
    <published>2007-04-24T16:49:00.000-07:00</published>
    <updated>2007-04-24T16:49:16.228-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>@bob&lt;br&gt;&lt;br&gt; Carre is just a
    development shim. Its...</title>
    <content type='html'>@bob&lt;BR/&gt;&lt;BR/&gt; Carre is just a
    development shim. Its there to help make development in tercio
    a little simpler. In production tercio will probably sit behind
    yaws, lighttpd or something similar. Tercio doesn't really care
    what it sits behind for the most part. That said I have a
    friend working on an interesting http server for Erlang. He
    hasn't yet posted the source, but when he does it should be
    pretty interesting.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/3793051887145266890' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/3793051887145266890' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html?showComment=1177458540000#c3793051887145266890'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='32' height='24'
      src='http://www.metadrift.net/eric.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-970665623589855073'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/970665623589855073'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='April 24, 2007 4:49 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-4734064153510274005</id>
    <published>2007-04-25T03:25:00.000-07:00</published>
    <updated>2007-04-25T03:25:50.183-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Sitting behind lighttpd would either be HTTP
    or Fa...</title>
    <content type='html'>Sitting behind lighttpd would either be
    HTTP or FastCGI... so you need to get HTTP correct, or you need
    to do FastCGI. Right now carre does neither correct HTTP nor
    any FastCGI. Supporting HEAD would be a start for example, but
    I still think that carre is too high level for a viable
    replacement. It makes too many assumptions. It should make
    none.&lt;BR/&gt;&lt;BR/&gt;Yaws is what it is, but if it were a
    great platform you wouldn't have bothered half-assing a web
    server :)</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/4734064153510274005' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/4734064153510274005' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html?showComment=1177496700000#c4734064153510274005'
    title='' />
    <author>
      <name>Bob Ippolito</name>
      <uri>
      http://www.blogger.com/profile/07207353943202074101</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-970665623589855073'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/970665623589855073'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-209444917' />
    <gd:extendedProperty name='blogger.displayTime'
    value='April 25, 2007 3:25 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-8173575017111031077</id>
    <published>2007-04-25T08:43:00.000-07:00</published>
    <updated>2007-04-25T08:43:10.354-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Why is XML + XSLT not the right tool? I'm
    talking...</title>
    <content type='html'>Why is XML + XSLT not the right tool? I'm
    talking about a scenario where you deliver the raw XML data
    along with a stylesheet to the client, and the client applies
    the style to render the page.&lt;BR/&gt;&lt;BR/&gt;Syntax
    ugliness aside, how is this a bad model for what you're talking
    about?</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/8173575017111031077' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/8173575017111031077' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html?showComment=1177515780000#c8173575017111031077'
    title='' />
    <author>
      <name>Matt Wilson</name>
      <uri>
      http://www.blogger.com/profile/06291653149012728746</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-970665623589855073'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/970665623589855073'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-438455636' />
    <gd:extendedProperty name='blogger.displayTime'
    value='April 25, 2007 8:43 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-1135698831291183437</id>
    <published>2007-04-25T10:05:00.000-07:00</published>
    <updated>2007-04-25T10:05:44.510-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>@bob&lt;br&gt;&lt;br&gt;Bob, you are
    absolutely right about ev...</title>
    <content type='html'>@bob&lt;BR/&gt;&lt;BR/&gt;Bob, you are
    absolutely right about everything you have said about carre.
    However, its just a development shim its never intended for
    production. It supports just enough of http to let me site
    tercio behind it comfortably, no more no less. Sitting tercio
    behind yaws, or lighttpd wont involve carre at all, just tercio
    and some bridge code. As for fcgi support thats why I put
    together the efcgi project a while back. Its feature complete,
    but it still needs a bit of
    refactoring.&lt;BR/&gt;&lt;BR/&gt;You are absolutely right
    about yaws. I would like to see something a little cleaner come
    out of the community. Its not improbable that Scott will have
    an initial version of ache about before to long. It might be
    that that would satisfy you ;)</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/1135698831291183437' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/1135698831291183437' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html?showComment=1177520700000#c1135698831291183437'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='32' height='24'
      src='http://www.metadrift.net/eric.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-970665623589855073'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/970665623589855073'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='April 25, 2007 10:05 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-9116706048418699812</id>
    <published>2007-04-25T10:13:00.000-07:00</published>
    <updated>2007-04-25T10:13:36.207-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>@matt&lt;br&gt;&lt;br&gt;I understand the
    scenario you are tal...</title>
    <content type='html'>@matt&lt;BR/&gt;&lt;BR/&gt;I understand
    the scenario you are talking about. Its a pretty common
    approach, one that cocoon takes. Its not a bad model but its
    somewhat orthogonal to what I am trying to
    do.&lt;BR/&gt;&lt;BR/&gt;Well let me rephrase that. This would
    handle client side rendering completely. It would take that
    load off of the server and put it on the client. Thats good.
    Thats not all I am trying to do. I am also trying to get nice
    dynamic functionality. Where the client actually drives the
    experience, the workflow, (with adequate server side security
    of course). You could probably do that with the XML+XSLT
    approach by embedding javascript in the resultant output. You
    could probably even handle the idea of pulling down snippets of
    ui. However, it just doesn't seem an elegant solution to the
    problem. You are working with at least three different
    technologies each becoming involved at various points in the
    process. Thats a lot of added complexity that I don't think is
    required.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/9116706048418699812' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/9116706048418699812' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html?showComment=1177521180000#c9116706048418699812'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='32' height='24'
      src='http://www.metadrift.net/eric.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-970665623589855073'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/970665623589855073'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='April 25, 2007 10:13 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-3302541770171163364</id>
    <published>2007-04-25T14:42:00.000-07:00</published>
    <updated>2007-04-25T14:42:39.800-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Couldn't you separate presentation and
    business lo...</title>
    <content type='html'>Couldn't you separate presentation and
    business logic stuff on the server
    itself?&lt;BR/&gt;&lt;BR/&gt;So a completely separate app is
    used to generate the presentation and send them to the client
    with v little knowledge of the business logic
    app.&lt;BR/&gt;&lt;BR/&gt;Gets exactly the separation you want
    without the /need/ for javascript (u could always jazz up the
    front end if you wanted).</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/3302541770171163364' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/3302541770171163364' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html?showComment=1177537320000#c3302541770171163364'
    title='' />
    <author>
      <name>johnorford</name>
      <uri>
      http://www.blogger.com/profile/03523641844919145486</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='32' height='32'
      src='http://farm1.static.flickr.com/172/401209571_2212cfacd4_o.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-970665623589855073'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/970665623589855073'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1122103620' />
    <gd:extendedProperty name='blogger.displayTime'
    value='April 25, 2007 2:42 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-1502107380038335611</id>
    <published>2007-05-08T01:22:00.000-07:00</published>
    <updated>2007-05-08T01:22:26.713-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>The merging problem certainly exists but
    there is ...</title>
    <content type='html'>The merging problem certainly exists but
    there is a way to deal with it. Unlike when editing a file,
    what occurs when you update a bug isn't really arbitrary.
    You're usually adding a note, or making a change of state (open
    -&gt; resolved, etc). So taking a card from how git works you
    can store each change operation as a separate file/object which
    references its parent object. Each change operation might look
    something like:&lt;BR/&gt;&lt;BR/&gt;state: open -&gt;
    resolved; owner: -&gt; alexbl&lt;BR/&gt;&lt;BR/&gt;or something
    like that. So this way you're atomizing each change operation
    while also creating a much cleaner merge path. It would
    seemingly simplify the merging process
    significantly.&lt;BR/&gt;&lt;BR/&gt;As for referencing bugs,
    one way to deal with this might be to simply use urls. so I
    might have a change operation
    like:&lt;BR/&gt;&lt;BR/&gt;relation-add:
    bugs://bugs.example.org/bugs/example/e9a3233fe4db7be6acf6b3468fa70421c9840771&lt;BR/&gt;&lt;BR/&gt;Which
    would reference the bug from which&lt;BR/&gt;all of the change
    operations could be pulled.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5049029583926631782/comments/default/1502107380038335611' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5049029583926631782/comments/default/1502107380038335611' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/05/distributed-bug-tracking.html?showComment=1178612520000#c1502107380038335611'
    title='' />
    <author>
      <name>alexbl</name>
      <uri>
      http://www.blogger.com/profile/07910313501358762052</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/05/distributed-bug-tracking.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5049029583926631782'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5049029583926631782'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1990720615' />
    <gd:extendedProperty name='blogger.displayTime'
    value='May 8, 2007 1:22 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-3948237088867324761</id>
    <published>2007-05-08T04:20:00.000-07:00</published>
    <updated>2007-05-08T04:20:23.463-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>I've put together some notes on how I
    envision a d...</title>
    <content type='html'>I've put together some notes on how I
    envision a distributed bug tracker would work on my blog which
    may be of interest to you: &lt;A
    HREF="http://www.geekfire.com/~alex/blog/entries/Ideas-for-a-distributed-bug-tracking-system/Ideas-for-a-distributed-bug-tracking-system.html"
    REL="nofollow"&gt;&lt;BR/&gt;http://www.geekfire.com/~alex/blog/entries/Ideas-for-a-distributed-bug-tracking-system/Ideas-for-a-distributed-bug-tracking-system.html&lt;/A&gt;.
    Any comments or ideas you might have would be much
    appreciated.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5049029583926631782/comments/default/3948237088867324761' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5049029583926631782/comments/default/3948237088867324761' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/05/distributed-bug-tracking.html?showComment=1178623200000#c3948237088867324761'
    title='' />
    <author>
      <name>alexbl</name>
      <uri>
      http://www.blogger.com/profile/07910313501358762052</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/05/distributed-bug-tracking.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5049029583926631782'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5049029583926631782'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1990720615' />
    <gd:extendedProperty name='blogger.displayTime'
    value='May 8, 2007 4:20 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-7572465804195406383</id>
    <published>2007-05-08T08:53:00.000-07:00</published>
    <updated>2007-05-08T08:53:20.364-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>So perhaps I haven't stated the problem as
    well as...</title>
    <content type='html'>So perhaps I haven't stated the problem as
    well as I should have. The problem isn't actually in doing the
    merge. Its in finding the two documents in need of merging.
    User X creates description of bug Y, User Z also creates a
    description of bug Y. However, they are two different entries
    related only by the content. When these two users go to
    replicate with each other how do you figure out that these two
    bugs are actually about the same issue? Thats the fundamental
    question. Not the actually merging.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5049029583926631782/comments/default/7572465804195406383' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5049029583926631782/comments/default/7572465804195406383' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/05/distributed-bug-tracking.html?showComment=1178639580000#c7572465804195406383'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='32' height='24'
      src='http://www.metadrift.net/eric.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/05/distributed-bug-tracking.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5049029583926631782'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5049029583926631782'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='May 8, 2007 8:53 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-7119597369744494797</id>
    <published>2007-05-08T08:53:00.001-07:00</published>
    <updated>2007-05-08T08:53:54.383-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>I will take a look thanks.</title>
    <content type='html'>I will take a look thanks.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5049029583926631782/comments/default/7119597369744494797' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5049029583926631782/comments/default/7119597369744494797' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/05/distributed-bug-tracking.html?showComment=1178639580001#c7119597369744494797'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='32' height='24'
      src='http://www.metadrift.net/eric.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/05/distributed-bug-tracking.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5049029583926631782'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5049029583926631782'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='May 8, 2007 8:53 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-268117854496265505</id>
    <published>2007-05-08T11:31:00.000-07:00</published>
    <updated>2007-05-08T11:31:07.307-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>That problem occurs in _all_ bug tracking
    systems....</title>
    <content type='html'>That problem occurs in _all_ bug tracking
    systems. It's why bug trackers often include the ability to set
    a bug as a duplicate of another bug. In a distributed system
    you might actually be better off because if you sufficiently
    atomize the bug information and change operations you can merge
    the differences between the bugs fairly easily (i.e. bug A has
    two notes and bug B has three notes, Bug A is marked a
    duplicate of Bug B and the notes which are distinct atoms are
    merged from from Bug A into Bug B).</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5049029583926631782/comments/default/268117854496265505' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5049029583926631782/comments/default/268117854496265505' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/05/distributed-bug-tracking.html?showComment=1178649060000#c268117854496265505'
    title='' />
    <author>
      <name>alexbl</name>
      <uri>
      http://www.blogger.com/profile/07910313501358762052</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/05/distributed-bug-tracking.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5049029583926631782'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5049029583926631782'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1990720615' />
    <gd:extendedProperty name='blogger.displayTime'
    value='May 8, 2007 11:31 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-5557950795523441287</id>
    <published>2007-05-08T12:16:00.000-07:00</published>
    <updated>2007-05-08T12:16:01.825-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Of course, its a problem in every bug
    tracking sys...</title>
    <content type='html'>Of course, its a problem in every bug
    tracking system. My argument is that in a distributed bug
    tracking system the problem is going to be significantly worse.
    Now, I have no data to back this supposition but that seems a
    pretty logical conclusion. In the case of a distributed system
    bugs are hidden until replication. That means that even if you
    search it may not be there to find. Hence, increased
    duplication. I think it may be enough of a problem to cause
    serious, serious issues in the long term.
    &lt;BR/&gt;&lt;BR/&gt;&lt;BR/&gt;I agree with you that merging
    will be fairly strait forward and usable. However, that doesn't
    provide a solution to the finding duplicates problem.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5049029583926631782/comments/default/5557950795523441287' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5049029583926631782/comments/default/5557950795523441287' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/05/distributed-bug-tracking.html?showComment=1178651760000#c5557950795523441287'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='32' height='24'
      src='http://www.metadrift.net/eric.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/05/distributed-bug-tracking.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5049029583926631782'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5049029583926631782'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='May 8, 2007 12:16 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-1204981888399228049</id>
    <published>2007-05-08T12:31:00.000-07:00</published>
    <updated>2007-05-08T12:31:28.634-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>The difference of opinions here lies in the
    fact t...</title>
    <content type='html'>The difference of opinions here lies in
    the fact that I think that the strong support for merging
    (which i don't thing is as possible as would be required if one
    were to build this bug tracker on a distributed file system
    like monotone or git) will resolve a big problem with duplicate
    bugs that current bug trackers can't. Instead of having to try
    and keep track of ideas across two bugs as is often the case (I
    can point out a number of examples of that in XMMS2's bug
    tracker where comments are spread out across duplicate bug
    reports) those notes can all be merged into a single bug
    report.&lt;BR/&gt;&lt;BR/&gt;So while I do agree that there may
    be more duplicate bugs, I think that a distributed bug tracker
    would provided a much better method for resolving those
    duplicate entries.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5049029583926631782/comments/default/1204981888399228049' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5049029583926631782/comments/default/1204981888399228049' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/05/distributed-bug-tracking.html?showComment=1178652660000#c1204981888399228049'
    title='' />
    <author>
      <name>alexbl</name>
      <uri>
      http://www.blogger.com/profile/07910313501358762052</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/05/distributed-bug-tracking.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5049029583926631782'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5049029583926631782'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1990720615' />
    <gd:extendedProperty name='blogger.displayTime'
    value='May 8, 2007 12:31 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-9006586922515893090</id>
    <published>2007-05-08T12:34:00.000-07:00</published>
    <updated>2007-05-08T12:34:59.944-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>I think we are in agreement for the most
    part then...</title>
    <content type='html'>I think we are in agreement for the most
    part then. We have a different view of the severity of
    duplicates perhaps, but only time using bug trackers of this
    type will provide an answer that question</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5049029583926631782/comments/default/9006586922515893090' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5049029583926631782/comments/default/9006586922515893090' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/05/distributed-bug-tracking.html?showComment=1178652840000#c9006586922515893090'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='32' height='24'
      src='http://www.metadrift.net/eric.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/05/distributed-bug-tracking.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5049029583926631782'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5049029583926631782'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='May 8, 2007 12:34 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-8156097975210059604</id>
    <published>2007-05-15T19:11:00.000-07:00</published>
    <updated>2007-05-15T19:11:19.910-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>You idea seems appealing.
    &lt;br&gt;&lt;br&gt;What if the disp...</title>
    <content type='html'>You idea seems appealing.
    &lt;BR/&gt;&lt;BR/&gt;What if the display has to meet business
    rules that belongs to the server side.&lt;BR/&gt;&lt;BR/&gt;For
    simple case, you might choose to display components if the data
    is sent by the server or feed the client with display rules
    (flags) coming from the server.&lt;BR/&gt;&lt;BR/&gt;But let
    say you wish to show the user with specific screens according
    to specific rules. At that point, the user interface is so
    dynamic that it might be clumsy to use static client templates.
    Generate the html on the fly seems to make perfect
    sense.&lt;BR/&gt;&lt;BR/&gt;Do you think it is a valid concern
    ?</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/8156097975210059604' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/8156097975210059604' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html?showComment=1179281460000#c8156097975210059604'
    title='' />
    <author>
      <name>Pierre</name>
      <uri>
      http://www.blogger.com/profile/07709580305967202558</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-970665623589855073'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/970665623589855073'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-858459331' />
    <gd:extendedProperty name='blogger.displayTime'
    value='May 15, 2007 7:11 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-5208263562216583793</id>
    <published>2007-05-15T20:52:00.000-07:00</published>
    <updated>2007-05-15T20:52:15.504-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>@pierre&lt;br&gt;&lt;br&gt;Your concerns are
    valid. However, I...</title>
    <content type='html'>@pierre&lt;BR/&gt;&lt;BR/&gt;Your concerns
    are valid. However, I think I have them covered. All data that
    comes from the client must be validated on the server according
    to whatever business rules are in effect. This is always the
    case in web apps. The central maxim 'you can't trust the
    client' is as true here as anywhere else.
    &lt;BR/&gt;&lt;BR/&gt;As for dynamicity of the page. This model
    is geared around javascript and templates that render small
    parts of the page. This should make component based development
    pretty easy and should address your concerns.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/5208263562216583793' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/5208263562216583793' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html?showComment=1179287520000#c5208263562216583793'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='32' height='24'
      src='http://www.metadrift.net/eric.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-970665623589855073'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/970665623589855073'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='May 15, 2007 8:52 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-9188192808888314772</id>
    <published>2007-05-30T01:41:00.000-07:00</published>
    <updated>2007-05-30T01:41:04.296-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Hi Eric,&lt;br&gt;interesting post and
    interesting compa...</title>
    <content type='html'>Hi Eric,&lt;BR/&gt;interesting post and
    interesting comparison.&lt;BR/&gt;&lt;BR/&gt;And now I have to
    add also Forth to the list of languages to learn ;-)</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/8357633642576677337/comments/default/9188192808888314772' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/8357633642576677337/comments/default/9188192808888314772' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/05/shape-of-your-mind.html?showComment=1180514460000#c9188192808888314772'
    title='' />
    <author>
      <name>filippo</name>
      <uri>
      http://www.blogger.com/profile/17480111740286441555</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/05/shape-of-your-mind.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-8357633642576677337'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/8357633642576677337'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-5699457' />
    <gd:extendedProperty name='blogger.displayTime'
    value='May 30, 2007 1:41 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-4019003184836871116</id>
    <published>2007-05-30T08:10:00.000-07:00</published>
    <updated>2007-05-30T08:10:49.921-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Not sure what you consider the difference
    between ...</title>
    <content type='html'>Not sure what you consider the difference
    between static typing and dynamic typing. I have never seen
    this clearly defined.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/8357633642576677337/comments/default/4019003184836871116' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/8357633642576677337/comments/default/4019003184836871116' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/05/shape-of-your-mind.html?showComment=1180537800000#c4019003184836871116'
    title='' />
    <author>
      <name>Brad</name>
      <uri>
      http://www.blogger.com/profile/16206864251085268607</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/05/shape-of-your-mind.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-8357633642576677337'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/8357633642576677337'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1149456984' />
    <gd:extendedProperty name='blogger.displayTime'
    value='May 30, 2007 8:10 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-8322291607873452530</id>
    <published>2007-05-30T10:15:00.000-07:00</published>
    <updated>2007-05-30T10:15:40.936-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Brad, &lt;br&gt;&lt;br&gt; Typing is
    somewhat convoluted. I ju...</title>
    <content type='html'>Brad, &lt;BR/&gt;&lt;BR/&gt; Typing is
    somewhat convoluted. I just use the simplistic definition that
    static typing existing in languages where the type is
    determined at compile time and usage restrictions (compile
    errors) are placed based on the determined type. Dynamic typing
    is where type is never determined or type is determined at
    runtime. No restrictions are placed but operations may fail on
    an unexpected type. Like I said its a simplistic definition but
    it works in the general case.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/8357633642576677337/comments/default/8322291607873452530' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/8357633642576677337/comments/default/8322291607873452530' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/05/shape-of-your-mind.html?showComment=1180545300000#c8322291607873452530'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='32' height='24'
      src='http://www.metadrift.net/eric.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/05/shape-of-your-mind.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-8357633642576677337'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/8357633642576677337'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='May 30, 2007 10:15 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-5369728241778713330</id>
    <published>2007-05-30T11:50:00.000-07:00</published>
    <updated>2007-05-30T11:50:29.221-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>You've rediscovered/described a variation of
    the S...</title>
    <content type='html'>You've rediscovered/described a variation
    of the Sapir-Whorf
    hypothesis.&lt;BR/&gt;http://en.wikipedia.org/wiki/The_Sapir-Whorf_Hypothesis</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/8357633642576677337/comments/default/5369728241778713330' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/8357633642576677337/comments/default/5369728241778713330' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/05/shape-of-your-mind.html?showComment=1180551000000#c5369728241778713330'
    title='' />
    <author>
      <name>Vince P.</name>
      <uri>
      http://www.blogger.com/profile/05116570588764451191</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/05/shape-of-your-mind.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-8357633642576677337'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/8357633642576677337'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-653291654' />
    <gd:extendedProperty name='blogger.displayTime'
    value='May 30, 2007 11:50 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-4950588560408086860</id>
    <published>2007-05-30T12:23:00.000-07:00</published>
    <updated>2007-05-30T12:23:08.739-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Vince,&lt;br&gt;&lt;br&gt; That is
    extraordinarily cool. Thank...</title>
    <content type='html'>Vince,&lt;BR/&gt;&lt;BR/&gt; That is
    extraordinarily cool. Thanks for the pointer!</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/8357633642576677337/comments/default/4950588560408086860' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/8357633642576677337/comments/default/4950588560408086860' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/05/shape-of-your-mind.html?showComment=1180552980000#c4950588560408086860'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='32' height='24'
      src='http://www.metadrift.net/eric.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/05/shape-of-your-mind.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-8357633642576677337'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/8357633642576677337'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='May 30, 2007 12:23 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-5846284606057157398</id>
    <published>2007-05-31T14:51:00.000-07:00</published>
    <updated>2007-05-31T14:51:22.182-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>&lt;a
    href="http://www.oreillynet.com/onlamp/blog/200...</title>
    <content type='html'>&lt;A
    HREF="http://www.oreillynet.com/onlamp/blog/2006/05/sapirwhorf_is_not_a_klingon.html"
    REL="nofollow"&gt;Sapir -Whorf is not a Klingon&lt;/A&gt;
    brought up this type of discussion just about a year ago, and
    both the article and extensive comments are worth
    browsing.&lt;BR/&gt;&lt;BR/&gt;First, I'd really like to find
    what a few thoughtful linguists would have to say about
    applying Sapir-Whorf to programming languages or mathematical
    notations.&lt;BR/&gt;&lt;BR/&gt;Second, yeah it's not too
    surprising that the people and objects you surround yourself
    with influence what you think about and
    how.&lt;BR/&gt;&lt;BR/&gt;I'm guessing 18th century carpenters
    didn't spend much time thinking about rapidly rotating cutting
    tools, or joinery techniques made simple by very rigid
    specially made "pins" (screws), even if the thought occurred to
    some of them.&lt;BR/&gt;&lt;BR/&gt;Cabinetmakers used to spend
    lots of time making beautiful elegant dovetail joints, modern
    folks usually just butt two boards together and join them with
    screws and glue, maybe countersinking and counterboring the
    screw and plugging it with a wood plug to be
    fancy.&lt;BR/&gt;&lt;BR/&gt;Which is more elegant? I'd say the
    dovetail joints are more elegant. Which is more economical now?
    The boring way that relies on modern hardware for the strength
    of the joint.&lt;BR/&gt;&lt;BR/&gt;I'm hazarding a guess that a
    modern carpenter who makes dovetail joints is going to be in a
    narrow economic niche where his work product can be sold at a
    premium. The average furniture consumer can't afford the
    elegant, time-consuming joinery.&lt;BR/&gt;&lt;BR/&gt;I guess
    it could sound like I'm making an analogy between boring
    languages and elegant languages to boring carpentry techniques
    and elegant carpentry techniques. I'm not, but I would like to
    see some careful studies run on programming language
    productivity. The annual programming contest sponsored by the
    &lt;A
    HREF="http://www.informatik.uni-bonn.de/~ralf/icfp07.html"
    REL="nofollow"&gt;ICFP&lt;/A&gt; is supposed to be one way to
    show functional languages are more
    productive.&lt;BR/&gt;&lt;BR/&gt;As a programming language
    enthusiast and student (in the abstract sense), I
    wholeheartedly agree that people should try to improve
    themselves and learn about other techniques and
    ideas.&lt;BR/&gt;&lt;BR/&gt;But I also want to caution the
    compulsive hacker on following the route of pursuing
    alternative languages. There's a lot of elegance out there in
    languages you may not be using at work. You may become
    dissatisfied with the practical demands of software development
    based on language alone. And even if you get to program in a
    cooler language, you'll reach the point where you recognize
    faults in the language of your choice, and start to dream up
    your own even cooler language.&lt;BR/&gt;&lt;BR/&gt;There's a
    point of diminishing returns here where we can get too caught
    up in language design and forget to put enough consideration on
    what we're using it for.&lt;BR/&gt;&lt;BR/&gt;Does anyone ever
    count how many hours it takes to design and implement a
    language, compared with how many hours the language is supposed
    to save, counting also the amount of effort it takes to train
    programmers new to the language, especially in your
    mind-bending pet language feature? I suspect precious little of
    that sort of cold, calculating engineering activity is done,
    because programming language design is just overwhelmingly too
    much fun.&lt;BR/&gt;&lt;BR/&gt;Just sharing a little
    introspection from a fellow language junkie.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/8357633642576677337/comments/default/5846284606057157398' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/8357633642576677337/comments/default/5846284606057157398' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/05/shape-of-your-mind.html?showComment=1180648260000#c5846284606057157398'
    title='' />
    <author>
      <name>jfklein</name>
      <uri>
      http://www.blogger.com/profile/10941573678144316048</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/05/shape-of-your-mind.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-8357633642576677337'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/8357633642576677337'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1408179685' />
    <gd:extendedProperty name='blogger.displayTime'
    value='May 31, 2007 2:51 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-585120760256737939</id>
    <published>2007-05-31T19:00:00.000-07:00</published>
    <updated>2007-05-31T19:00:15.152-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Isn't ADA statically typed ?</title>
    <content type='html'>Isn't ADA statically typed ?</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/8357633642576677337/comments/default/585120760256737939' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/8357633642576677337/comments/default/585120760256737939' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/05/shape-of-your-mind.html?showComment=1180663200000#c585120760256737939'
    title='' />
    <author>
      <name>Pierre</name>
      <uri>
      http://www.blogger.com/profile/07709580305967202558</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/05/shape-of-your-mind.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-8357633642576677337'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/8357633642576677337'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-858459331' />
    <gd:extendedProperty name='blogger.displayTime'
    value='May 31, 2007 7:00 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-3894714410698524336</id>
    <published>2007-06-01T00:09:00.000-07:00</published>
    <updated>2007-06-01T00:09:28.206-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Nice list of families, thanks. On the
    sapir-whorf ...</title>
    <content type='html'>Nice list of families, thanks. On the
    sapir-whorf angle, you might want to see Matz' (ruby language
    creator) thoughts on the subject. He also points out some of
    the keywords chosen in ruby and how they can encourage good
    behaviour (dangerous keywords take longer to type,
    etc.):&lt;BR/&gt;&lt;BR/&gt;
    http://www.rubyist.net/~matz/slides/oscon2003/index.html</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/8357633642576677337/comments/default/3894714410698524336' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/8357633642576677337/comments/default/3894714410698524336' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/05/shape-of-your-mind.html?showComment=1180681740000#c3894714410698524336'
    title='' />
    <author>
      <name>Dick</name>
      <uri>
      http://www.blogger.com/profile/04418602790473138764</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/05/shape-of-your-mind.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-8357633642576677337'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/8357633642576677337'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1641016815' />
    <gd:extendedProperty name='blogger.displayTime'
    value='June 1, 2007 12:09 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-7943439863781717371</id>
    <published>2007-06-01T20:36:00.000-07:00</published>
    <updated>2007-06-01T20:36:50.391-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>@pierre&lt;br&gt;&lt;br&gt;Ada is statically
    typed, I just had...</title>
    <content type='html'>@pierre&lt;BR/&gt;&lt;BR/&gt;Ada is
    statically typed, I just had a mental hiccup there. Thanks for
    pointing it out. (btw Ada is a name not an acronym so no need
    for all caps).</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/8357633642576677337/comments/default/7943439863781717371' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/8357633642576677337/comments/default/7943439863781717371' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/05/shape-of-your-mind.html?showComment=1180755360000#c7943439863781717371'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='32' height='24'
      src='http://www.metadrift.net/eric.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/05/shape-of-your-mind.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-8357633642576677337'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/8357633642576677337'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='June 1, 2007 8:36 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-5614642789684259038</id>
    <published>2007-06-26T16:58:00.000-07:00</published>
    <updated>2007-06-26T16:58:00.585-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>I believe that it's important to remember
    that in ...</title>
    <content type='html'>I believe that it's important to remember
    that in most cases of distributed development there is actually
    a central repository and often even a set of developers
    personal repositories are stored on the central repository.
    With that in mind I think that the process of checking for
    duplicate bugs would be checked for in the central repository.
    Of course that doesn't preclude the likelihood that people
    would leave bugs sitting around in their own repositories
    without pushing, but the same is a theoretical problem of
    distributed source repositories (a developer doesn't push a
    major change so someone else writes it,) but I find in practice
    that people like to show off what they're working on. With a
    bug tracker this is doubly so, filing a bug report usually
    means you want people to know about it as quickly as possible
    so it can be fixed, and thus you are likely to push it
    centrally as quickly as you have the bandwidth available to do
    so. &lt;BR/&gt;&lt;BR/&gt;On the issue of a unique identifier,
    my current tendency in dbugt has been to avoid the problem by
    using the sha256 of the data of the initial bug as the
    identifier across changes. This is an idea I'm kind of afraid
    of but also kind of interested in experimenting with. It would
    mean that if an identical bug were submitted the data would be
    automatically merged into the other bug report (this concept
    presents in GIT as well where data is addressed by content
    instead of by filename, and so changes carry across filenames
    without specifically coding for that contention.)</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/1342130227258194021/comments/default/5614642789684259038' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/1342130227258194021/comments/default/5614642789684259038' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/06/distributed-bug-tracking-again.html?showComment=1182902280000#c5614642789684259038'
    title='' />
    <author>
      <name>alexbl</name>
      <uri>
      http://www.blogger.com/profile/07910313501358762052</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/06/distributed-bug-tracking-again.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-1342130227258194021'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/1342130227258194021'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1990720615' />
    <gd:extendedProperty name='blogger.displayTime'
    value='June 26, 2007 4:58 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-2032329479326527474</id>
    <published>2007-06-26T17:03:00.000-07:00</published>
    <updated>2007-06-26T17:03:34.048-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Indeed.</title>
    <content type='html'>Indeed.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/1342130227258194021/comments/default/2032329479326527474' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/1342130227258194021/comments/default/2032329479326527474' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/06/distributed-bug-tracking-again.html?showComment=1182902580000#c2032329479326527474'
    title='' />
    <author>
      <name>Christopher</name>
      <uri>
      http://www.blogger.com/profile/17994815610805998528</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/06/distributed-bug-tracking-again.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-1342130227258194021'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/1342130227258194021'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1429654905' />
    <gd:extendedProperty name='blogger.displayTime'
    value='June 26, 2007 5:03 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-2179214381448578291</id>
    <published>2007-06-26T17:24:00.000-07:00</published>
    <updated>2007-06-26T17:24:06.261-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>@alex&lt;br&gt;&lt;br&gt; I would argue that
    if someone was do...</title>
    <content type='html'>@alex&lt;BR/&gt;&lt;BR/&gt; I would argue
    that if someone was doing development with a central repository
    then, by its own definition its not distributed. Now, having a
    repository that serves as a canonical repository is a different
    story. In the case of a canonical repository it doesn't get
    pushed to unless there are 'canonical' worthy changes. This
    type of push will happen much less frequently then a push to a
    central repository. Also the practice of pushing to and pulling
    from individual developer repositories is a major use case for
    distributed development tools and should be
    supported.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/1342130227258194021/comments/default/2179214381448578291' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/1342130227258194021/comments/default/2179214381448578291' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/06/distributed-bug-tracking-again.html?showComment=1182903840000#c2179214381448578291'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='32' height='24'
      src='http://www.metadrift.net/eric.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/06/distributed-bug-tracking-again.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-1342130227258194021'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/1342130227258194021'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='June 26, 2007 5:24 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-4650735311605545828</id>
    <published>2007-06-26T17:45:00.000-07:00</published>
    <updated>2007-06-26T17:45:31.223-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>I don't believe my statements about
    distributed pr...</title>
    <content type='html'>I don't believe my statements about
    distributed practice preclude pushing and pulling from
    developer repositories, as a matter of fact I noted that those
    repositories are often centrally published to facilitate that
    practice. &lt;BR/&gt;&lt;BR/&gt;We use git for XMMS2
    development, and generally developers will develop locally,
    potentially on a branch, and then push changes to their user
    repository which, when considered complete, are pulled into the
    mainline branch by one of the two people that has write access.
    Note though that the development is often (but not always) made
    public in the developers branch. I figure the same would happen
    with bugs, and would be more likely to happen because of the
    nature of a bug. You want people to know about bugs as quickly
    as possible.&lt;BR/&gt;&lt;BR/&gt;The real advantage of
    distributed development in bug tracking is localized repository
    access and offline editing. This way developers are always able
    to note work they're doing on a bug and are always able to
    browse for past bugs related to the topic. The presence of bug
    history at all times has the advantage that developers when
    working on a problem are more likely to know about duplicated
    information about a problem rather then less likely. Remember
    that developers will be working with a clone of the ``canonical
    repository,'' and so they will have access to reasonably up to
    date information about the bug hunting process which a develop
    using a centralized bug repository would not have if they were
    not online.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/1342130227258194021/comments/default/4650735311605545828' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/1342130227258194021/comments/default/4650735311605545828' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/06/distributed-bug-tracking-again.html?showComment=1182905100000#c4650735311605545828'
    title='' />
    <author>
      <name>alexbl</name>
      <uri>
      http://www.blogger.com/profile/07910313501358762052</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/06/distributed-bug-tracking-again.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-1342130227258194021'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/1342130227258194021'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1990720615' />
    <gd:extendedProperty name='blogger.displayTime'
    value='June 26, 2007 5:45 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-4981515544173615024</id>
    <published>2007-06-26T17:57:00.000-07:00</published>
    <updated>2007-06-26T17:57:36.405-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>@alex&lt;br&gt;&lt;br&gt; I didn't mean to
    imply otherwise. In...</title>
    <content type='html'>@alex&lt;BR/&gt;&lt;BR/&gt; I didn't mean
    to imply otherwise. In your description, however, you
    downplayed its prominence in distributed development. In
    distributed development it is the primary case not a side case
    as it may be in other practices, thats all I was trying to get
    across.&lt;BR/&gt;&lt;BR/&gt; I think you are right in that
    issue tracking repositories will be public along with source
    repositories. In fact, I think the issue tracking repositories
    will live inside of the source repositories and use the
    distributed version control systems for its versioning and
    distribution model.&lt;BR/&gt;&lt;BR/&gt;I agree with your last
    paragraph 100%</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/1342130227258194021/comments/default/4981515544173615024' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/1342130227258194021/comments/default/4981515544173615024' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/06/distributed-bug-tracking-again.html?showComment=1182905820000#c4981515544173615024'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='32' height='24'
      src='http://www.metadrift.net/eric.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/06/distributed-bug-tracking-again.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-1342130227258194021'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/1342130227258194021'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='June 26, 2007 5:57 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-3269247683561854992</id>
    <published>2007-06-26T18:04:00.000-07:00</published>
    <updated>2007-06-26T18:04:48.976-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>I seem to be in a minority who thinks that a
    file ...</title>
    <content type='html'>I seem to be in a minority who thinks that
    a file (or in git's case content) tracking system isn't really
    well suited to tracking bug data. I know that the author of
    distract opted to put each bug on its own branch to make
    tracking bug history easier which is probably the approach I
    would take if I were going to integrate a bug repository
    information into a normal dvcs. It's better for tracking per
    bug history, and it also keeps the bugs away from the source in
    the working directory (which has its advantageous) Conversely
    though there are some advantageous to commiting a bug fix and a
    bug close in one hit which is harder to do if the bug is its
    own branch.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/1342130227258194021/comments/default/3269247683561854992' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/1342130227258194021/comments/default/3269247683561854992' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/06/distributed-bug-tracking-again.html?showComment=1182906240000#c3269247683561854992'
    title='' />
    <author>
      <name>alexbl</name>
      <uri>
      http://www.blogger.com/profile/07910313501358762052</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/06/distributed-bug-tracking-again.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-1342130227258194021'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/1342130227258194021'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1990720615' />
    <gd:extendedProperty name='blogger.displayTime'
    value='June 26, 2007 6:04 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-4648284512311260409</id>
    <published>2007-06-26T19:50:00.000-07:00</published>
    <updated>2007-06-26T19:50:12.716-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>I actually think a dvcs is a good tool to
    handle a...</title>
    <content type='html'>I actually think a dvcs is a good tool to
    handle a bug tracking repository. Issues can be just a source
    file and dvcs's are good at tracking files.
    &lt;BR/&gt;&lt;BR/&gt;I don't think its a good idea to put each
    bug on its own branch. I don't really see what the distract
    author is getting out of it.&lt;BR/&gt;&lt;BR/&gt;You can keep
    bugs away from source without puting each bug in its own
    branch. Just have a sing area for bugs.&lt;BR/&gt;&lt;BR/&gt;A
    dvcs by itself isn't enough to handle a bug tracking system.
    There needs to be several tools available to augment the
    dvcs.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/1342130227258194021/comments/default/4648284512311260409' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/1342130227258194021/comments/default/4648284512311260409' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/06/distributed-bug-tracking-again.html?showComment=1182912600000#c4648284512311260409'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='32' height='24'
      src='http://www.metadrift.net/eric.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/06/distributed-bug-tracking-again.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-1342130227258194021'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/1342130227258194021'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='June 26, 2007 7:50 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-984965013832685007</id>
    <published>2007-06-26T22:43:00.000-07:00</published>
    <updated>2007-06-26T22:43:30.028-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>It's a lot easier to handle merging if you
    put eac...</title>
    <content type='html'>It's a lot easier to handle merging if you
    put each field in a separate file. (which both I and distract
    do). The reason for using a branch is to get cheaper history
    operations. Depending on the dvcs you're using calculating
    history on a filename (or group of filenames) basis can be very
    costly.&lt;BR/&gt;&lt;BR/&gt;Merging could also be facilitated
    by a custom merging algorithm that's suited to merging the
    field_name, value format that you're most likely to use in a
    dvcs. Some issues you face using a single file
    are:&lt;BR/&gt;&lt;BR/&gt;1. Order of the field, value map
    doesn't really matter, but order of lines in a source file
    does&lt;BR/&gt;2. trying to change field names as part of the
    merge&lt;BR/&gt;&lt;BR/&gt;I think it's clear to everyone that
    merging is a killer issue for a distributed bug tracker, and so
    it's very important that you make merging of fields as trivial
    as possible.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/1342130227258194021/comments/default/984965013832685007' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/1342130227258194021/comments/default/984965013832685007' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/06/distributed-bug-tracking-again.html?showComment=1182922980000#c984965013832685007'
    title='' />
    <author>
      <name>alexbl</name>
      <uri>
      http://www.blogger.com/profile/07910313501358762052</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/06/distributed-bug-tracking-again.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-1342130227258194021'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/1342130227258194021'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1990720615' />
    <gd:extendedProperty name='blogger.displayTime'
    value='June 26, 2007 10:43 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-8222067562149614149</id>
    <published>2007-06-26T23:00:00.000-07:00</published>
    <updated>2007-06-26T23:00:34.657-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>If the issue file format is parsable (and it
    shoul...</title>
    <content type='html'>If the issue file format is parsable (and
    it should be) then it shouldn't matter if the tags are in the
    same file or separate files. I would imagine that the
    additional conceptual and real clutter isn't worth the apperant
    ease in any case.&lt;BR/&gt;&lt;BR/&gt;&lt;BR/&gt;As for
    history, if the issue repo is part of a source repository all
    of the additional branches provide for even more clutter.
    History isn't something you are going to be doing on a regular
    basis so the cost shouldn't really be an
    issue.&lt;BR/&gt;&lt;BR/&gt;As for merging, I think you are
    right.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/1342130227258194021/comments/default/8222067562149614149' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/1342130227258194021/comments/default/8222067562149614149' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/06/distributed-bug-tracking-again.html?showComment=1182924000000#c8222067562149614149'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='32' height='24'
      src='http://www.metadrift.net/eric.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/06/distributed-bug-tracking-again.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-1342130227258194021'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/1342130227258194021'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='June 26, 2007 11:00 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-1156752297661463962</id>
    <published>2007-06-26T23:05:00.000-07:00</published>
    <updated>2007-06-26T23:05:34.386-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>If the tags are in the same file, merging is
    made ...</title>
    <content type='html'>If the tags are in the same file, merging
    is made a _lot_ more difficult. What happens when you reorder
    the fields? Or what happens when two people submit follow ups
    with field that have similar but not identical field names and
    the same value (could cause the merge algorithm to mistake them
    for the same field.) There is just too much possible contention
    in a single file format. Whether it's parseable or not doesn't
    matter that much in merging unless you have a specialize
    merging algorithm that merges the parsed data rather then the
    textual data.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/1342130227258194021/comments/default/1156752297661463962' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/1342130227258194021/comments/default/1156752297661463962' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/06/distributed-bug-tracking-again.html?showComment=1182924300000#c1156752297661463962'
    title='' />
    <author>
      <name>alexbl</name>
      <uri>
      http://www.blogger.com/profile/07910313501358762052</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/06/distributed-bug-tracking-again.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-1342130227258194021'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/1342130227258194021'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1990720615' />
    <gd:extendedProperty name='blogger.displayTime'
    value='June 26, 2007 11:05 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-773411314210109899</id>
    <published>2007-06-27T00:21:00.000-07:00</published>
    <updated>2007-06-27T00:21:02.992-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>I haven't thought about this a lot but
    perhaps Ope...</title>
    <content type='html'>I haven't thought about this a lot but
    perhaps OpenID and/or Yadis could be used for identification
    and service discovery ?</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/1342130227258194021/comments/default/773411314210109899' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/1342130227258194021/comments/default/773411314210109899' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/06/distributed-bug-tracking-again.html?showComment=1182928860000#c773411314210109899'
    title='' />
    <author>
      <name>etnt</name>
      <uri>
      http://www.blogger.com/profile/14926365218231243609</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/06/distributed-bug-tracking-again.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-1342130227258194021'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/1342130227258194021'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1996490231' />
    <gd:extendedProperty name='blogger.displayTime'
    value='June 27, 2007 12:21 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-1078969424838446795</id>
    <published>2007-06-27T11:22:00.000-07:00</published>
    <updated>2007-06-27T11:22:20.827-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>I assume you are using some tool to edit and
    manag...</title>
    <content type='html'>I assume you are using some tool to edit
    and manage issues. With that in mind you should be able to
    enforce any field order you need and provide migration paths if
    you change the field layout. The same is true of follow ups.
    Providing an editing tool and a very well defined issue layout
    is important for this reason. &lt;BR/&gt;&lt;BR/&gt;Parseable
    does matter because you can provide custom merging algorithms
    (if required). However, if you take the tool approach i have
    been advocating it shouldn't be an issue in any case.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/1342130227258194021/comments/default/1078969424838446795' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/1342130227258194021/comments/default/1078969424838446795' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/06/distributed-bug-tracking-again.html?showComment=1182968520000#c1078969424838446795'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='32' height='24'
      src='http://www.metadrift.net/eric.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/06/distributed-bug-tracking-again.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-1342130227258194021'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/1342130227258194021'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='June 27, 2007 11:22 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-8607335668150526647</id>
    <published>2007-06-27T11:25:00.000-07:00</published>
    <updated>2007-06-27T11:25:10.358-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>@etnt&lt;br&gt;&lt;br&gt;
    Authentication/authorization isn't a...</title>
    <content type='html'>@etnt&lt;BR/&gt;&lt;BR/&gt;
    Authentication/authorization isn't as big a deal is distributed
    version control systems. Well thats not quite true. It is but
    its handled differently. Each user controls his own repository.
    If you pull from or allow a user to push to you repository you
    are trusting that that user is who you think he is. So
    basically the repo owner handles authorization and
    authentication for his own repository.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/1342130227258194021/comments/default/8607335668150526647' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/1342130227258194021/comments/default/8607335668150526647' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/06/distributed-bug-tracking-again.html?showComment=1182968700000#c8607335668150526647'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='32' height='24'
      src='http://www.metadrift.net/eric.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/06/distributed-bug-tracking-again.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-1342130227258194021'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/1342130227258194021'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='June 27, 2007 11:25 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-841976816532604214</id>
    <published>2007-06-27T11:35:00.000-07:00</published>
    <updated>2007-06-27T11:35:48.882-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>I think there is an advantage of being able
    to han...</title>
    <content type='html'>I think there is an advantage of being
    able to hand-edit the bug reports. It lets you take a more
    unix-approach to working with bugs for situations like: `hmm..
    I need to take ownership of every bug that is in the category
    fish_food... oh grep, sed, hoorah!'' An approach which is a bit
    harder if you have specialized editing tools. Notebly gnats
    uses an approach similar to what you're suggesting, (single
    file per problem report, with some front ends for editing, and
    querying,) and ends up having some contention problems in a
    non-distributed setup, so I'd be concerned that it would be
    completely unmanageable in a distributed
    configuration.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/1342130227258194021/comments/default/841976816532604214' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/1342130227258194021/comments/default/841976816532604214' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/06/distributed-bug-tracking-again.html?showComment=1182969300000#c841976816532604214'
    title='' />
    <author>
      <name>alexbl</name>
      <uri>
      http://www.blogger.com/profile/07910313501358762052</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/06/distributed-bug-tracking-again.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-1342130227258194021'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/1342130227258194021'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1990720615' />
    <gd:extendedProperty name='blogger.displayTime'
    value='June 27, 2007 11:35 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-1611893844070386945</id>
    <published>2007-06-27T11:41:00.000-07:00</published>
    <updated>2007-06-27T11:41:19.873-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Ok, so you have convinced me of the
    field=file, di...</title>
    <content type='html'>Ok, so you have convinced me of the
    field=file, dir=issue approach. I still don't like it but it
    seems that the positives outweigh the negatives at this point.
    It still doesn't remove the need for support tools, but it does
    allow you to more easily get under the covers when you need
    to.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/1342130227258194021/comments/default/1611893844070386945' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/1342130227258194021/comments/default/1611893844070386945' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/06/distributed-bug-tracking-again.html?showComment=1182969660000#c1611893844070386945'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='32' height='24'
      src='http://www.metadrift.net/eric.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/06/distributed-bug-tracking-again.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-1342130227258194021'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/1342130227258194021'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='June 27, 2007 11:41 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-7444919372883161827</id>
    <published>2007-06-27T11:55:00.000-07:00</published>
    <updated>2007-06-27T11:55:14.435-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>----&lt;br&gt;User Y sees a bug in the
    system and enters...</title>
    <content type='html'>----&lt;BR/&gt;User Y sees a bug in the
    system and enters Issue X to describe it and User Z sees the
    exact same bug at a similar time and enters Issue W to describe
    it. Because User X and Z both have canonical versions of the
    issue repository and they have yet to sync their repositories
    there is no way for either user to detect that a issue has
    already been created for that bug. So when they replicate
    suddenly there are multiple issues in both
    repositories.&lt;BR/&gt;---&lt;BR/&gt;&lt;BR/&gt;I think,
    finding a problem and writing some text is not opening a bug.
    It is merely a intention to open a bug.&lt;BR/&gt;&lt;BR/&gt;~
    Kars.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/1342130227258194021/comments/default/7444919372883161827' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/1342130227258194021/comments/default/7444919372883161827' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/06/distributed-bug-tracking-again.html?showComment=1182970500000#c7444919372883161827'
    title='' />
    <author>
      <name>kars</name>
      <uri>
      http://www.blogger.com/profile/15981910675628939589</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/06/distributed-bug-tracking-again.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-1342130227258194021'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/1342130227258194021'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-324472527' />
    <gd:extendedProperty name='blogger.displayTime'
    value='June 27, 2007 11:55 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-5750273532896380469</id>
    <published>2007-06-27T12:01:00.000-07:00</published>
    <updated>2007-06-27T12:01:46.333-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Well and that's the thing. You can have an
    editor ...</title>
    <content type='html'>Well and that's the thing. You can have an
    editor that creates a custom composed template of the current
    bug data which you can edit and save and then the bug tool can
    convert it into an updated entry on the bug. That's the
    approach I've taken for creating and editing bugs
    actually.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/1342130227258194021/comments/default/5750273532896380469' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/1342130227258194021/comments/default/5750273532896380469' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/06/distributed-bug-tracking-again.html?showComment=1182970860000#c5750273532896380469'
    title='' />
    <author>
      <name>alexbl</name>
      <uri>
      http://www.blogger.com/profile/07910313501358762052</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/06/distributed-bug-tracking-again.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-1342130227258194021'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/1342130227258194021'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1990720615' />
    <gd:extendedProperty name='blogger.displayTime'
    value='June 27, 2007 12:01 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-8779475549579748036</id>
    <published>2007-10-06T17:58:00.000-07:00</published>
    <updated>2007-10-06T17:58:33.905-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>I am very late to this discussion, but it is
    near ...</title>
    <content type='html'>I am very late to this discussion, but it
    is near and dear to my heart so hear me
    out.&lt;BR/&gt;&lt;BR/&gt;@eric&lt;BR/&gt;I really like this
    architecture. I proposed a &lt;A
    HREF="http://concise-software.blogspot.com/2007/04/ui-event-handlers-and-template.html"
    REL="nofollow"&gt;similar, more abstract idea on my blog: In
    Search of Concise Software&lt;/A&gt;. I would use tercio on the
    server and &lt;A HREF="http://dojotoolkit.org/"
    REL="nofollow"&gt;The Dojo Toolkit&lt;/A&gt; on the
    client.&lt;BR/&gt;&lt;BR/&gt;@robertc&lt;BR/&gt;Accessibility
    is a client-side issue, not a server-side issue. The server
    *can* generate accessible content, but so can a human writing
    HTML. The Dojo Toolkit is a JavaScript library which accessible
    themable rich widgets. (see &lt;A
    HREF="http://www.dojotoolkit.org/node/118"
    REL="nofollow"&gt;Accessibility | The Dojo
    Toolkit&lt;/A&gt;)&lt;BR/&gt;&lt;BR/&gt;@juhani&lt;BR/&gt;Browser
    compatibility is fairly good in Dojo. It officially supports on
    Firefox, Internet Explorer, and WebKit-based browsers (OmniWeb,
    Safari, Shiira). Dojo actually has browser-specific
    optimizations that are automatically employed to improve
    performance. Back button support is built-in using in-page
    anchors. Sessions are much easier to deal with if you drop them
    completely and use HTTP Authentication (which the browser
    caches) with context-free REST services. A properly designed
    REST API can be trivially distributed making it very easy to
    scale up to any load. The reduction in superfluous rendering
    load on the server and leveraging of public infrastructure
    caching of static layout (HTML+CSS) and client-side logic
    (JavaScript) makes such an architecture consume much less per
    user. Dojo's leveraging of AOL's Content Distribution Network
    is a key example of
    this.&lt;BR/&gt;&lt;BR/&gt;@wynand&lt;BR/&gt;OpenLaszlo is very
    impressive, but I find the widgets slow to respond on my Mac
    mini 1.42GHz compared to the same widgets in &lt;A
    HREF="http://archive.dojotoolkit.org/nightly/dojotoolkit/dijit/demos/mail.html"
    REL="nofollow"&gt;Dojo 0.9 Demos&lt;/A&gt;. I like that it
    encourages placing all user interaction logic on the client. I
    like to limit the server's dynamic workload to providing CRUD
    operations on stored data.&lt;BR/&gt;&lt;BR/&gt;@mike
    mcnally&lt;BR/&gt;Dojo provides a templating system with i18n
    and a11y and encourages binding widgets to JSON data stores
    (see &lt;A
    HREF="http://dojotoolkit.org/book/dojo-book-0-9/part-1-life-dojo/example-2-postman-always-clicks-twice/address-book"
    REL="nofollow"&gt;Dojo Tutorial - Mail App - Address
    Book&lt;/A&gt;. It also provides an excellent set of &lt;A
    HREF="http://dojotoolkit.org/book/dojo-book-0-9/part-3-programmatic-dijit-and-dojo/ajax-transports/hello-ajax-world"
    REL="nofollow"&gt;toolkit functions for
    XmlHttpRequests&lt;/A&gt;.&lt;BR/&gt;&lt;BR/&gt;@matt
    wilson&lt;BR/&gt;XML and XSLT sound great on paper. We use them
    extensively at work and they have turned out to be a giant
    drain on productivity. Certain languages and technologies are
    suited to certain circumstances. XML is good for representing
    documents, not so good at representing configuration, and
    abysmally bad at representing logic. HTML+CSS and JavaScript is
    a good combination. JavaScript provides an imperative syntax
    that works well for handling user-interaction. HTML provides a
    declarative syntax that works well for building semantic
    documents and CSS allows you to compose page layouts from the
    semantic document. The Dojo Toolkit allows you to enhance basic
    HTML by adding a few custom attributes to the tags which
    browsers ignore but which Dojo understands and processes. Dojo
    also allows you to &lt;A
    HREF="http://dojotoolkit.org/book/dojo-book-0-9/part-1-life-dojo/example-2-postman-always-clicks-twice/user-interaction"
    REL="nofollow"&gt;drop event handlers directly into the
    HTML&lt;/A&gt; as dojo/method script
    blocks.&lt;BR/&gt;&lt;BR/&gt;@dkubb&lt;BR/&gt;Content
    Negotiation is an excellent option for handling the Googlebot
    and a framework like this could potentially provide far more
    directly useful information to the Googlebot than a generic
    soup of HTML.&lt;BR/&gt;&lt;BR/&gt;@casey&lt;BR/&gt;Definitely.
    An architecture like this with a well-defined REST API is
    essentially a spec for a server that can be implemented in
    whatever language is best at the current time. This is
    particularly useful if the language originally chosen
    languishes for whatever reason.&lt;BR/&gt;&lt;BR/&gt;@bob
    ippolito&lt;BR/&gt;I agree. Full correct support of HTTP is
    essential. Without it a REST API would likely wind up being
    crippled by being unable to put information where it belongs:
    be it in the headers, the URL, the query, or the body of the
    request.&lt;BR/&gt;&lt;BR/&gt;@johnorford&lt;BR/&gt;Putting it
    all on the server-side makes the server do superfluous work to
    re-render unchanged pages and makes it difficult to cache
    (unless you have complex caching strategies). BTW user
    interaction is business logic so the business logic will be on
    the client as well (see &lt;A
    HREF="http://worsethanfailure.com/Articles/The-Mythical-Business-Layer.aspx"
    REL="nofollow"&gt;The Mythical Business Layer - Worse Than
    Failure&lt;/A&gt;). I do not believe that business/presentation
    is a sensible division so I disagree with that part of Eric's
    proposal.&lt;BR/&gt;&lt;BR/&gt;@pierre&lt;BR/&gt;A user
    interaction model with that much dynamism probably warrants the
    review of a User Experience Analyst. In general I would find
    such a UI very confusing. Most of the time the kinds of things
    that would be dynamic would be list items in trees, menus, or
    combo-boxes. All of which are concisely handled by The Dojo
    Toolkit.&lt;BR/&gt;&lt;BR/&gt;&lt;STRONG&gt;Conclusion:&lt;/STRONG&gt;&lt;BR/&gt;&lt;EM&gt;tercio&lt;/EM&gt;
    is an excellent idea and would be happily married to The Dojo
    Toolkit to provide a comprehensive, scalable, accessible and
    snappy web framework.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/8779475549579748036' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/8779475549579748036' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html?showComment=1191718680000#c8779475549579748036'
    title='' />
    <author>
      <name>Alain O'Dea</name>
      <uri>
      http://www.blogger.com/profile/11428587119175716155</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-970665623589855073'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/970665623589855073'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1307134280' />
    <gd:extendedProperty name='blogger.displayTime'
    value='October 6, 2007 5:58 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-8481628687872673727</id>
    <published>2007-10-06T18:37:00.000-07:00</published>
    <updated>2007-10-06T18:37:22.502-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>@alain&lt;br&gt;&lt;br&gt;Do you have some
    ideas about communi...</title>
    <content type='html'>@alain&lt;BR/&gt;&lt;BR/&gt;Do you have
    some ideas about communication between dojo&lt;-&gt;erlang via
    tercio. I haven't had much time to work on tercio of late but I
    am very, very open to whatever ideas you have. Especially if it
    saves me time. ;)&lt;BR/&gt;&lt;BR/&gt;Don't worry about being
    late to the conversation its all good.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/8481628687872673727' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/8481628687872673727' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html?showComment=1191721020000#c8481628687872673727'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='32' height='24'
      src='http://www.metadrift.net/eric.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-970665623589855073'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/970665623589855073'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='October 6, 2007 6:37 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-8063548576244771443</id>
    <published>2007-10-09T12:07:00.000-07:00</published>
    <updated>2007-10-09T12:07:55.806-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>@eric&lt;br&gt;&lt;a
    href="http://dojotoolkit.org/book/dojo...</title>
    <content type='html'>@eric&lt;BR/&gt;&lt;A
    HREF="http://dojotoolkit.org/book/dojo-book-0-9/part-3-programmatic-dijit-and-dojo/using-dojo-data/available-stores/dojo-data-i-0#comment-7029"
    REL="nofollow"&gt;My comment on the
    dojo.data.ItemFileWriteStore&lt;/A&gt; describes how I would
    get started in hooking up Dojo and Tercio. If you made a Tercio
    reference implementation of such a custom save handler for the
    ItemFileWriteStore it would be very useful to
    me.&lt;BR/&gt;&lt;BR/&gt;The &lt;A
    HREF="http://dojotoolkit.org/book/dojo-book-0-9/part-3-programmatic-dijit-and-dojo/what-dojo-data/dojo-data-design-and-apis/write"
    REL="nofollow"&gt;dojo.data.Write API documentation&lt;/A&gt;
    describes all the methods in the API. The most interesting of
    these is the save method. ItemFileWriteStore has a stub
    implementation of save that looks for a _saveCustom or
    _saveEverything method to do the actual write back to the
    server. &lt;BR/&gt;&lt;BR/&gt;If _saveEverything is present it
    is provided with a successCallback, a failureCallback, and a
    fileContent string. It is expected to send this entire document
    to the server as is.&lt;BR/&gt;&lt;BR/&gt;The _saveCustom is
    expected to write back the dirty items to the
    server.&lt;BR/&gt;&lt;BR/&gt;Neither are required to do this in
    a single request, but must do all of these requests
    successfully before calling the successCallback.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/8063548576244771443' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/8063548576244771443' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html?showComment=1191956820000#c8063548576244771443'
    title='' />
    <author>
      <name>Alain O'Dea</name>
      <uri>
      http://www.blogger.com/profile/11428587119175716155</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-970665623589855073'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/970665623589855073'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1307134280' />
    <gd:extendedProperty name='blogger.displayTime'
    value='October 9, 2007 12:07 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-5593037663833970396</id>
    <published>2007-10-09T13:55:00.000-07:00</published>
    <updated>2007-10-09T13:55:17.522-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>@alain&lt;br&gt;&lt;br&gt;Tell me if I am
    wrong, but it looks ...</title>
    <content type='html'>@alain&lt;BR/&gt;&lt;BR/&gt;Tell me if I
    am wrong, but it looks like you are looking for a simple way to
    save stuff on the server side. Thats actually pretty easy to
    do. &lt;BR/&gt;&lt;BR/&gt;What I want to do with tercio is
    extend Erlangs message passing paradigm out to the client.
    Basically, so that the client can easily send and receive
    messages to/from protected erlang processes. I am not sure how
    the two ideas relate directly.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/5593037663833970396' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/5593037663833970396' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html?showComment=1191963300000#c5593037663833970396'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='32' height='24'
      src='http://www.metadrift.net/eric.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-970665623589855073'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/970665623589855073'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='October 9, 2007 1:55 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-3958863830131814292</id>
    <published>2007-10-21T08:38:00.000-07:00</published>
    <updated>2007-10-21T08:38:35.637-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>does this run on ...tried on mac g4
    bootstrap fail...</title>
    <content type='html'>does this run on ...tried on mac g4
    bootstrap failed</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/8753068185453494098/comments/default/3958863830131814292' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/8753068185453494098/comments/default/3958863830131814292' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/10/new-faxien.html?showComment=1192981080000#c3958863830131814292'
    title='' />
    <author>
      <name>k</name>
      <uri>
      http://www.blogger.com/profile/01226220917065790924</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/10/new-faxien.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-8753068185453494098'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/8753068185453494098'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1100579281' />
    <gd:extendedProperty name='blogger.displayTime'
    value='October 21, 2007 8:38 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-6408368073162429125</id>
    <published>2007-10-21T11:21:00.000-07:00</published>
    <updated>2007-10-21T11:21:19.386-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>@k&lt;br&gt;&lt;br&gt;There are a few
    platform specific librar...</title>
    <content type='html'>@k&lt;BR/&gt;&lt;BR/&gt;There are a few
    platform specific libraries you need. Right now we don't have
    much access to mac boxes. You could actually help us there if
    you want to spend a bit of time.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/8753068185453494098/comments/default/6408368073162429125' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/8753068185453494098/comments/default/6408368073162429125' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/10/new-faxien.html?showComment=1192990860000#c6408368073162429125'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='32' height='24'
      src='http://www.metadrift.net/eric.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/10/new-faxien.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-8753068185453494098'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/8753068185453494098'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='October 21, 2007 11:21 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-9034186139888453845</id>
    <published>2007-10-26T19:13:00.000-07:00</published>
    <updated>2007-10-26T19:13:08.115-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Hi - it's cool to see you guys switching to
    git. I...</title>
    <content type='html'>Hi - it's cool to see you guys switching
    to git. I find it really useful for erlang
    projects.&lt;BR/&gt;&lt;BR/&gt;Have you considered using gitweb
    as your http frontend? (e.g. &lt;A
    HREF="http://git.erlang.geek.nz"
    REL="nofollow"&gt;git.erlang.geek.nz&lt;/A&gt;) It provides a
    more friendly interface to browsing git repositories, tarball
    downloads and lots more
    besides.&lt;BR/&gt;&lt;BR/&gt;Cheers,&lt;BR/&gt;--Geoff</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/311098628575913304/comments/default/9034186139888453845' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/311098628575913304/comments/default/9034186139888453845' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/10/erlware-and-git-development-model.html?showComment=1193451180000#c9034186139888453845'
    title='' />
    <author>
      <name>nem</name>
      <uri>
      http://www.blogger.com/profile/07852722667726529612</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/10/erlware-and-git-development-model.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-311098628575913304'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/311098628575913304'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-90431490' />
    <gd:extendedProperty name='blogger.displayTime'
    value='October 26, 2007 7:13 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-5517176853525755927</id>
    <published>2007-10-26T19:22:00.000-07:00</published>
    <updated>2007-10-26T19:22:51.119-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>@nem We use cgit actually. Its a bit more
    lite wei...</title>
    <content type='html'>@nem We use cgit actually. Its a bit more
    lite weight then gitweb. I suspect its a matter of six of one
    half dozen of the other. In any case you can check it out at
    http://git.erlware.org/git</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/311098628575913304/comments/default/5517176853525755927' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/311098628575913304/comments/default/5517176853525755927' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/10/erlware-and-git-development-model.html?showComment=1193451720000#c5517176853525755927'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='32' height='24'
      src='http://www.metadrift.net/eric.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/10/erlware-and-git-development-model.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-311098628575913304'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/311098628575913304'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='October 26, 2007 7:22 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-6364967054049865109</id>
    <published>2007-11-07T00:53:00.000-08:00</published>
    <updated>2007-11-07T04:57:11.238-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'></title>
    <content type='html'>This comment has been removed by a blog
    administrator.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5049029583926631782/comments/default/6364967054049865109' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5049029583926631782/comments/default/6364967054049865109' />
    <author>
      <name>Anonymous</name>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img1.blogblog.com/img/blank.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/05/distributed-bug-tracking.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5049029583926631782'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5049029583926631782'
    type='text/html' />
    <gd:extendedProperty name='blogger.contentRemoved'
    value='true' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1487684947' />
    <gd:extendedProperty name='blogger.displayTime'
    value='November 7, 2007 12:53 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-7703234208436364518</id>
    <published>2007-11-14T23:23:00.000-08:00</published>
    <updated>2007-11-14T23:23:52.554-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Distributed version control doesn't mean
    forking a...</title>
    <content type='html'>Distributed version control doesn't mean
    forking a project publicly is always a good idea. Similarly,
    distributed bug tracking doesn't mean having multiple public
    locations where people file bugs is a good idea. The most
    common use case is probably the ability to continue committing
    *and* closing/resolving bugs without access to the main repo
    server, so that one can merge them back in
    later.&lt;BR/&gt;&lt;BR/&gt;It may make it easier to shoot
    oneself in the foot like you say, but the benefits are
    undeniable.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5049029583926631782/comments/default/7703234208436364518' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5049029583926631782/comments/default/7703234208436364518' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/05/distributed-bug-tracking.html?showComment=1195111380000#c7703234208436364518'
    title='' />
    <author>
      <name>Kartik</name>
      <uri>
      http://www.blogger.com/profile/06281692669037537503</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/05/distributed-bug-tracking.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5049029583926631782'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5049029583926631782'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-2021865174' />
    <gd:extendedProperty name='blogger.displayTime'
    value='November 14, 2007 11:23 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-1325560173849391570</id>
    <published>2007-12-06T06:09:00.000-08:00</published>
    <updated>2007-12-06T06:09:02.086-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Hi Eric, what is the status of the Tercio
    project?...</title>
    <content type='html'>Hi Eric, what is the status of the Tercio
    project? I have a need for a javascript-erlang bridge: need to
    be able to send messages from javascript to Erlang processes
    and from Erlang processes to javascript...
    &lt;BR/&gt;&lt;BR/&gt;Thank you very much.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/3596433910643097039/comments/default/1325560173849391570' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/3596433910643097039/comments/default/1325560173849391570' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2006/12/tercio.html?showComment=1196950140000#c1325560173849391570'
    title='' />
    <author>
      <name>PatternStorm</name>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img1.blogblog.com/img/blank.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2006/12/tercio.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-3596433910643097039'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/3596433910643097039'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1342631082' />
    <gd:extendedProperty name='blogger.displayTime'
    value='December 6, 2007 6:09 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-1017325020437865964</id>
    <published>2007-12-06T06:11:00.000-08:00</published>
    <updated>2007-12-06T06:11:58.197-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Hi Eric, an edit to my previous
    comment:&lt;br&gt;&lt;br&gt;.....</title>
    <content type='html'>Hi Eric, an edit to my previous
    comment:&lt;BR/&gt;&lt;BR/&gt;...need to be able to
    &lt;B&gt;asynchronously&lt;/B&gt; send messages messages from
    javascript to Erlang processes and from Erlang processes to
    javascript...</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/3596433910643097039/comments/default/1017325020437865964' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/3596433910643097039/comments/default/1017325020437865964' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2006/12/tercio.html?showComment=1196950260000#c1017325020437865964'
    title='' />
    <author>
      <name>PatternStorm</name>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img1.blogblog.com/img/blank.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2006/12/tercio.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-3596433910643097039'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/3596433910643097039'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1124108532' />
    <gd:extendedProperty name='blogger.displayTime'
    value='December 6, 2007 6:11 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-555084508897322025</id>
    <published>2008-02-13T08:44:00.000-08:00</published>
    <updated>2008-02-13T08:44:34.354-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>I take your point about not wanting forking
    code j...</title>
    <content type='html'>I take your point about not wanting
    forking code just to deal with os specific issues, but some of
    us are absolutely &lt;B&gt;dying&lt;/B&gt; for windows support,
    being constrained to windows by our working
    environments.&lt;BR/&gt;&lt;BR/&gt;ps: anything I can do to
    help?</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/4365252994535574806/comments/default/555084508897322025' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/4365252994535574806/comments/default/555084508897322025' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/02/windows-support.html?showComment=1202921040000#c555084508897322025'
    title='' />
    <author>
      <name>Tim Watson</name>
      <uri>
      http://www.blogger.com/profile/16721228546494454349</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/02/windows-support.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-4365252994535574806'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/4365252994535574806'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1414055612' />
    <gd:extendedProperty name='blogger.displayTime'
    value='February 13, 2008 8:44 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-6180143674827587421</id>
    <published>2008-02-13T11:13:00.000-08:00</published>
    <updated>2008-02-13T11:13:19.085-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>@tim&lt;br&gt;&lt;br&gt;Its not that we
    don't want windows sup...</title>
    <content type='html'>@tim&lt;BR/&gt;&lt;BR/&gt;Its not that we
    don't want windows support. We just don't have the bandwidth
    for it right now. This is proven somewhat by our attempt to
    keep things platform neutral. Our hope is that some windows
    enthusiast will step up to handle the windows testing and
    support. If you want to help subscribe to the erlware-dev list
    at google groups and introduce yourself. We will be glad to get
    your help.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/4365252994535574806/comments/default/6180143674827587421' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/4365252994535574806/comments/default/6180143674827587421' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/02/windows-support.html?showComment=1202929980000#c6180143674827587421'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='32' height='24'
      src='http://www.metadrift.net/eric.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/02/windows-support.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-4365252994535574806'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/4365252994535574806'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='February 13, 2008 11:13 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-3725702189146948462</id>
    <published>2008-03-22T12:28:00.000-07:00</published>
    <updated>2008-03-22T12:28:46.628-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Eric, are you going to implement strings as
    binari...</title>
    <content type='html'>Eric, are you going to implement strings
    as binaries or lists or both ?</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/2696282067342390117/comments/default/3725702189146948462' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/2696282067342390117/comments/default/3725702189146948462' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2008/03/event-based-stream-parsing-for.html?showComment=1206214080000#c3725702189146948462'
    title='' />
    <author>
      <name>Roberto Saccon</name>
      <uri>
      http://www.blogger.com/profile/17372747301844271000</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='24' height='32'
      src='http://s3.amazonaws.com/skast/images/rsaccon-240x320.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2008/03/event-based-stream-parsing-for.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-2696282067342390117'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/2696282067342390117'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1055645147' />
    <gd:extendedProperty name='blogger.displayTime'
    value='March 22, 2008 12:28 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-1933716973400389073</id>
    <published>2008-03-23T15:26:00.000-07:00</published>
    <updated>2008-03-23T15:26:04.134-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>I will probably implement them as binaries.
    That w...</title>
    <content type='html'>I will probably implement them as
    binaries. That way if someone wants lists they can just convert
    them. If I keep them as binaries all the way from the read in
    to the consumer it should make things a bit more
    efficient.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/2696282067342390117/comments/default/1933716973400389073' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/2696282067342390117/comments/default/1933716973400389073' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2008/03/event-based-stream-parsing-for.html?showComment=1206311160000#c1933716973400389073'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='24' height='32'
      src='http://www.ericmerritt.net/eric.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2008/03/event-based-stream-parsing-for.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-2696282067342390117'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/2696282067342390117'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='March 23, 2008 3:26 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-1719025972568500982</id>
    <published>2008-06-12T17:18:00.000-07:00</published>
    <updated>2008-06-12T17:18:49.493-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>That's a good dime summary. I've been using
    Erlang...</title>
    <content type='html'>That's a good dime summary. I've been
    using Erlang for a while now and I don't know why it's
    considered a general-purpose language :P</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/2937248757794621509/comments/default/1719025972568500982' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/2937248757794621509/comments/default/1719025972568500982' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2008/05/introduction-to-erlang.html?showComment=1213316280000#c1719025972568500982'
    title='' />
    <author>
      <name>Matt</name>
      <uri>
      http://www.blogger.com/profile/17935063827932240235</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2008/05/introduction-to-erlang.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-2937248757794621509'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/2937248757794621509'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1566271341' />
    <gd:extendedProperty name='blogger.displayTime'
    value='June 12, 2008 5:18 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-1206198718735834038</id>
    <published>2008-06-19T03:38:00.000-07:00</published>
    <updated>2008-06-19T03:38:49.718-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Hi Eric,&lt;br&gt;I am looking to solve the
    same problem...</title>
    <content type='html'>Hi Eric,&lt;BR/&gt;I am looking to solve
    the same problem (in java). I'd be interested to hear where you
    ended up or if you found anything suitable out there.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/2696282067342390117/comments/default/1206198718735834038' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/2696282067342390117/comments/default/1206198718735834038' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2008/03/event-based-stream-parsing-for.html?showComment=1213871880000#c1206198718735834038'
    title='' />
    <author>
      <name>Kevin Peel</name>
      <uri>
      http://www.blogger.com/profile/13278468358239904458</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2008/03/event-based-stream-parsing-for.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-2696282067342390117'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/2696282067342390117'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1790034800' />
    <gd:extendedProperty name='blogger.displayTime'
    value='June 19, 2008 3:38 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-311169307771479492</id>
    <published>2008-06-19T09:19:00.000-07:00</published>
    <updated>2008-06-19T09:19:10.405-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>There isn't anything out here right now.
    However, ...</title>
    <content type='html'>There isn't anything out here right now.
    However, Its not that hard to implement. I implemented it in
    python in a couple of hours. I suspect that you can do the same
    in java.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/2696282067342390117/comments/default/311169307771479492' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/2696282067342390117/comments/default/311169307771479492' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2008/03/event-based-stream-parsing-for.html?showComment=1213892340000#c311169307771479492'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='24' height='32'
      src='http://www.ericmerritt.net/eric.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2008/03/event-based-stream-parsing-for.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-2696282067342390117'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/2696282067342390117'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='June 19, 2008 9:19 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-5211430263041383362</id>
    <published>2008-06-24T18:57:00.000-07:00</published>
    <updated>2008-06-24T18:57:41.986-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>I've been looking, boy, have I been looking,
    and t...</title>
    <content type='html'>I've been looking, boy, have I been
    looking, and too busy/lazy to write one myself. This one is
    pretty good though:
    http://www.cowtowncoder.com/hatchery/jackson/&lt;BR/&gt;&lt;BR/&gt;There
    is also something in the incubator at apache. Streaming API for
    JSON in java at least is long overdue.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/2696282067342390117/comments/default/5211430263041383362' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/2696282067342390117/comments/default/5211430263041383362' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2008/03/event-based-stream-parsing-for.html?showComment=1214359020000#c5211430263041383362'
    title='' />
    <author>
      <name>Jin Chun</name>
      <uri>
      http://www.blogger.com/profile/01835922856183133303</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='31' height='21'
      src='http://photos1.blogger.com/blogger/5453/1141/320/me.0.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2008/03/event-based-stream-parsing-for.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-2696282067342390117'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/2696282067342390117'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-92918228' />
    <gd:extendedProperty name='blogger.displayTime'
    value='June 24, 2008 6:57 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-6657199194558525262</id>
    <published>2008-07-24T00:01:00.000-07:00</published>
    <updated>2008-07-24T00:01:54.193-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Forth + Lisp + some Erlang premises
    &lt;br&gt;you should...</title>
    <content type='html'>Forth + Lisp + some Erlang premises
    &lt;BR/&gt;you should have a look at &lt;A&gt;
    href=&amp;quot;http://planet.factorcode.org/&amp;quot;&amp;gt;&lt;B&gt;Factor&lt;/B&gt;&lt;/A&gt;</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5894913897205529613/comments/default/6657199194558525262' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5894913897205529613/comments/default/6657199194558525262' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2008/07/forth-other-white-meat.html?showComment=1216882860000#c6657199194558525262'
    title='' />
    <author>
      <name>Anonymous</name>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img1.blogblog.com/img/blank.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2008/07/forth-other-white-meat.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5894913897205529613'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5894913897205529613'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-471444898' />
    <gd:extendedProperty name='blogger.displayTime'
    value='July 24, 2008 12:01 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-8698007255242253269</id>
    <published>2008-07-24T02:47:00.000-07:00</published>
    <updated>2008-07-24T02:47:43.973-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Good article.&lt;br&gt;&lt;br&gt;A few
    corrections: the colon ...</title>
    <content type='html'>Good article.&lt;BR/&gt;&lt;BR/&gt;A few
    corrections: the colon is not an immediate word (or macro).
    Technicaly, a macro is word that is executed at compile-time;
    the colon word doesn't need to be macro. However, it is indeed
    a bit special in that sense that it consumes the input string
    (the name of the word to be defined, that follows it). It then
    switches Forth to compile-mode, where every word is compiled,
    except the macros that are executed as I said. The semi-colon
    is one of them. It compiles a return instruction and switches
    back Forth to interpret mode.&lt;BR/&gt;&lt;BR/&gt;I think the
    most difficult aspect of Forth with regard to the modern trend
    is the lack of garbage collection. Some "modern" variations on
    Forth like Factor or Cat feature it. However, in my opinion
    this is wrong: one gets a language that most people don't like
    anyway because of the RPN, and because of the vital need for
    good factoring (otherwise you get write-only code). And a
    typical Forth programmer doesn't like the idea of having a
    big-complex-resource wasting GC because many Forth programmers
    are working in the embedded computers field, a place where you
    often cannot afford a GC. However, as Samuel Falvo says, Forth
    is an hyperstatic environment and does provide some features in
    order to manage memory (the words FORGET or MARKER), and one
    has to learn to take advantage of them. See the video
    http://www.falvotech.com/blog/index.php?/archives/372-Over-the-Shoulder-1-Text-Preprocessing-in-Forth.html</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5894913897205529613/comments/default/8698007255242253269' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5894913897205529613/comments/default/8698007255242253269' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2008/07/forth-other-white-meat.html?showComment=1216892820000#c8698007255242253269'
    title='' />
    <author>
      <name>astrobe</name>
      <uri>
      http://www.blogger.com/profile/15960746039722376758</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2008/07/forth-other-white-meat.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5894913897205529613'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5894913897205529613'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1999616434' />
    <gd:extendedProperty name='blogger.displayTime'
    value='July 24, 2008 2:47 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-3558659376165108471</id>
    <published>2008-07-24T03:24:00.000-07:00</published>
    <updated>2008-07-24T03:24:28.486-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Liked the article. A quick correction,
    though. I...</title>
    <content type='html'>Liked the article. A quick correction,
    though. I wrote the FICL 4 upgrade. FICL 4 is "switch threaded"
    to use Anton Ertl's terminology. I did some microbenchmarking
    before I wrote FICL 4, and I found switch threading was faster
    than subroutine threading. I'm assuming it's because it
    obviates all the function call
    overhead.&lt;BR/&gt;&lt;BR/&gt;FICL was never purely
    subroutine-threaded; FICL 3.03 and before were
    struct-containing-pointer-to-subroutine-threaded. (Now you see
    why FICL 4 was 3x
    faster!)&lt;BR/&gt;&lt;BR/&gt;&lt;I&gt;larry&lt;/I&gt;</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5894913897205529613/comments/default/3558659376165108471' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5894913897205529613/comments/default/3558659376165108471' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2008/07/forth-other-white-meat.html?showComment=1216895040000#c3558659376165108471'
    title='' />
    <author>
      <name>Larry Hastings</name>
      <uri>
      http://www.blogger.com/profile/13232068831778121461</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2008/07/forth-other-white-meat.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5894913897205529613'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5894913897205529613'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-905224626' />
    <gd:extendedProperty name='blogger.displayTime'
    value='July 24, 2008 3:24 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-574180740053000019</id>
    <published>2008-07-24T04:15:00.000-07:00</published>
    <updated>2008-07-24T04:15:10.256-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>This comment comes from someone who fell in
    love w...</title>
    <content type='html'>This comment comes from someone who fell
    in love with the ease of "scripting languages". I actually
    started with perl when i switched to Linux, then i switched to
    php (!) and used that for maybe 2-3
    years.&lt;BR/&gt;&lt;BR/&gt;But php clearly left a desire for
    more, the choice was between python and ruby. I picked ruby
    because of an interview with matz who emphasized the human
    aspect. And I like to think in "pure objects" which is why I
    settled for ruby. I am fine with python too though, I think
    python is a much better choice than perl (yes yes, so many C
    dinosaur coders still use perl)&lt;BR/&gt;&lt;BR/&gt;Now I know
    some (old) people who love forth. That is totally fine. But
    coming from the ease of "scripting" languages, especially from
    ruby, I am totally ignorant of languages which I'd know I would
    not write a lot of code anyway, simply because there are too
    many things I would dislike (i dislike some things in ruby too,
    though i love it)&lt;BR/&gt;&lt;BR/&gt;The only language I
    hate, but which I _would_ use, is C. Simply because it is so
    inredibly ubiquitous. &lt;BR/&gt;&lt;BR/&gt;Note - I dont speak
    about concepts in programming languages. Concepts translate to
    ideas for me, and ideas are good.&lt;BR/&gt;&lt;BR/&gt;I only
    speak about syntax AND using a language. I simply can not find
    a use case for a language like Forth for me.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5894913897205529613/comments/default/574180740053000019' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5894913897205529613/comments/default/574180740053000019' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2008/07/forth-other-white-meat.html?showComment=1216898100000#c574180740053000019'
    title='' />
    <author>
      <name>Markus</name>
      <uri>
      http://www.blogger.com/profile/09636171104216432368</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2008/07/forth-other-white-meat.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5894913897205529613'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5894913897205529613'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-766246754' />
    <gd:extendedProperty name='blogger.displayTime'
    value='July 24, 2008 4:15 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-5709183961154294762</id>
    <published>2008-07-24T04:24:00.000-07:00</published>
    <updated>2008-07-24T04:24:42.085-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>&lt;i&gt;"If you have been exposed to some
    of the old TI...</title>
    <content type='html'>&lt;I&gt;"If you have been exposed to some
    of the old TI calculators
    [..]"&lt;/I&gt;&lt;BR/&gt;&lt;BR/&gt;You mean HP calculators I
    guess.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5894913897205529613/comments/default/5709183961154294762' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5894913897205529613/comments/default/5709183961154294762' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2008/07/forth-other-white-meat.html?showComment=1216898640000#c5709183961154294762'
    title='' />
    <author>
      <name>Anonymous</name>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img1.blogblog.com/img/blank.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2008/07/forth-other-white-meat.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5894913897205529613'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5894913897205529613'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1351087406' />
    <gd:extendedProperty name='blogger.displayTime'
    value='July 24, 2008 4:24 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-2610871844607307190</id>
    <published>2008-07-24T04:42:00.000-07:00</published>
    <updated>2008-07-24T04:42:55.617-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Nice article! Just a note - Thinking Forth
    is avai...</title>
    <content type='html'>Nice article! Just a note - Thinking Forth
    is available &lt;A
    HREF="http://thinking-forth.sourceforge.net/"
    REL="nofollow"&gt;here
    (http://thinking-forth.sourceforge.net)&lt;/A&gt; under a
    Creative Commons license.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5894913897205529613/comments/default/2610871844607307190' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5894913897205529613/comments/default/2610871844607307190' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2008/07/forth-other-white-meat.html?showComment=1216899720000#c2610871844607307190'
    title='' />
    <author>
      <name>Nikola Plejic</name>
      <uri>http://nikola.plejic.com/</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img1.blogblog.com/img/blank.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2008/07/forth-other-white-meat.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5894913897205529613'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5894913897205529613'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-136331728' />
    <gd:extendedProperty name='blogger.displayTime'
    value='July 24, 2008 4:42 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-5705184881212958509</id>
    <published>2008-07-24T04:45:00.000-07:00</published>
    <updated>2008-07-24T04:45:51.255-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Yeah baby, we like White
    Meat!&lt;br&gt;&lt;br&gt;JT&lt;br&gt;http:/...</title>
    <content type='html'>Yeah baby, we like White
    Meat!&lt;BR/&gt;&lt;BR/&gt;JT&lt;BR/&gt;http://www.Ultimate-Anonymity.com</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5894913897205529613/comments/default/5705184881212958509' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5894913897205529613/comments/default/5705184881212958509' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2008/07/forth-other-white-meat.html?showComment=1216899900000#c5705184881212958509'
    title='' />
    <author>
      <name>doswheeler</name>
      <uri>
      http://www.blogger.com/profile/09729725828319755126</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2008/07/forth-other-white-meat.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5894913897205529613'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5894913897205529613'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-909736985' />
    <gd:extendedProperty name='blogger.displayTime'
    value='July 24, 2008 4:45 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-7800865477272417212</id>
    <published>2008-07-24T04:47:00.000-07:00</published>
    <updated>2008-07-24T04:47:19.787-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>This is regarding your use of
    then.&lt;br&gt;&lt;br&gt;then - ...</title>
    <content type='html'>This is regarding your use of
    then.&lt;BR/&gt;&lt;BR/&gt;then - at that time; immediately or
    soon afterward&lt;BR/&gt;&lt;BR/&gt;than - used to introduce
    the second member of an unequal comparison; used to express
    choice or diversity&lt;BR/&gt;&lt;BR/&gt;Forth was needed then
    but not now. (then =&amp;gt; time)&lt;BR/&gt;I&amp;#39;d rather
    program using PHP than Forth. (than =&amp;gt; choice)</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5894913897205529613/comments/default/7800865477272417212' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5894913897205529613/comments/default/7800865477272417212' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2008/07/forth-other-white-meat.html?showComment=1216900020000#c7800865477272417212'
    title='' />
    <author>
      <name>Anonymous</name>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img1.blogblog.com/img/blank.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2008/07/forth-other-white-meat.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5894913897205529613'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5894913897205529613'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1730470000' />
    <gd:extendedProperty name='blogger.displayTime'
    value='July 24, 2008 4:47 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-6587038648083214797</id>
    <published>2008-07-24T05:42:00.000-07:00</published>
    <updated>2008-07-24T05:42:06.625-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>You may also want to check out REBOL at
    http://www...</title>
    <content type='html'>You may also want to check out REBOL at
    http://www.rebol.com as it is grown from lisp, forth, and
    self.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5894913897205529613/comments/default/6587038648083214797' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5894913897205529613/comments/default/6587038648083214797' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2008/07/forth-other-white-meat.html?showComment=1216903320000#c6587038648083214797'
    title='' />
    <author>
      <name>Rod Gaither</name>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img1.blogblog.com/img/blank.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2008/07/forth-other-white-meat.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5894913897205529613'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5894913897205529613'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1393354836' />
    <gd:extendedProperty name='blogger.displayTime'
    value='July 24, 2008 5:42 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-413677684016552251</id>
    <published>2008-07-24T07:02:00.000-07:00</published>
    <updated>2008-07-24T07:02:14.779-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Are you saying that we should learn Forth
    because ...</title>
    <content type='html'>Are you saying that we should learn Forth
    because we can write Forth-like programs in other languages?
    &lt;BR/&gt;&lt;BR/&gt;Is this desirable? How do we know that
    the Forth metaphor of a data stack and an operations is useful
    in Java?</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5894913897205529613/comments/default/413677684016552251' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5894913897205529613/comments/default/413677684016552251' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2008/07/forth-other-white-meat.html?showComment=1216908120000#c413677684016552251'
    title='' />
    <author>
      <name>Jonathan Mark</name>
      <uri>
      http://www.blogger.com/profile/09894381634305706029</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2008/07/forth-other-white-meat.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5894913897205529613'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5894913897205529613'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-674764064' />
    <gd:extendedProperty name='blogger.displayTime'
    value='July 24, 2008 7:02 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-2074191111388265307</id>
    <published>2008-07-24T07:41:00.000-07:00</published>
    <updated>2008-07-24T07:41:56.411-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Jonathan Mark said...&lt;br&gt;...because we
    can write F...</title>
    <content type='html'>Jonathan Mark said...&lt;BR/&gt;...because
    we can write Forth-like programs in other languages? Is this
    desirable? How do we know that the Forth metaphor of a data
    stack and an operations is useful in
    Java?&lt;BR/&gt;&lt;BR/&gt;I certainly won't be for _all_
    programs, but you'd never be able to tell what the 'forth
    metaphor' might be good for if you don't even know what it is.
    It was probably useful for the people who wrote the JVM, since
    it's stack based, and for the people who wrote PS, and probably
    many others.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5894913897205529613/comments/default/2074191111388265307' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5894913897205529613/comments/default/2074191111388265307' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2008/07/forth-other-white-meat.html?showComment=1216910460000#c2074191111388265307'
    title='' />
    <author>
      <name>Anonymous</name>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img1.blogblog.com/img/blank.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2008/07/forth-other-white-meat.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5894913897205529613'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5894913897205529613'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1116369946' />
    <gd:extendedProperty name='blogger.displayTime'
    value='July 24, 2008 7:41 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-2226882887954240731</id>
    <published>2008-07-24T08:42:00.000-07:00</published>
    <updated>2008-07-24T08:42:56.468-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>My first full-time programming job was in a
    Forth ...</title>
    <content type='html'>My first full-time programming job was in
    a Forth shop, 25 years ago, writing consumer apps for Apple ][
    and IBM-PC.&lt;BR/&gt;&lt;BR/&gt;: battlecry forth love not if
    dead drop rot and then ;</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5894913897205529613/comments/default/2226882887954240731' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5894913897205529613/comments/default/2226882887954240731' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2008/07/forth-other-white-meat.html?showComment=1216914120000#c2226882887954240731'
    title='' />
    <author>
      <name>Anonymous</name>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img1.blogblog.com/img/blank.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2008/07/forth-other-white-meat.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5894913897205529613'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5894913897205529613'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-339512158' />
    <gd:extendedProperty name='blogger.displayTime'
    value='July 24, 2008 8:42 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-6318255552730039016</id>
    <published>2008-07-24T09:40:00.000-07:00</published>
    <updated>2008-07-24T09:40:18.820-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Thanks for reviving this discussion with a
    thought...</title>
    <content type='html'>Thanks for reviving this discussion with a
    thoughtful article. Forth suffered from overhype and from the
    concerted efforts of some members of the community to prevent
    the development of a standard. &lt;BR/&gt;&lt;BR/&gt;Consigned
    to the reliquary, it is still an extraordinarily useful little
    language - both as an example of how simple an interpreter can
    be, because of its refreshing transparency about memory, and
    because you can get stuff done really fast. It's great for
    wrapping a hardware layer - the Sun Open Boot ROM is a Forth
    dialect, for example. The FreeBSD boot loader uses Ficl.
    &lt;BR/&gt;&lt;BR/&gt;Its strengths can be weaknesses if you
    apply the language to the wrong kind of problem - particularly
    anything that requires a lot of string handling or garbage
    collection. Please do not try to write a web server in Forth -
    it's like teaching a pig to read: it wastes your time and
    annoys the pig.&lt;BR/&gt;&lt;BR/&gt;Ficl is available at
    ficl.sf.net&lt;BR/&gt;Use responsibly ;-)</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5894913897205529613/comments/default/6318255552730039016' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5894913897205529613/comments/default/6318255552730039016' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2008/07/forth-other-white-meat.html?showComment=1216917600000#c6318255552730039016'
    title='' />
    <author>
      <name>john sadler</name>
      <uri>
      http://www.blogger.com/profile/12705948866488094667</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2008/07/forth-other-white-meat.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5894913897205529613'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5894913897205529613'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-935617372' />
    <gd:extendedProperty name='blogger.displayTime'
    value='July 24, 2008 9:40 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-5372914270804561370</id>
    <published>2008-07-24T09:56:00.000-07:00</published>
    <updated>2008-07-24T09:56:23.999-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Good article! I am going to start messing
    around ...</title>
    <content type='html'>Good article! I am going to start messing
    around with gforth. I was always a lisp fan, but never got to
    use it professionally other than in the subset of lisp
    implemented in AutoCAD (AutoLISP).&lt;BR/&gt;&lt;BR/&gt;The
    only FORTH implementation I can think of in my current role
    would be customizing Sun's Open Boot Prom, but that could be
    interesting.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5894913897205529613/comments/default/5372914270804561370' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5894913897205529613/comments/default/5372914270804561370' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2008/07/forth-other-white-meat.html?showComment=1216918560000#c5372914270804561370'
    title='' />
    <author>
      <name>keck</name>
      <uri>http://perlhack.com</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img1.blogblog.com/img/blank.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2008/07/forth-other-white-meat.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5894913897205529613'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5894913897205529613'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1962400333' />
    <gd:extendedProperty name='blogger.displayTime'
    value='July 24, 2008 9:56 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-6371029677004242498</id>
    <published>2008-07-24T10:09:00.000-07:00</published>
    <updated>2008-07-24T10:09:55.428-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>you should learn forth because it KICKS
    ASS!&lt;br&gt;&lt;b...</title>
    <content type='html'>you should learn forth because it KICKS
    ASS!&lt;BR/&gt;&lt;BR/&gt;i also have basically just use
    scripting languages professionally, but my love of learning
    different languages paid off
    recently.&lt;BR/&gt;&lt;BR/&gt;i've been using a home-rolled
    forth on a super-simple virtual stack machine as a control
    language for a bot to work a complicated web-based interface. i
    had been casually reading about forth for a while.
    &lt;BR/&gt;&lt;BR/&gt;the project was getting way out of hand
    until i decided to try forth as the basis for my control
    language. suddenly total code size shrunk to a fraction the
    original size and became more flexible and powerful.
    &lt;BR/&gt;&lt;BR/&gt;the forth style is just a great way of
    approaching things, you need a new language feature, you just
    add it, no macros, meta-level libraries, compiling, just do it.
    &lt;BR/&gt;&lt;BR/&gt;the program forth is executing is
    available at run time, you can add whatever features to the
    parser you like. i wanted a new quoting operator that behaves
    entirely differently from the one i built in, it was simple to
    add it, only a few lines.&lt;BR/&gt;&lt;BR/&gt;next step,
    adding exception handling to my little forth DSL. this is a
    little harder, but i know it's possible, and i also know it
    won't require rewriting my forth DSL library, it requires
    nothing more than adding a few new words to the dictionary.
    likewise, other new control structures don't require redefining
    the language in the interpreter, the language is MADE to be
    redefined!&lt;BR/&gt;&lt;BR/&gt;google for jonesforth, this was
    a big help to me "getting it".</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5894913897205529613/comments/default/6371029677004242498' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5894913897205529613/comments/default/6371029677004242498' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2008/07/forth-other-white-meat.html?showComment=1216919340000#c6371029677004242498'
    title='' />
    <author>
      <name>Anonymous</name>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img1.blogblog.com/img/blank.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2008/07/forth-other-white-meat.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5894913897205529613'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5894913897205529613'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-548963473' />
    <gd:extendedProperty name='blogger.displayTime'
    value='July 24, 2008 10:09 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-4695962958663310096</id>
    <published>2008-07-24T10:47:00.000-07:00</published>
    <updated>2008-07-24T10:47:58.276-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>If you program for the Palm, you may find
    &lt;a href=...</title>
    <content type='html'>If you program for the Palm, you may find
    &lt;A HREF="http://quartus.net" REL="nofollow"&gt;Quartus
    Forth&lt;/A&gt; to be a much more productive environment than
    Codewarrior.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5894913897205529613/comments/default/4695962958663310096' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5894913897205529613/comments/default/4695962958663310096' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2008/07/forth-other-white-meat.html?showComment=1216921620000#c4695962958663310096'
    title='' />
    <author>
      <name>David Richardson</name>
      <uri>
      http://www.blogger.com/profile/16383569868472496507</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2008/07/forth-other-white-meat.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5894913897205529613'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5894913897205529613'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1835795549' />
    <gd:extendedProperty name='blogger.displayTime'
    value='July 24, 2008 10:47 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-1888262750422628728</id>
    <published>2008-07-24T14:16:00.000-07:00</published>
    <updated>2008-07-24T14:16:58.294-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>"Long before any one had ever heard of Agile
    Metho...</title>
    <content type='html'>"Long before any one had ever heard of
    Agile Methodologies or Extreme Programing the idea of factoring
    was already hard at work in the Forth
    community."&lt;BR/&gt;&lt;BR/&gt;It's called "refactoring", not
    factoring, and it predates the agile/xp goons by almost ten
    years. The Fowler book has nothing to do with Agile/Scrumm/etc,
    which is why it's good and useful.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5894913897205529613/comments/default/1888262750422628728' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5894913897205529613/comments/default/1888262750422628728' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2008/07/forth-other-white-meat.html?showComment=1216934160000#c1888262750422628728'
    title='' />
    <author>
      <name>StoneCypher</name>
      <uri>
      http://www.blogger.com/profile/07701245705928548668</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2008/07/forth-other-white-meat.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5894913897205529613'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5894913897205529613'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1607075083' />
    <gd:extendedProperty name='blogger.displayTime'
    value='July 24, 2008 2:16 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-4395155694751494834</id>
    <published>2008-07-28T22:01:00.000-07:00</published>
    <updated>2008-07-28T22:01:37.273-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>@astrobe&lt;br&gt;&lt;br&gt; Thanks for the
    correction</title>
    <content type='html'>@astrobe&lt;BR/&gt;&lt;BR/&gt; Thanks for
    the correction</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5894913897205529613/comments/default/4395155694751494834' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5894913897205529613/comments/default/4395155694751494834' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2008/07/forth-other-white-meat.html?showComment=1217307660000#c4395155694751494834'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='24' height='32'
      src='http://www.ericmerritt.net/eric.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2008/07/forth-other-white-meat.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5894913897205529613'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5894913897205529613'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='July 28, 2008 10:01 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-6405910927424113411</id>
    <published>2008-07-30T03:35:00.000-07:00</published>
    <updated>2008-07-30T03:35:21.553-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Good Job! :)</title>
    <content type='html'>Good Job! :)</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/845605515266939130/comments/default/6405910927424113411' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/845605515266939130/comments/default/6405910927424113411' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/01/building-again.html?showComment=1217414100000#c6405910927424113411'
    title='' />
    <author>
      <name>fahrschule w&#195;&#188;rzburg</name>
      <uri>http://www.fahrschule-leicht.de/</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img1.blogblog.com/img/blank.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/01/building-again.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-845605515266939130'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/845605515266939130'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-930808989' />
    <gd:extendedProperty name='blogger.displayTime'
    value='July 30, 2008 3:35 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-2732976908928653861</id>
    <published>2008-09-20T13:14:00.000-07:00</published>
    <updated>2008-09-20T13:14:13.056-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>I'm very late in chiming in... but you
    should chec...</title>
    <content type='html'>I'm very late in chiming in... but you
    should check out Cappuccino. &lt;BR/&gt;&lt;BR/&gt;Tossing a
    Cappuccino app on top of a collection of Erlang-powered
    web-services sounds like a beautiful marriage, especially when
    it comes to scaling (using something like Fuzed).</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/2732976908928653861' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/2732976908928653861' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html?showComment=1221941640000#c2732976908928653861'
    title='' />
    <author>
      <name>Mason Browne</name>
      <uri>
      http://www.blogger.com/profile/00804161205529027049</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-970665623589855073'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/970665623589855073'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-995567714' />
    <gd:extendedProperty name='blogger.displayTime'
    value='September 20, 2008 1:14 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-1453743036278371878</id>
    <published>2009-01-25T10:23:00.000-08:00</published>
    <updated>2009-01-25T10:23:47.086-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Hello,&lt;br&gt;&lt;br&gt;Did you implement
    something in Erlan...</title>
    <content type='html'>Hello,&lt;BR/&gt;&lt;BR/&gt;Did you
    implement something in Erlang ? It could be a very interesting
    module.&lt;BR/&gt;&lt;BR/&gt;Thank you</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/2696282067342390117/comments/default/1453743036278371878' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/2696282067342390117/comments/default/1453743036278371878' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2008/03/event-based-stream-parsing-for.html?showComment=1232907780000#c1453743036278371878'
    title='' />
    <author>
      <name>Anonymous</name>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img1.blogblog.com/img/blank.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2008/03/event-based-stream-parsing-for.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-2696282067342390117'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/2696282067342390117'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1059669992' />
    <gd:extendedProperty name='blogger.displayTime'
    value='January 25, 2009 10:23 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-5557467296641885977</id>
    <published>2009-01-25T11:23:00.000-08:00</published>
    <updated>2009-01-25T11:23:47.265-08:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>I haven't. I implemented it in python
    talking to a...</title>
    <content type='html'>I haven't. I implemented it in python
    talking to an Erlang based system. but I have not yet
    implemented it in Erlang. I just haven't had a need.
    Sorry.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/2696282067342390117/comments/default/5557467296641885977' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/2696282067342390117/comments/default/5557467296641885977' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2008/03/event-based-stream-parsing-for.html?showComment=1232911380000#c5557467296641885977'
    title='' />
    <author>
      <name>Eric</name>
      <uri>
      http://www.blogger.com/profile/13285755330143985259</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='25' height='32'
      src='http://3.bp.blogspot.com/_ANyxHXjGVwM/SPFikpE9trI/AAAAAAAABJI/ZKmnc5A5n-Q/S220/8168977962897173317.jpeg___150_500_150_600_08a9f2db_.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2008/03/event-based-stream-parsing-for.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-2696282067342390117'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/2696282067342390117'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1902199447' />
    <gd:extendedProperty name='blogger.displayTime'
    value='January 25, 2009 11:23 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-3507350418677510780</id>
    <published>2009-03-18T05:11:00.000-07:00</published>
    <updated>2009-04-19T11:56:12.923-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'></title>
    <content type='html'>This comment has been removed by a blog
    administrator.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5049029583926631782/comments/default/3507350418677510780' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5049029583926631782/comments/default/3507350418677510780' />
    <author>
      <name>buy wow gold</name>
      <uri>
      http://www.blogger.com/profile/02333189842068626499</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/05/distributed-bug-tracking.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5049029583926631782'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5049029583926631782'
    type='text/html' />
    <gd:extendedProperty name='blogger.contentRemoved'
    value='true' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-418880992' />
    <gd:extendedProperty name='blogger.displayTime'
    value='March 18, 2009 5:11 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-3017666355002426414</id>
    <published>2009-03-25T14:56:00.000-07:00</published>
    <updated>2009-03-25T14:56:53.724-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Dude -- that's a fantastic idea! Make it
    so!</title>
    <content type='html'>Dude -- that's a fantastic idea! Make it
    so!</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5285631316489642946/comments/default/3017666355002426414' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5285631316489642946/comments/default/3017666355002426414' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2008/01/build-process-integration.html?showComment=1238018160000#c3017666355002426414'
    title='' />
    <author>
      <name>Sunny G</name>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img1.blogblog.com/img/blank.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2008/01/build-process-integration.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5285631316489642946'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5285631316489642946'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-561902266' />
    <gd:extendedProperty name='blogger.displayTime'
    value='March 25, 2009 2:56 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-1524288196511182838</id>
    <published>2009-04-19T02:31:00.000-07:00</published>
    <updated>2009-04-19T11:56:05.156-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'></title>
    <content type='html'>This comment has been removed by a blog
    administrator.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5049029583926631782/comments/default/1524288196511182838' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5049029583926631782/comments/default/1524288196511182838' />
    <author>
      <name>
      &#230;&#162;&#166;&#228;&#184;&#173;&#230;&#382;&#8212;</name>
      <uri>
      http://www.blogger.com/profile/14091023714453407460</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/05/distributed-bug-tracking.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5049029583926631782'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5049029583926631782'
    type='text/html' />
    <gd:extendedProperty name='blogger.contentRemoved'
    value='true' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1899898284' />
    <gd:extendedProperty name='blogger.displayTime'
    value='April 19, 2009 2:31 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-3885213793853989816</id>
    <published>2009-04-19T11:51:00.000-07:00</published>
    <updated>2009-04-19T11:55:50.526-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'></title>
    <content type='html'>This comment has been removed by a blog
    administrator.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5049029583926631782/comments/default/3885213793853989816' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5049029583926631782/comments/default/3885213793853989816' />
    <author>
      <name>belrion</name>
      <uri>
      http://www.blogger.com/profile/01446266479272517290</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/05/distributed-bug-tracking.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5049029583926631782'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5049029583926631782'
    type='text/html' />
    <gd:extendedProperty name='blogger.contentRemoved'
    value='true' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-451242423' />
    <gd:extendedProperty name='blogger.displayTime'
    value='April 19, 2009 11:51 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-3752434592656557801</id>
    <published>2009-04-20T20:20:00.000-07:00</published>
    <updated>2009-04-20T20:25:11.091-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'></title>
    <content type='html'>This comment has been removed by a blog
    administrator.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5049029583926631782/comments/default/3752434592656557801' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5049029583926631782/comments/default/3752434592656557801' />
    <author>
      <name>feilin</name>
      <uri>
      http://www.blogger.com/profile/09706088975773042825</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/05/distributed-bug-tracking.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5049029583926631782'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5049029583926631782'
    type='text/html' />
    <gd:extendedProperty name='blogger.contentRemoved'
    value='true' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-870086833' />
    <gd:extendedProperty name='blogger.displayTime'
    value='April 20, 2009 8:20 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-3473665796726029899</id>
    <published>2009-04-24T04:54:00.000-07:00</published>
    <updated>2009-04-27T19:45:33.656-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'></title>
    <content type='html'>This comment has been removed by a blog
    administrator.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5049029583926631782/comments/default/3473665796726029899' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5049029583926631782/comments/default/3473665796726029899' />
    <author>
      <name>buy wow gold</name>
      <uri>
      http://www.blogger.com/profile/16743530840081429176</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/05/distributed-bug-tracking.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5049029583926631782'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5049029583926631782'
    type='text/html' />
    <gd:extendedProperty name='blogger.contentRemoved'
    value='true' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-2022598904' />
    <gd:extendedProperty name='blogger.displayTime'
    value='April 24, 2009 4:54 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-3298077812168822445</id>
    <published>2009-04-27T18:15:00.000-07:00</published>
    <updated>2009-04-27T19:45:22.744-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'></title>
    <content type='html'>This comment has been removed by a blog
    administrator.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5049029583926631782/comments/default/3298077812168822445' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5049029583926631782/comments/default/3298077812168822445' />
    <author>
      <name>Anonymous</name>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img1.blogblog.com/img/blank.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/05/distributed-bug-tracking.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5049029583926631782'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5049029583926631782'
    type='text/html' />
    <gd:extendedProperty name='blogger.contentRemoved'
    value='true' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1072879202' />
    <gd:extendedProperty name='blogger.displayTime'
    value='April 27, 2009 6:15 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-3561794044497287625</id>
    <published>2009-04-27T18:25:00.000-07:00</published>
    <updated>2009-04-27T19:45:13.633-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'></title>
    <content type='html'>This comment has been removed by a blog
    administrator.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5049029583926631782/comments/default/3561794044497287625' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5049029583926631782/comments/default/3561794044497287625' />
    <author>
      <name>Anonymous</name>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img1.blogblog.com/img/blank.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/05/distributed-bug-tracking.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5049029583926631782'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5049029583926631782'
    type='text/html' />
    <gd:extendedProperty name='blogger.contentRemoved'
    value='true' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1390154820' />
    <gd:extendedProperty name='blogger.displayTime'
    value='April 27, 2009 6:25 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-3481052971268068946</id>
    <published>2009-04-27T18:36:00.000-07:00</published>
    <updated>2009-04-27T19:45:02.193-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'></title>
    <content type='html'>This comment has been removed by a blog
    administrator.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5049029583926631782/comments/default/3481052971268068946' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5049029583926631782/comments/default/3481052971268068946' />
    <author>
      <name>Anonymous</name>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img1.blogblog.com/img/blank.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/05/distributed-bug-tracking.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5049029583926631782'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5049029583926631782'
    type='text/html' />
    <gd:extendedProperty name='blogger.contentRemoved'
    value='true' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1575564866' />
    <gd:extendedProperty name='blogger.displayTime'
    value='April 27, 2009 6:36 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-8397143773576125720</id>
    <published>2010-04-08T20:38:20.984-07:00</published>
    <updated>2010-04-08T20:38:20.984-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Great blog, keep up the good work. Glad to
    see sit...</title>
    <content type='html'>Great blog, keep up the good work. Glad to
    see sites like this.&lt;br /&gt;&lt;a
    href="http://www.itemplatez.com" rel="nofollow"&gt; software
    consultancy &lt;/a&gt;</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/8397143773576125720' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/970665623589855073/comments/default/8397143773576125720' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html?showComment=1270784300984#c8397143773576125720'
    title='' />
    <author>
      <name>patrick</name>
      <uri>
      http://www.blogger.com/profile/06100573912212571129</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='32' height='11'
      src='http://1.bp.blogspot.com/_5LCwf4NXnpQ/S7wqqSxhG0I/AAAAAAAAAAM/gw3SFDpwVaM/S220/logo.gif.jpg' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2007/04/erlang-and-web.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-970665623589855073'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/970665623589855073'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1891191727' />
    <gd:extendedProperty name='blogger.displayTime'
    value='April 8, 2010 8:38 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-5794377027821590630</id>
    <published>2010-04-28T03:26:55.130-07:00</published>
    <updated>2010-04-28T03:26:55.130-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>Interesting idea. Thanks for sharing this
    informat...</title>
    <content type='html'>Interesting idea. Thanks for sharing this
    information. Nice post.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5285631316489642946/comments/default/5794377027821590630' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5285631316489642946/comments/default/5794377027821590630' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2008/01/build-process-integration.html?showComment=1272450415130#c5794377027821590630'
    title='' />
    <author>
      <name>call centers philippines</name>
      <uri>http://www.callcenterphilippines.org</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img1.blogblog.com/img/blank.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2008/01/build-process-integration.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5285631316489642946'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5285631316489642946'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1930991549' />
    <gd:extendedProperty name='blogger.displayTime'
    value='April 28, 2010 3:26 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-2145762513701310120</id>
    <published>2011-04-25T01:47:04.614-07:00</published>
    <updated>2011-04-25T01:47:04.614-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>That was quite interesting. Do you have any
    update...</title>
    <content type='html'>That was quite interesting. Do you have
    any update on the Trac system?</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5285631316489642946/comments/default/2145762513701310120' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5285631316489642946/comments/default/2145762513701310120' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2008/01/build-process-integration.html?showComment=1303721224614#c2145762513701310120'
    title='' />
    <author>
      <name>BPO Philippines</name>
      <uri>http://www.zephyrcom.net/bpo_philippines/</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img1.blogblog.com/img/blank.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2008/01/build-process-integration.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5285631316489642946'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5285631316489642946'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1522506813' />
    <gd:extendedProperty name='blogger.displayTime'
    value='April 25, 2011 1:47 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-713650181164230825</id>
    <published>2011-04-25T07:02:20.370-07:00</published>
    <updated>2011-04-25T07:02:20.370-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'>None of these have been implemented as yet.
    These ...</title>
    <content type='html'>None of these have been implemented as
    yet. These are just ideas that I have that I would like to see
    interested.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5285631316489642946/comments/default/713650181164230825' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5285631316489642946/comments/default/713650181164230825' />
    <link rel='alternate' type='text/html'
    href='http://erlangish.blogspot.com/2008/01/build-process-integration.html?showComment=1303740140370#c713650181164230825'
    title='' />
    <author>
      <name>Eric Merritt</name>
      <uri>
      http://www.blogger.com/profile/17041376720090473002</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img2.blogblog.com/img/b16-rounded.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2008/01/build-process-integration.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5285631316489642946'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5285631316489642946'
    type='text/html' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-119652644' />
    <gd:extendedProperty name='blogger.displayTime'
    value='April 25, 2011 7:02 AM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-6181017796261924282</id>
    <published>2011-06-17T20:49:24.782-07:00</published>
    <updated>2011-06-18T06:51:07.205-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'></title>
    <content type='html'>This comment has been removed by a blog
    administrator.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5285631316489642946/comments/default/6181017796261924282' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5285631316489642946/comments/default/6181017796261924282' />
    <author>
      <name>water heater dallas</name>
      <uri>http://www.waterheatersdallastx.com/</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img1.blogblog.com/img/blank.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2008/01/build-process-integration.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5285631316489642946'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5285631316489642946'
    type='text/html' />
    <gd:extendedProperty name='blogger.contentRemoved'
    value='true' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-1557084849' />
    <gd:extendedProperty name='blogger.displayTime'
    value='June 17, 2011 8:49 PM' />
  </entry>
  <entry>
    <id>
    tag:blogger.com,1999:blog-7012030999962875668.post-3756101323134558907</id>
    <published>2011-06-18T05:31:18.491-07:00</published>
    <updated>2011-06-18T06:50:57.855-07:00</updated>
    <category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/blogger/2008/kind#comment' />
    <title type='text'></title>
    <content type='html'>This comment has been removed by a blog
    administrator.</content>
    <link rel='edit' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5285631316489642946/comments/default/3756101323134558907' />
    <link rel='self' type='application/atom+xml'
    href='http://www.blogger.com/feeds/7012030999962875668/5285631316489642946/comments/default/3756101323134558907' />
    <author>
      <name>Subscriber Management System</name>
      <uri>
      http://www.reliablesoft.co.in/Subscriber-Management-System.aspx</uri>
      <email>noreply@blogger.com</email>
      <gd:image rel='http://schemas.google.com/g/2005#thumbnail'
      width='16' height='16'
      src='http://img1.blogblog.com/img/blank.gif' />
    </author>
    <thr:in-reply-to href='http://erlangish.blogspot.com/2008/01/build-process-integration.html'
    ref='tag:blogger.com,1999:blog-7012030999962875668.post-5285631316489642946'
    source='http://www.blogger.com/feeds/7012030999962875668/posts/default/5285631316489642946'
    type='text/html' />
    <gd:extendedProperty name='blogger.contentRemoved'
    value='true' />
    <gd:extendedProperty name='blogger.itemClass'
    value='pid-284889297' />
    <gd:extendedProperty name='blogger.displayTime'
    value='June 18, 2011 5:31 AM' />
  </entry>
</feed>
